

================================================================
== Vivado HLS Report for 'qam_runner'
================================================================
* Date:           Wed May 20 01:33:13 2015

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        QAM_Runner
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.75|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|        20|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+------------------------+-----+-----+---------+--------------+--------+
|        RTL Ports       | Dir | Bits| Protocol| Source Object| C Type |
+------------------------+-----+-----+---------+--------------+--------+
|s_axi_AXILiteS_AWVALID  |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_AWREADY  | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_AWADDR   |  in |    7|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WVALID   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WREADY   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WDATA    |  in |   32|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WSTRB    |  in |    4|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARVALID  |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARREADY  | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARADDR   |  in |    7|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RVALID   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RREADY   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RDATA    | out |   32|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RRESP    | out |    2|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BVALID   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BREADY   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BRESP    | out |    2|  s_axi  |   AXILiteS   | scalar |
+------------------------+-----+-----+---------+--------------+--------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 38
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / (tmp_6)
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	19  / true
* FSM state operations: 

 <State 1>: 8.75ns
ST_1: p_Val2_s [1/1] 0.00ns
:0  %p_Val2_s = alloca i12, align 2

ST_1: p_Val2_1 [1/1] 0.00ns
:1  %p_Val2_1 = alloca i12, align 2

ST_1: p_req17 [2/2] 8.75ns
:39  %p_req17 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_1: m_s2mm_ctl_addr [1/1] 0.00ns
:44  %m_s2mm_ctl_addr = getelementptr i32* %m_s2mm_ctl, i64 12

ST_1: p_req27 [2/2] 8.75ns
:45  %p_req27 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 2>: 8.75ns
ST_2: p_req17 [1/2] 8.75ns
:39  %p_req17 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_2: p_req27 [1/2] 8.75ns
:45  %p_req27 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 3>: 8.75ns
ST_3: m_mm2s_ctl_req15 [1/1] 8.75ns
:41  %m_mm2s_ctl_req15 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_3: stg_47 [1/1] 8.75ns
:42  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 0)

ST_3: m_mm2s_ctl_resp16 [2/2] 8.75ns
:43  %m_mm2s_ctl_resp16 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_3: m_s2mm_ctl_addr_req25 [1/1] 8.75ns
:47  %m_s2mm_ctl_addr_req25 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_3: stg_50 [1/1] 8.75ns
:48  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 0)

ST_3: m_s2mm_ctl_addr_resp26 [2/2] 8.75ns
:49  %m_s2mm_ctl_addr_resp26 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 4>: 8.75ns
ST_4: control_in_reg_init_read [1/1] 0.00ns
:17  %control_in_reg_init_read = call float @_ssdm_op_Read.ap_vld.float(float %control_in_reg_init)

ST_4: control_in_reg_clr_read [1/1] 0.00ns
:18  %control_in_reg_clr_read = call i1 @_ssdm_op_Read.ap_vld.i1(i1 %control_in_reg_clr)

ST_4: control_in_lf_out_gain_read [1/1] 0.00ns
:19  %control_in_lf_out_gain_read = call i8 @_ssdm_op_Read.ap_vld.i8(i8 %control_in_lf_out_gain)

ST_4: control_in_lf_i_read [1/1] 0.00ns
:20  %control_in_lf_i_read = call i8 @_ssdm_op_Read.ap_vld.i8(i8 %control_in_lf_i)

ST_4: control_in_lf_p_read [1/1] 0.00ns
:21  %control_in_lf_p_read = call i8 @_ssdm_op_Read.ap_vld.i8(i8 %control_in_lf_p)

ST_4: iterations_read [1/1] 0.00ns
:22  %iterations_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %iterations)

ST_4: destinationAddress_read [1/1] 0.00ns
:23  %destinationAddress_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %destinationAddress)

ST_4: sourceAddress_read [1/1] 0.00ns
:24  %sourceAddress_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %sourceAddress)

ST_4: empty [1/1] 8.75ns
:40  %empty = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_4: m_mm2s_ctl_resp16 [1/2] 8.75ns
:43  %m_mm2s_ctl_resp16 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_4: empty_82 [1/1] 8.75ns
:46  %empty_82 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_4: m_s2mm_ctl_addr_resp26 [1/2] 8.75ns
:49  %m_s2mm_ctl_addr_resp26 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_4: m_mm2s_ctl_load_req [2/2] 8.75ns
:50  %m_mm2s_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_4: m_s2mm_ctl_load_req [2/2] 8.75ns
:58  %m_s2mm_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_4: isNeg [1/1] 0.00ns
:130  %isNeg = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %control_in_lf_p_read, i32 7)

ST_4: isNeg_2 [1/1] 0.00ns
:143  %isNeg_2 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %control_in_lf_out_gain_read, i32 7)


 <State 5>: 8.75ns
ST_5: m_mm2s_ctl_load_req [1/2] 8.75ns
:50  %m_mm2s_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_5: m_mm2s_ctl_read [1/1] 8.75ns
:51  %m_mm2s_ctl_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_5: tmp_13 [1/1] 0.00ns
:52  %tmp_13 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %m_mm2s_ctl_read, i32 3, i32 31)

ST_5: tmp_15 [1/1] 0.00ns
:53  %tmp_15 = trunc i32 %m_mm2s_ctl_read to i2

ST_5: m_s2mm_ctl_load_req [1/2] 8.75ns
:58  %m_s2mm_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_5: m_s2mm_ctl_addr_read [1/1] 8.75ns
:59  %m_s2mm_ctl_addr_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_5: tmp_18 [1/1] 0.00ns
:60  %tmp_18 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %m_s2mm_ctl_addr_read, i32 3, i32 31)

ST_5: tmp_21 [1/1] 0.00ns
:61  %tmp_21 = trunc i32 %m_s2mm_ctl_addr_read to i2


 <State 6>: 8.75ns
ST_6: m_mm2s_ctl_assign [1/1] 0.00ns
:54  %m_mm2s_ctl_assign = call i32 @_ssdm_op_BitConcatenate.i32.i29.i1.i2(i29 %tmp_13, i1 true, i2 %tmp_15)

ST_6: m_mm2s_ctl_req13 [1/1] 8.75ns
:55  %m_mm2s_ctl_req13 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_6: stg_78 [1/1] 8.75ns
:56  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 %m_mm2s_ctl_assign)

ST_6: m_mm2s_ctl_resp14 [2/2] 8.75ns
:57  %m_mm2s_ctl_resp14 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_6: tmp [1/1] 0.00ns
:62  %tmp = call i32 @_ssdm_op_BitConcatenate.i32.i29.i1.i2(i29 %tmp_18, i1 true, i2 %tmp_21)

ST_6: m_s2mm_ctl_addr_req23 [1/1] 8.75ns
:63  %m_s2mm_ctl_addr_req23 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_6: stg_82 [1/1] 8.75ns
:64  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 %tmp)

ST_6: m_s2mm_ctl_addr_resp24 [2/2] 8.75ns
:65  %m_s2mm_ctl_addr_resp24 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 7>: 8.75ns
ST_7: m_mm2s_ctl_resp14 [1/2] 8.75ns
:57  %m_mm2s_ctl_resp14 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_7: m_s2mm_ctl_addr_resp24 [1/2] 8.75ns
:65  %m_s2mm_ctl_addr_resp24 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_7: p_req [2/2] 8.75ns
:66  %p_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_7: p_req22 [2/2] 8.75ns
:71  %p_req22 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 8>: 8.75ns
ST_8: p_req [1/2] 8.75ns
:66  %p_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_8: p_req22 [1/2] 8.75ns
:71  %p_req22 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 9>: 8.75ns
ST_9: m_mm2s_ctl_req11 [1/1] 8.75ns
:68  %m_mm2s_ctl_req11 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_9: stg_91 [1/1] 8.75ns
:69  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 0)

ST_9: m_mm2s_ctl_resp12 [2/2] 8.75ns
:70  %m_mm2s_ctl_resp12 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_9: m_s2mm_ctl_addr_req20 [1/1] 8.75ns
:73  %m_s2mm_ctl_addr_req20 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_9: stg_94 [1/1] 8.75ns
:74  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 0)

ST_9: m_s2mm_ctl_addr_resp21 [2/2] 8.75ns
:75  %m_s2mm_ctl_addr_resp21 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 10>: 8.75ns
ST_10: empty_83 [1/1] 8.75ns
:67  %empty_83 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_10: m_mm2s_ctl_resp12 [1/2] 8.75ns
:70  %m_mm2s_ctl_resp12 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_10: empty_84 [1/1] 8.75ns
:72  %empty_84 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_10: m_s2mm_ctl_addr_resp21 [1/2] 8.75ns
:75  %m_s2mm_ctl_addr_resp21 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_10: m_mm2s_ctl_load_1_req [2/2] 8.75ns
:76  %m_mm2s_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_10: m_s2mm_ctl_load_1_req [2/2] 8.75ns
:100  %m_s2mm_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 11>: 8.75ns
ST_11: m_mm2s_ctl_load_1_req [1/2] 8.75ns
:76  %m_mm2s_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_11: m_mm2s_ctl_read_1 [1/1] 8.75ns
:77  %m_mm2s_ctl_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_11: tmp_29 [1/1] 0.00ns
:78  %tmp_29 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %m_mm2s_ctl_read_1, i32 1, i32 31)

ST_11: m_s2mm_ctl_load_1_req [1/2] 8.75ns
:100  %m_s2mm_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_11: m_s2mm_ctl_addr_read_1 [1/1] 8.75ns
:101  %m_s2mm_ctl_addr_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_11: tmp_37 [1/1] 0.00ns
:102  %tmp_37 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %m_s2mm_ctl_addr_read_1, i32 1, i32 31)


 <State 12>: 8.75ns
ST_12: tmp_1 [1/1] 0.00ns
:79  %tmp_1 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_29, i1 true)

ST_12: m_mm2s_ctl_req9 [1/1] 8.75ns
:80  %m_mm2s_ctl_req9 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_12: stg_110 [1/1] 8.75ns
:81  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 %tmp_1)

ST_12: m_mm2s_ctl_resp10 [2/2] 8.75ns
:82  %m_mm2s_ctl_resp10 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_12: tmp_4 [1/1] 0.00ns
:103  %tmp_4 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_37, i1 true)

ST_12: m_s2mm_ctl_addr_req18 [1/1] 8.75ns
:104  %m_s2mm_ctl_addr_req18 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_12: stg_114 [1/1] 8.75ns
:105  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 %tmp_4)

ST_12: m_s2mm_ctl_addr_resp19 [2/2] 8.75ns
:106  %m_s2mm_ctl_addr_resp19 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 13>: 8.75ns
ST_13: m_mm2s_ctl_resp10 [1/2] 8.75ns
:82  %m_mm2s_ctl_resp10 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_13: m_mm2s_ctl_load_2_req [2/2] 8.75ns
:83  %m_mm2s_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_13: m_s2mm_ctl_addr_resp19 [1/2] 8.75ns
:106  %m_s2mm_ctl_addr_resp19 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_13: m_s2mm_ctl_load_2_req [2/2] 8.75ns
:107  %m_s2mm_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 14>: 8.75ns
ST_14: m_mm2s_ctl_load_2_req [1/2] 8.75ns
:83  %m_mm2s_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_14: m_mm2s_ctl_read_2 [1/1] 8.75ns
:84  %m_mm2s_ctl_read_2 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_14: tmp_31 [1/1] 0.00ns
:85  %tmp_31 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %m_mm2s_ctl_read_2, i32 13, i32 31)

ST_14: tmp_34 [1/1] 0.00ns
:86  %tmp_34 = trunc i32 %m_mm2s_ctl_read_2 to i12

ST_14: m_s2mm_ctl_load_2_req [1/2] 8.75ns
:107  %m_s2mm_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_14: m_s2mm_ctl_addr_read_2 [1/1] 8.75ns
:108  %m_s2mm_ctl_addr_read_2 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_14: tmp_44 [1/1] 0.00ns
:109  %tmp_44 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %m_s2mm_ctl_addr_read_2, i32 13, i32 31)

ST_14: tmp_45 [1/1] 0.00ns
:110  %tmp_45 = trunc i32 %m_s2mm_ctl_addr_read_2 to i12


 <State 15>: 8.75ns
ST_15: tmp_2 [1/1] 0.00ns
:87  %tmp_2 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i1.i12(i19 %tmp_31, i1 true, i12 %tmp_34)

ST_15: m_mm2s_ctl_req [1/1] 8.75ns
:88  %m_mm2s_ctl_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_15: stg_130 [1/1] 8.75ns
:89  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 %tmp_2)

ST_15: m_mm2s_ctl_resp [2/2] 8.75ns
:90  %m_mm2s_ctl_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_15: tmp_5 [1/1] 0.00ns
:111  %tmp_5 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i1.i12(i19 %tmp_44, i1 true, i12 %tmp_45)

ST_15: m_s2mm_ctl_addr_req [1/1] 8.75ns
:112  %m_s2mm_ctl_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_15: stg_134 [1/1] 8.75ns
:113  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 %tmp_5)

ST_15: m_s2mm_ctl_addr_resp [2/2] 8.75ns
:114  %m_s2mm_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 16>: 8.75ns
ST_16: m_mm2s_ctl_resp [1/2] 8.75ns
:90  %m_mm2s_ctl_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_16: m_mm2s_ctl_addr [1/1] 0.00ns
:91  %m_mm2s_ctl_addr = getelementptr i32* %m_mm2s_ctl, i64 6

ST_16: m_mm2s_ctl_addr_req [1/1] 8.75ns
:92  %m_mm2s_ctl_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl_addr, i32 1)

ST_16: stg_139 [1/1] 8.75ns
:93  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl_addr, i32 %sourceAddress_read)

ST_16: m_mm2s_ctl_addr_resp [2/2] 8.75ns
:94  %m_mm2s_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr)

ST_16: m_s2mm_ctl_addr_resp [1/2] 8.75ns
:114  %m_s2mm_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_16: m_s2mm_ctl_addr_1 [1/1] 0.00ns
:115  %m_s2mm_ctl_addr_1 = getelementptr i32* %m_s2mm_ctl, i64 18

ST_16: m_s2mm_ctl_addr_1_req [1/1] 8.75ns
:116  %m_s2mm_ctl_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr_1, i32 1)

ST_16: stg_144 [1/1] 8.75ns
:117  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr_1, i32 %destinationAddress_read)

ST_16: m_s2mm_ctl_addr_1_resp [2/2] 8.75ns
:118  %m_s2mm_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr_1)

ST_16: d_assign_2 [3/3] 3.70ns
:123  %d_assign_2 = fpext float %control_in_reg_init_read to double


 <State 17>: 8.75ns
ST_17: m_mm2s_ctl_addr_resp [1/2] 8.75ns
:94  %m_mm2s_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr)

ST_17: read_length [1/1] 0.00ns
:95  %read_length = shl i32 %iterations_read, 4

ST_17: m_mm2s_ctl_addr_1 [1/1] 0.00ns
:96  %m_mm2s_ctl_addr_1 = getelementptr i32* %m_mm2s_ctl, i64 10

ST_17: m_mm2s_ctl_addr_1_req [1/1] 8.75ns
:97  %m_mm2s_ctl_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl_addr_1, i32 1)

ST_17: stg_151 [1/1] 8.75ns
:98  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl_addr_1, i32 %read_length)

ST_17: m_mm2s_ctl_addr_1_resp [2/2] 8.75ns
:99  %m_mm2s_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr_1)

ST_17: m_s2mm_ctl_addr_1_resp [1/2] 8.75ns
:118  %m_s2mm_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr_1)

ST_17: m_s2mm_ctl_addr_2 [1/1] 0.00ns
:119  %m_s2mm_ctl_addr_2 = getelementptr i32* %m_s2mm_ctl, i64 22

ST_17: m_s2mm_ctl_addr_2_req [1/1] 8.75ns
:120  %m_s2mm_ctl_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr_2, i32 1)

ST_17: stg_156 [1/1] 8.75ns
:121  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr_2, i32 %read_length)

ST_17: m_s2mm_ctl_addr_2_resp [2/2] 8.75ns
:122  %m_s2mm_ctl_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr_2)

ST_17: d_assign_2 [2/3] 3.70ns
:123  %d_assign_2 = fpext float %control_in_reg_init_read to double


 <State 18>: 8.75ns
ST_18: stg_159 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32 %sourceAddress), !map !7

ST_18: stg_160 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %destinationAddress), !map !13

ST_18: stg_161 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %iterations), !map !17

ST_18: stg_162 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(float %control_in_qam), !map !21

ST_18: stg_163 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i8 %control_in_lf_p), !map !25

ST_18: stg_164 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i8 %control_in_lf_i), !map !29

ST_18: stg_165 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i8 %control_in_lf_out_gain), !map !33

ST_18: stg_166 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i1 %control_in_reg_clr), !map !37

ST_18: stg_167 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(float %control_in_reg_init), !map !41

ST_18: stg_168 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i32* %m_mm2s_ctl), !map !45

ST_18: stg_169 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i32* %m_s2mm_ctl), !map !51

ST_18: stg_170 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i128* %s_in_V_V), !map !55

ST_18: stg_171 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap(i128* %s_out_V_V), !map !61

ST_18: stg_172 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecBitsMap(i1 false) nounwind, !map !65

ST_18: stg_173 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @str) nounwind

ST_18: stg_174 [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecWire(i32 %iterations, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_175 [1/1] 0.00ns
:26  call void (...)* @_ssdm_op_SpecWire(i32 %iterations, [7 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_176 [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecWire(i32 %destinationAddress, [7 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_177 [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecWire(i32 %destinationAddress, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_178 [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecWire(i32 %sourceAddress, [7 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_179 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecWire(i32 %sourceAddress, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_180 [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecWire(i128* %s_out_V_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 1000, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_181 [1/1] 0.00ns
:32  call void (...)* @_ssdm_op_SpecWire(i128* %s_in_V_V, [5 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 1000, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_182 [1/1] 0.00ns
:33  call void (...)* @_ssdm_op_SpecWire(i32* %m_s2mm_ctl, [6 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_18: stg_183 [1/1] 0.00ns
:34  call void (...)* @_ssdm_op_SpecWire(i32* %m_mm2s_ctl, [6 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_18: stg_184 [1/1] 0.00ns
:35  call void (...)* @_ssdm_op_SpecWire(float %control_in_qam, i8 %control_in_lf_p, i8 %control_in_lf_i, i8 %control_in_lf_out_gain, i1 %control_in_reg_clr, float %control_in_reg_init, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_185 [1/1] 0.00ns
:36  call void (...)* @_ssdm_op_SpecWire(float %control_in_qam, i8 %control_in_lf_p, i8 %control_in_lf_i, i8 %control_in_lf_out_gain, i1 %control_in_reg_clr, float %control_in_reg_init, [7 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_186 [1/1] 0.00ns
:37  call void (...)* @_ssdm_op_SpecWire(i32 0, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_187 [1/1] 0.00ns
:38  call void (...)* @_ssdm_op_SpecWire(i32 0, [11 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: m_mm2s_ctl_addr_1_resp [1/2] 8.75ns
:99  %m_mm2s_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr_1)

ST_18: m_s2mm_ctl_addr_2_resp [1/2] 8.75ns
:122  %m_s2mm_ctl_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr_2)

ST_18: d_assign_2 [1/3] 3.70ns
:123  %d_assign_2 = fpext float %control_in_reg_init_read to double

ST_18: ireg_V_2 [1/1] 0.00ns
:124  %ireg_V_2 = bitcast double %d_assign_2 to i64

ST_18: tmp_46 [1/1] 0.00ns
:125  %tmp_46 = trunc i64 %ireg_V_2 to i63

ST_18: tmp_39 [1/1] 2.70ns
:126  %tmp_39 = icmp eq i63 %tmp_46, 0

ST_18: p_this_assign [1/1] 1.37ns
:127  %p_this_assign = select i1 %tmp_39, i28 0, i28 -134217728

ST_18: sel_tmp34 [1/1] 1.37ns
:128  %sel_tmp34 = xor i1 %tmp_39, true

ST_18: sh_i_cast [1/1] 0.00ns
:129  %sh_i_cast = sext i8 %control_in_lf_p_read to i9

ST_18: tmp_10_i [1/1] 1.72ns
:131  %tmp_10_i = sub i9 0, %sh_i_cast

ST_18: sh_assign [1/1] 1.37ns
:132  %sh_assign = select i1 %isNeg, i9 %tmp_10_i, i9 %sh_i_cast

ST_18: sh_assign_1_i_cast1 [1/1] 0.00ns
:133  %sh_assign_1_i_cast1 = zext i9 %sh_assign to i28

ST_18: sh_assign_1_i_cast [1/1] 0.00ns
:134  %sh_assign_1_i_cast = zext i9 %sh_assign to i32

ST_18: tmp_15_i_cast [1/1] 0.00ns
:135  %tmp_15_i_cast = sext i8 %control_in_lf_i_read to i9

ST_18: sh_assign_1 [1/1] 1.72ns
:136  %sh_assign_1 = add i9 %tmp_15_i_cast, 9

ST_18: isNeg_1 [1/1] 0.00ns
:137  %isNeg_1 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %sh_assign_1, i32 8)

ST_18: tmp_16_i [1/1] 1.72ns
:138  %tmp_16_i = sub i9 -9, %tmp_15_i_cast

ST_18: sh_assign_2 [1/1] 1.37ns
:139  %sh_assign_2 = select i1 %isNeg_1, i9 %tmp_16_i, i9 %sh_assign_1

ST_18: sh_assign_3_i_cast1 [1/1] 0.00ns
:140  %sh_assign_3_i_cast1 = sext i9 %sh_assign_2 to i28

ST_18: sh_assign_3_i_cast [1/1] 0.00ns
:141  %sh_assign_3_i_cast = sext i9 %sh_assign_2 to i32

ST_18: sh_1_i_cast [1/1] 0.00ns
:142  %sh_1_i_cast = sext i8 %control_in_lf_out_gain_read to i9

ST_18: tmp_26_i [1/1] 1.72ns
:144  %tmp_26_i = sub i9 0, %sh_1_i_cast

ST_18: sh_assign_3 [1/1] 1.37ns
:145  %sh_assign_3 = select i1 %isNeg_2, i9 %tmp_26_i, i9 %sh_1_i_cast

ST_18: sh_assign_5_i_cast1 [1/1] 0.00ns
:146  %sh_assign_5_i_cast1 = zext i9 %sh_assign_3 to i28

ST_18: sh_assign_5_i_cast [1/1] 0.00ns
:147  %sh_assign_5_i_cast = zext i9 %sh_assign_3 to i32

ST_18: stg_213 [1/1] 1.57ns
:148  br label %1


 <State 19>: 5.35ns
ST_19: i [1/1] 0.00ns
:0  %i = phi i32 [ 0, %0 ], [ %i_1, %_ifconv ]

ST_19: tmp_6 [1/1] 2.52ns
:1  %tmp_6 = icmp slt i32 %i, %iterations_read

ST_19: i_1 [1/1] 2.44ns
:2  %i_1 = add nsw i32 %i, 1

ST_19: stg_217 [1/1] 0.00ns
:3  br i1 %tmp_6, label %_ifconv, label %2

ST_19: tmp_V_14 [1/1] 0.00ns
_ifconv:2  %tmp_V_14 = call i128 @_ssdm_op_Read.axis.volatile.i128P(i128* %s_in_V_V)

ST_19: first_r_V [1/1] 0.00ns
_ifconv:3  %first_r_V = call i32 @_ssdm_op_PartSelect.i32.i128.i32.i32(i128 %tmp_V_14, i32 96, i32 127)

ST_19: second_r_V [1/1] 0.00ns
_ifconv:4  %second_r_V = call i32 @_ssdm_op_PartSelect.i32.i128.i32.i32(i128 %tmp_V_14, i32 64, i32 95)

ST_19: v_assign [1/1] 0.00ns
_ifconv:5  %v_assign = bitcast i32 %first_r_V to float

ST_19: v_assign_1 [1/1] 0.00ns
_ifconv:6  %v_assign_1 = bitcast i32 %second_r_V to float

ST_19: d_assign [3/3] 3.70ns
_ifconv:7  %d_assign = fpext float %v_assign to double

ST_19: d_assign_1 [3/3] 3.70ns
_ifconv:8  %d_assign_1 = fpext float %v_assign_1 to double

ST_19: isneg_12 [1/1] 0.00ns
_ifconv:103  %isneg_12 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2, i32 63)

ST_19: exp_tmp_V_2 [1/1] 0.00ns
_ifconv:104  %exp_tmp_V_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2, i32 52, i32 62)

ST_19: tmp_s [1/1] 0.00ns
_ifconv:105  %tmp_s = zext i11 %exp_tmp_V_2 to i12

ST_19: exp_V [1/1] 1.84ns
_ifconv:106  %exp_V = add i12 %tmp_s, -1023

ST_19: tmp_118 [1/1] 0.00ns
_ifconv:107  %tmp_118 = trunc i64 %ireg_V_2 to i52

ST_19: tmp_38 [1/1] 0.00ns
_ifconv:108  %tmp_38 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_118)

ST_19: p_Result_30 [1/1] 0.00ns
_ifconv:109  %p_Result_30 = zext i53 %tmp_38 to i54

ST_19: man_V_7 [1/1] 3.16ns
_ifconv:110  %man_V_7 = sub i54 0, %p_Result_30

ST_19: man_V_17 [1/1] 1.37ns
_ifconv:111  %man_V_17 = select i1 %isneg_12, i54 %man_V_7, i54 %p_Result_30

ST_19: F2_2 [1/1] 1.84ns
_ifconv:112  %F2_2 = sub i12 1075, %tmp_s

ST_19: tmp_40 [1/1] 2.14ns
_ifconv:113  %tmp_40 = icmp sgt i12 %F2_2, 26

ST_19: tmp_41 [1/1] 1.84ns
_ifconv:114  %tmp_41 = add i12 %F2_2, -26

ST_19: tmp_42 [1/1] 1.84ns
_ifconv:115  %tmp_42 = sub i12 26, %F2_2

ST_19: sh_amt_2 [1/1] 1.37ns
_ifconv:116  %sh_amt_2 = select i1 %tmp_40, i12 %tmp_41, i12 %tmp_42

ST_19: tmp_43 [1/1] 2.14ns
_ifconv:118  %tmp_43 = icmp eq i12 %F2_2, 26

ST_19: tmp_119 [1/1] 0.00ns
_ifconv:119  %tmp_119 = trunc i54 %man_V_17 to i28

ST_19: tmp_57 [1/1] 2.14ns
_ifconv:140  %tmp_57 = icmp sgt i12 %exp_V, 0

ST_19: stg_242 [1/1] 0.00ns
:0  ret i1 true


 <State 20>: 8.14ns
ST_20: d_assign [2/3] 3.70ns
_ifconv:7  %d_assign = fpext float %v_assign to double

ST_20: d_assign_1 [2/3] 3.70ns
_ifconv:8  %d_assign_1 = fpext float %v_assign_1 to double

ST_20: sh_amt_2_cast [1/1] 0.00ns
_ifconv:117  %sh_amt_2_cast = sext i12 %sh_amt_2 to i32

ST_20: tmp_49 [1/1] 2.14ns
_ifconv:120  %tmp_49 = icmp ult i12 %sh_amt_2, 54

ST_20: tmp_50 [1/1] 2.14ns
_ifconv:121  %tmp_50 = icmp ult i12 %sh_amt_2, 28

ST_20: tmp_51 [1/1] 0.00ns
_ifconv:122  %tmp_51 = zext i32 %sh_amt_2_cast to i54

ST_20: tmp_52 [1/1] 3.56ns
_ifconv:123  %tmp_52 = ashr i54 %man_V_17, %tmp_51

ST_20: tmp_120 [1/1] 0.00ns
_ifconv:124  %tmp_120 = trunc i54 %tmp_52 to i28

ST_20: tmp_54 [1/1] 0.00ns
_ifconv:126  %tmp_54 = sext i28 %tmp_119 to i32

ST_20: tmp_55 [1/1] 2.79ns
_ifconv:127  %tmp_55 = shl i32 %tmp_54, %sh_amt_2_cast

ST_20: tmp_123 [1/1] 0.00ns
_ifconv:128  %tmp_123 = trunc i32 %tmp_55 to i28

ST_20: sel_tmp18 [1/1] 1.37ns
_ifconv:129  %sel_tmp18 = select i1 %tmp_43, i28 %tmp_119, i28 0

ST_20: sel_tmp19 [1/1] 1.37ns
_ifconv:130  %sel_tmp19 = xor i1 %tmp_43, true

ST_20: sel_tmp20 [1/1] 1.37ns
_ifconv:131  %sel_tmp20 = and i1 %tmp_40, %sel_tmp19

ST_20: sel_tmp21 [1/1] 1.37ns
_ifconv:132  %sel_tmp21 = and i1 %sel_tmp20, %tmp_49

ST_20: sel_tmp22 [1/1] 1.37ns
_ifconv:133  %sel_tmp22 = select i1 %sel_tmp21, i28 %tmp_120, i28 %sel_tmp18

ST_20: sel_tmp23 [1/1] 2.14ns
_ifconv:134  %sel_tmp23 = icmp slt i12 %F2_2, 26

ST_20: sel_tmp24 [1/1] 1.37ns
_ifconv:135  %sel_tmp24 = and i1 %sel_tmp23, %tmp_50

ST_20: sel_tmp25 [1/1] 1.37ns
_ifconv:136  %sel_tmp25 = select i1 %sel_tmp24, i28 %tmp_123, i28 %sel_tmp22

ST_20: sel_tmp26 [1/1] 1.37ns
_ifconv:137  %sel_tmp26 = xor i1 %tmp_49, true

ST_20: sel_tmp27 [1/1] 1.37ns
_ifconv:138  %sel_tmp27 = and i1 %sel_tmp20, %sel_tmp26

ST_20: pos1 [1/1] 1.84ns
_ifconv:141  %pos1 = add i12 %F2_2, 2

ST_20: pos1_cast [1/1] 0.00ns
_ifconv:142  %pos1_cast = sext i12 %pos1 to i32

ST_20: pos2 [1/1] 1.84ns
_ifconv:143  %pos2 = add i12 %F2_2, 3

ST_20: pos2_cast [1/1] 0.00ns
_ifconv:144  %pos2_cast = sext i12 %pos2 to i32

ST_20: tmp_58 [1/1] 2.14ns
_ifconv:146  %tmp_58 = icmp slt i12 %pos1, 54

ST_20: tmp_125 [1/1] 0.00ns
_ifconv:147  %tmp_125 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %pos1, i32 11)

ST_20: rev [1/1] 1.37ns
_ifconv:148  %rev = xor i1 %tmp_125, true

ST_20: tmp_59 [1/1] 0.00ns
_ifconv:149  %tmp_59 = zext i32 %pos1_cast to i54

ST_20: tmp_60 [1/1] 3.56ns
_ifconv:150  %tmp_60 = ashr i54 %man_V_17, %tmp_59

ST_20: lD [1/1] 0.00ns
_ifconv:151  %lD = trunc i54 %tmp_60 to i1

ST_20: tmp1 [1/1] 1.37ns
_ifconv:152  %tmp1 = and i1 %lD, %rev

ST_20: Range1_all_ones_1 [1/1] 1.37ns
_ifconv:153  %Range1_all_ones_1 = and i1 %tmp1, %tmp_58

ST_20: tmp_127 [1/1] 0.00ns
_ifconv:154  %tmp_127 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %pos2, i32 11)

ST_20: tmp_61 [1/1] 2.14ns
_ifconv:156  %tmp_61 = icmp slt i12 %pos2, 54

ST_20: tmp_63 [1/1] 0.00ns
_ifconv:158  %tmp_63 = zext i32 %pos2_cast to i54

ST_20: Range2_V_1 [1/1] 3.56ns
_ifconv:159  %Range2_V_1 = lshr i54 %man_V_17, %tmp_63

ST_20: r_V [1/1] 1.18ns
_ifconv:160  %r_V = lshr i54 -1, %tmp_63

ST_20: Range2_all_ones [1/1] 2.65ns
_ifconv:161  %Range2_all_ones = icmp eq i54 %Range2_V_1, %r_V

ST_20: tmp_64 [1/1] 2.65ns
_ifconv:165  %tmp_64 = icmp eq i54 %Range2_V_1, 0

ST_20: tmp_65 [1/1] 2.14ns
_ifconv:168  %tmp_65 = icmp eq i12 %pos2, 54

ST_20: Range1_all_zeros_1 [1/1] 2.65ns
_ifconv:169  %Range1_all_zeros_1 = icmp eq i54 %man_V_17, 0

ST_20: sel_tmp28 [1/1] 1.37ns
_ifconv:170  %sel_tmp28 = xor i1 %tmp_58, true

ST_20: tmp2 [1/1] 1.37ns
_ifconv:171  %tmp2 = or i1 %rev, %sel_tmp28

ST_20: tmp_63_not [1/1] 1.37ns
_ifconv:173  %tmp_63_not = xor i1 %tmp_61, true

ST_20: sel_tmp30 [1/1] 1.37ns
_ifconv:174  %sel_tmp30 = or i1 %tmp_125, %tmp_63_not

ST_20: tmp3 [1/1] 1.37ns
_ifconv:175  %tmp3 = and i1 %tmp_65, %sel_tmp30


 <State 21>: 8.22ns
ST_21: d_assign [1/3] 3.70ns
_ifconv:7  %d_assign = fpext float %v_assign to double

ST_21: d_assign_1 [1/3] 3.70ns
_ifconv:8  %d_assign_1 = fpext float %v_assign_1 to double

ST_21: ireg_V [1/1] 0.00ns
_ifconv:9  %ireg_V = bitcast double %d_assign to i64

ST_21: tmp_56 [1/1] 0.00ns
_ifconv:10  %tmp_56 = trunc i64 %ireg_V to i63

ST_21: isneg [1/1] 0.00ns
_ifconv:11  %isneg = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)

ST_21: exp_tmp_V [1/1] 0.00ns
_ifconv:12  %exp_tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)

ST_21: tmp_3 [1/1] 0.00ns
_ifconv:13  %tmp_3 = zext i11 %exp_tmp_V to i12

ST_21: tmp_62 [1/1] 0.00ns
_ifconv:14  %tmp_62 = trunc i64 %ireg_V to i52

ST_21: tmp_8 [1/1] 2.70ns
_ifconv:19  %tmp_8 = icmp eq i63 %tmp_56, 0

ST_21: F2 [1/1] 1.84ns
_ifconv:20  %F2 = sub i12 1075, %tmp_3

ST_21: ireg_V_1 [1/1] 0.00ns
_ifconv:56  %ireg_V_1 = bitcast double %d_assign_1 to i64

ST_21: tmp_110 [1/1] 0.00ns
_ifconv:57  %tmp_110 = trunc i64 %ireg_V_1 to i63

ST_21: isneg_1 [1/1] 0.00ns
_ifconv:58  %isneg_1 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1, i32 63)

ST_21: exp_tmp_V_1 [1/1] 0.00ns
_ifconv:59  %exp_tmp_V_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1, i32 52, i32 62)

ST_21: tmp_22 [1/1] 0.00ns
_ifconv:60  %tmp_22 = zext i11 %exp_tmp_V_1 to i12

ST_21: tmp_112 [1/1] 0.00ns
_ifconv:61  %tmp_112 = trunc i64 %ireg_V_1 to i52

ST_21: tmp_24 [1/1] 2.70ns
_ifconv:66  %tmp_24 = icmp eq i63 %tmp_110, 0

ST_21: F2_1 [1/1] 1.84ns
_ifconv:67  %F2_1 = sub i12 1075, %tmp_22

ST_21: p_2 [1/1] 1.37ns
_ifconv:125  %p_2 = select i1 %isneg_12, i28 -1, i28 0

ST_21: p_Val2_4 [1/1] 1.37ns
_ifconv:139  %p_Val2_4 = select i1 %sel_tmp27, i28 %p_2, i28 %sel_tmp25

ST_21: newsignbit [1/1] 0.00ns
_ifconv:145  %newsignbit = call i1 @_ssdm_op_BitSelect.i1.i28.i32(i28 %p_Val2_4, i32 27)

ST_21: rev1 [1/1] 1.37ns
_ifconv:155  %rev1 = xor i1 %tmp_127, true

ST_21: or_cond88_i [1/1] 1.37ns
_ifconv:157  %or_cond88_i = and i1 %tmp_61, %rev1

ST_21: Range2_all_ones_1_i [1/1] 1.37ns
_ifconv:162  %Range2_all_ones_1_i = select i1 %or_cond88_i, i1 %Range2_all_ones, i1 %rev1

ST_21: or_cond89_i [1/1] 1.37ns
_ifconv:163  %or_cond89_i = and i1 %tmp_61, %rev

ST_21: Range1_all_ones [1/1] 1.37ns
_ifconv:164  %Range1_all_ones = and i1 %Range2_all_ones_1_i, %Range1_all_ones_1

ST_21: Range1_all_zeros [1/1] 1.37ns
_ifconv:166  %Range1_all_zeros = xor i1 %Range1_all_ones_1, true

ST_21: p_93_i [1/1] 1.37ns
_ifconv:167  %p_93_i = and i1 %tmp_64, %Range1_all_zeros

ST_21: sel_tmp29 [1/1] 1.37ns
_ifconv:172  %sel_tmp29 = or i1 %tmp2, %Range1_all_zeros_1

ST_21: sel_tmp31 [1/1] 1.37ns
_ifconv:176  %sel_tmp31 = and i1 %tmp3, %tmp_58

ST_21: sel_tmp32 [1/1] 1.37ns
_ifconv:177  %sel_tmp32 = select i1 %sel_tmp31, i1 %Range1_all_zeros, i1 %sel_tmp29

ST_21: sel_tmp33 [1/1] 1.37ns
_ifconv:178  %sel_tmp33 = and i1 %tmp_58, %or_cond89_i

ST_21: deleted_zeros_0_i [1/1] 1.37ns
_ifconv:179  %deleted_zeros_0_i = select i1 %sel_tmp33, i1 %p_93_i, i1 %sel_tmp32

ST_21: sel_tmp35 [1/1] 1.37ns
_ifconv:180  %sel_tmp35 = select i1 %sel_tmp31, i1 %Range1_all_ones_1, i1 %tmp2

ST_21: deleted_ones_0_i [1/1] 1.37ns
_ifconv:181  %deleted_ones_0_i = select i1 %sel_tmp33, i1 %Range1_all_ones, i1 %sel_tmp35

ST_21: sel_tmp36 [1/1] 1.37ns
_ifconv:182  %sel_tmp36 = or i1 %tmp_58, %newsignbit

ST_21: neg_src [1/1] 1.37ns
_ifconv:183  %neg_src = and i1 %isneg_12, %sel_tmp36

ST_21: deleted_zeros_0_not_i [1/1] 1.37ns
_ifconv:184  %deleted_zeros_0_not_i = xor i1 %deleted_zeros_0_i, true

ST_21: brmerge_i [1/1] 1.37ns
_ifconv:185  %brmerge_i = or i1 %newsignbit, %deleted_zeros_0_not_i

ST_21: tmp_67 [1/1] 1.37ns
_ifconv:186  %tmp_67 = xor i1 %isneg_12, true

ST_21: overflow [1/1] 1.37ns
_ifconv:187  %overflow = and i1 %brmerge_i, %tmp_67

ST_21: brmerge92_demorgan_i [1/1] 1.37ns
_ifconv:188  %brmerge92_demorgan_i = and i1 %newsignbit, %deleted_ones_0_i


 <State 22>: 8.22ns
ST_22: tmp_7 [1/1] 0.00ns
_ifconv:15  %tmp_7 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_62)

ST_22: p_Result_28 [1/1] 0.00ns
_ifconv:16  %p_Result_28 = zext i53 %tmp_7 to i54

ST_22: man_V_1 [1/1] 3.16ns
_ifconv:17  %man_V_1 = sub i54 0, %p_Result_28

ST_22: man_V_2 [1/1] 1.37ns
_ifconv:18  %man_V_2 = select i1 %isneg, i54 %man_V_1, i54 %p_Result_28

ST_22: tmp_9 [1/1] 2.14ns
_ifconv:21  %tmp_9 = icmp sgt i12 %F2, 13

ST_22: tmp_10 [1/1] 1.84ns
_ifconv:22  %tmp_10 = add i12 %F2, -13

ST_22: tmp_11 [1/1] 1.84ns
_ifconv:23  %tmp_11 = sub i12 13, %F2

ST_22: sh_amt [1/1] 1.37ns
_ifconv:24  %sh_amt = select i1 %tmp_9, i12 %tmp_10, i12 %tmp_11

ST_22: sh_amt_cast [1/1] 0.00ns
_ifconv:25  %sh_amt_cast = sext i12 %sh_amt to i32

ST_22: tmp_12 [1/1] 2.14ns
_ifconv:26  %tmp_12 = icmp eq i12 %F2, 13

ST_22: tmp_78 [1/1] 0.00ns
_ifconv:27  %tmp_78 = trunc i54 %man_V_2 to i16

ST_22: tmp_14 [1/1] 2.14ns
_ifconv:28  %tmp_14 = icmp ult i12 %sh_amt, 54

ST_22: tmp_80 [1/1] 0.00ns
_ifconv:29  %tmp_80 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %sh_amt, i32 4, i32 11)

ST_22: icmp [1/1] 2.00ns
_ifconv:30  %icmp = icmp eq i8 %tmp_80, 0

ST_22: tmp_16 [1/1] 0.00ns
_ifconv:31  %tmp_16 = zext i32 %sh_amt_cast to i54

ST_22: tmp_17 [1/1] 3.56ns
_ifconv:32  %tmp_17 = ashr i54 %man_V_2, %tmp_16

ST_22: tmp_90 [1/1] 0.00ns
_ifconv:33  %tmp_90 = trunc i54 %tmp_17 to i16

ST_22: tmp_19 [1/1] 0.00ns
_ifconv:35  %tmp_19 = sext i16 %tmp_78 to i32

ST_22: tmp_20 [1/1] 2.76ns
_ifconv:36  %tmp_20 = shl i32 %tmp_19, %sh_amt_cast

ST_22: tmp_100 [1/1] 0.00ns
_ifconv:37  %tmp_100 = trunc i32 %tmp_20 to i16

ST_22: sel_tmp1 [1/1] 1.37ns
_ifconv:38  %sel_tmp1 = xor i1 %tmp_8, true

ST_22: sel_tmp2 [1/1] 1.37ns
_ifconv:39  %sel_tmp2 = and i1 %tmp_12, %sel_tmp1

ST_22: sel_tmp6_demorgan [1/1] 1.37ns
_ifconv:40  %sel_tmp6_demorgan = or i1 %tmp_8, %tmp_12

ST_22: sel_tmp6 [1/1] 1.37ns
_ifconv:41  %sel_tmp6 = xor i1 %sel_tmp6_demorgan, true

ST_22: sel_tmp7 [1/1] 1.37ns
_ifconv:42  %sel_tmp7 = and i1 %tmp_9, %sel_tmp6

ST_22: sel_tmp14_demorgan [1/1] 1.37ns
_ifconv:44  %sel_tmp14_demorgan = or i1 %sel_tmp6_demorgan, %tmp_9

ST_22: sel_tmp [1/1] 1.37ns
_ifconv:45  %sel_tmp = xor i1 %sel_tmp14_demorgan, true

ST_22: sel_tmp3 [1/1] 1.37ns
_ifconv:46  %sel_tmp3 = and i1 %icmp, %sel_tmp

ST_22: tmp_23 [1/1] 0.00ns
_ifconv:62  %tmp_23 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_112)

ST_22: p_Result_29 [1/1] 0.00ns
_ifconv:63  %p_Result_29 = zext i53 %tmp_23 to i54

ST_22: man_V_4 [1/1] 3.16ns
_ifconv:64  %man_V_4 = sub i54 0, %p_Result_29

ST_22: man_V_5 [1/1] 1.37ns
_ifconv:65  %man_V_5 = select i1 %isneg_1, i54 %man_V_4, i54 %p_Result_29

ST_22: tmp_25 [1/1] 2.14ns
_ifconv:68  %tmp_25 = icmp sgt i12 %F2_1, 13

ST_22: tmp_26 [1/1] 1.84ns
_ifconv:69  %tmp_26 = add i12 %F2_1, -13

ST_22: tmp_27 [1/1] 1.84ns
_ifconv:70  %tmp_27 = sub i12 13, %F2_1

ST_22: sh_amt_1 [1/1] 1.37ns
_ifconv:71  %sh_amt_1 = select i1 %tmp_25, i12 %tmp_26, i12 %tmp_27

ST_22: sh_amt_1_cast [1/1] 0.00ns
_ifconv:72  %sh_amt_1_cast = sext i12 %sh_amt_1 to i32

ST_22: tmp_28 [1/1] 2.14ns
_ifconv:73  %tmp_28 = icmp eq i12 %F2_1, 13

ST_22: tmp_113 [1/1] 0.00ns
_ifconv:74  %tmp_113 = trunc i54 %man_V_5 to i16

ST_22: tmp_30 [1/1] 2.14ns
_ifconv:75  %tmp_30 = icmp ult i12 %sh_amt_1, 54

ST_22: tmp_114 [1/1] 0.00ns
_ifconv:76  %tmp_114 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %sh_amt_1, i32 4, i32 11)

ST_22: icmp1 [1/1] 2.00ns
_ifconv:77  %icmp1 = icmp eq i8 %tmp_114, 0

ST_22: tmp_32 [1/1] 0.00ns
_ifconv:78  %tmp_32 = zext i32 %sh_amt_1_cast to i54

ST_22: tmp_33 [1/1] 3.56ns
_ifconv:79  %tmp_33 = ashr i54 %man_V_5, %tmp_32

ST_22: tmp_115 [1/1] 0.00ns
_ifconv:80  %tmp_115 = trunc i54 %tmp_33 to i16

ST_22: tmp_35 [1/1] 0.00ns
_ifconv:82  %tmp_35 = sext i16 %tmp_113 to i32

ST_22: tmp_36 [1/1] 2.76ns
_ifconv:83  %tmp_36 = shl i32 %tmp_35, %sh_amt_1_cast

ST_22: tmp_116 [1/1] 0.00ns
_ifconv:84  %tmp_116 = trunc i32 %tmp_36 to i16

ST_22: sel_tmp9 [1/1] 1.37ns
_ifconv:85  %sel_tmp9 = xor i1 %tmp_24, true

ST_22: sel_tmp10 [1/1] 1.37ns
_ifconv:86  %sel_tmp10 = and i1 %tmp_28, %sel_tmp9

ST_22: sel_tmp30_demorgan [1/1] 1.37ns
_ifconv:87  %sel_tmp30_demorgan = or i1 %tmp_24, %tmp_28

ST_22: sel_tmp11 [1/1] 1.37ns
_ifconv:88  %sel_tmp11 = xor i1 %sel_tmp30_demorgan, true

ST_22: sel_tmp12 [1/1] 1.37ns
_ifconv:89  %sel_tmp12 = and i1 %tmp_25, %sel_tmp11

ST_22: sel_tmp38_demorgan [1/1] 1.37ns
_ifconv:91  %sel_tmp38_demorgan = or i1 %sel_tmp30_demorgan, %tmp_25

ST_22: sel_tmp14 [1/1] 1.37ns
_ifconv:92  %sel_tmp14 = xor i1 %sel_tmp38_demorgan, true

ST_22: sel_tmp15 [1/1] 1.37ns
_ifconv:93  %sel_tmp15 = and i1 %icmp1, %sel_tmp14

ST_22: brmerge92_i [1/1] 1.37ns
_ifconv:189  %brmerge92_i = xor i1 %brmerge92_demorgan_i, true

ST_22: underflow [1/1] 1.37ns
_ifconv:190  %underflow = and i1 %neg_src, %brmerge92_i

ST_22: brmerge_i_i [1/1] 1.37ns
_ifconv:191  %brmerge_i_i = or i1 %underflow, %overflow

ST_22: sign_assign_not [1/1] 1.37ns
_ifconv:192  %sign_assign_not = xor i1 %neg_src, true

ST_22: tmp4 [1/1] 1.37ns
_ifconv:193  %tmp4 = or i1 %overflow, %sign_assign_not

ST_22: brmerge [1/1] 1.37ns
_ifconv:194  %brmerge = or i1 %tmp4, %brmerge92_demorgan_i

ST_22: this_assign_mux [1/1] 1.37ns
_ifconv:195  %this_assign_mux = select i1 %brmerge_i_i, i28 134217727, i28 %p_Val2_4

ST_22: tmp_66 [1/1] 1.37ns
_ifconv:196  %tmp_66 = or i1 %tmp_39, %underflow

ST_22: sel_tmp37 [1/1] 1.37ns
_ifconv:197  %sel_tmp37 = select i1 %tmp_66, i28 %p_this_assign, i28 %p_Val2_4

ST_22: sel_tmp93_demorgan [1/1] 1.37ns
_ifconv:198  %sel_tmp93_demorgan = or i1 %tmp_39, %tmp_57

ST_22: sel_tmp38 [1/1] 1.37ns
_ifconv:199  %sel_tmp38 = select i1 %sel_tmp93_demorgan, i28 %sel_tmp37, i28 %p_Val2_4

ST_22: tmp67 [1/1] 1.37ns
_ifconv:200  %tmp67 = and i1 %brmerge, %sel_tmp34

ST_22: sel_tmp39 [1/1] 1.37ns
_ifconv:201  %sel_tmp39 = and i1 %tmp67, %tmp_57

ST_22: p_5 [1/1] 1.37ns
_ifconv:202  %p_5 = select i1 %sel_tmp39, i28 %this_assign_mux, i28 %sel_tmp38


 <State 23>: 6.85ns
ST_23: p_s [1/1] 1.37ns
_ifconv:34  %p_s = select i1 %isneg, i16 -1, i16 0

ST_23: sel_tmp8 [1/1] 1.37ns
_ifconv:43  %sel_tmp8 = and i1 %sel_tmp7, %tmp_14

ST_23: sel_tmp4 [1/1] 1.37ns
_ifconv:47  %sel_tmp4 = xor i1 %tmp_14, true

ST_23: sel_tmp5 [1/1] 1.37ns
_ifconv:48  %sel_tmp5 = and i1 %sel_tmp7, %sel_tmp4

ST_23: newSel [1/1] 1.37ns
_ifconv:49  %newSel = select i1 %sel_tmp5, i16 %p_s, i16 %tmp_100

ST_23: or_cond [1/1] 1.37ns
_ifconv:50  %or_cond = or i1 %sel_tmp5, %sel_tmp3

ST_23: newSel1 [1/1] 1.37ns
_ifconv:51  %newSel1 = select i1 %sel_tmp8, i16 %tmp_90, i16 %tmp_78

ST_23: or_cond1 [1/1] 1.37ns
_ifconv:52  %or_cond1 = or i1 %sel_tmp8, %sel_tmp2

ST_23: newSel2 [1/1] 1.37ns
_ifconv:53  %newSel2 = select i1 %or_cond, i16 %newSel, i16 %newSel1

ST_23: or_cond2 [1/1] 1.37ns
_ifconv:54  %or_cond2 = or i1 %or_cond, %or_cond1

ST_23: newSel3 [1/1] 1.37ns
_ifconv:55  %newSel3 = select i1 %or_cond2, i16 %newSel2, i16 0

ST_23: p_1 [1/1] 1.37ns
_ifconv:81  %p_1 = select i1 %isneg_1, i16 -1, i16 0

ST_23: sel_tmp13 [1/1] 1.37ns
_ifconv:90  %sel_tmp13 = and i1 %sel_tmp12, %tmp_30

ST_23: sel_tmp16 [1/1] 1.37ns
_ifconv:94  %sel_tmp16 = xor i1 %tmp_30, true

ST_23: sel_tmp17 [1/1] 1.37ns
_ifconv:95  %sel_tmp17 = and i1 %sel_tmp12, %sel_tmp16

ST_23: newSel4 [1/1] 1.37ns
_ifconv:96  %newSel4 = select i1 %sel_tmp17, i16 %p_1, i16 %tmp_116

ST_23: or_cond3 [1/1] 1.37ns
_ifconv:97  %or_cond3 = or i1 %sel_tmp17, %sel_tmp15

ST_23: newSel5 [1/1] 1.37ns
_ifconv:98  %newSel5 = select i1 %sel_tmp13, i16 %tmp_115, i16 %tmp_113

ST_23: or_cond4 [1/1] 1.37ns
_ifconv:99  %or_cond4 = or i1 %sel_tmp13, %sel_tmp10

ST_23: newSel6 [1/1] 1.37ns
_ifconv:100  %newSel6 = select i1 %or_cond3, i16 %newSel4, i16 %newSel5

ST_23: or_cond5 [1/1] 1.37ns
_ifconv:101  %or_cond5 = or i1 %or_cond3, %or_cond4

ST_23: newSel7 [1/1] 1.37ns
_ifconv:102  %newSel7 = select i1 %or_cond5, i16 %newSel6, i16 0


 <State 24>: 6.38ns
ST_24: p_Val2_load [1/1] 0.00ns
_ifconv:0  %p_Val2_load = load i12* %p_Val2_s, align 2

ST_24: p_Val2_1_load [1/1] 0.00ns
_ifconv:1  %p_Val2_1_load = load i12* %p_Val2_1, align 2

ST_24: OP1_V [1/1] 0.00ns
_ifconv:203  %OP1_V = sext i16 %newSel3 to i28

ST_24: OP2_V [1/1] 0.00ns
_ifconv:204  %OP2_V = sext i12 %p_Val2_load to i28

ST_24: p_Val2_5 [1/1] 6.38ns
_ifconv:205  %p_Val2_5 = mul i28 %OP1_V, %OP2_V

ST_24: OP1_V_1 [1/1] 0.00ns
_ifconv:206  %OP1_V_1 = sext i16 %newSel7 to i28

ST_24: OP2_V_1 [1/1] 0.00ns
_ifconv:207  %OP2_V_1 = sext i12 %p_Val2_1_load to i28

ST_24: p_Val2_6 [1/1] 6.38ns
_ifconv:208  %p_Val2_6 = mul i28 %OP1_V_1, %OP2_V_1

ST_24: tmp_68 [1/1] 0.00ns
_ifconv:209  %tmp_68 = call i16 @_ssdm_op_PartSelect.i16.i28.i32.i32(i28 %p_Val2_5, i32 11, i32 26)

ST_24: p_Val2_8 [1/1] 6.38ns
_ifconv:215  %p_Val2_8 = mul i28 %OP1_V, %OP2_V_1

ST_24: p_Val2_9 [1/1] 6.38ns
_ifconv:216  %p_Val2_9 = mul i28 %OP1_V_1, %OP2_V

ST_24: tmp_111 [1/1] 0.00ns
_ifconv:217  %tmp_111 = call i16 @_ssdm_op_PartSelect.i16.i28.i32.i32(i28 %p_Val2_8, i32 11, i32 26)


 <State 25>: 5.76ns
ST_25: tmp_1_i_i [1/1] 0.00ns
_ifconv:210  %tmp_1_i_i = call i27 @_ssdm_op_BitConcatenate.i27.i16.i11(i16 %tmp_68, i11 0)

ST_25: tmp_1_i_i_cast [1/1] 0.00ns
_ifconv:211  %tmp_1_i_i_cast = sext i27 %tmp_1_i_i to i29

ST_25: tmp_2_i_i [1/1] 0.00ns
_ifconv:212  %tmp_2_i_i = zext i28 %p_Val2_6 to i29

ST_25: p_Val2_7 [1/1] 3.02ns
_ifconv:213  %p_Val2_7 = sub i29 %tmp_1_i_i_cast, %tmp_2_i_i

ST_25: p_Val2_61 [1/1] 0.00ns
_ifconv:214  %p_Val2_61 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %p_Val2_7, i32 11, i32 26)

ST_25: tmp_6_i_i [1/1] 0.00ns
_ifconv:218  %tmp_6_i_i = call i27 @_ssdm_op_BitConcatenate.i27.i16.i11(i16 %tmp_111, i11 0)

ST_25: tmp_6_i_i_cast [1/1] 0.00ns
_ifconv:219  %tmp_6_i_i_cast = sext i27 %tmp_6_i_i to i29

ST_25: tmp_7_i_i [1/1] 0.00ns
_ifconv:220  %tmp_7_i_i = zext i28 %p_Val2_9 to i29

ST_25: p_Val2_10 [1/1] 3.02ns
_ifconv:221  %p_Val2_10 = add i29 %tmp_6_i_i_cast, %tmp_7_i_i

ST_25: p_Val2_63 [1/1] 0.00ns
_ifconv:222  %p_Val2_63 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %p_Val2_10, i32 11, i32 26)

ST_25: isneg_13 [1/1] 0.00ns
_ifconv:223  %isneg_13 = call i1 @_ssdm_op_BitSelect.i1.i29.i32(i29 %p_Val2_7, i32 26)

ST_25: p_Val2_12 [1/1] 0.00ns
_ifconv:224  %p_Val2_12 = call i5 @_ssdm_op_PartSelect.i5.i29.i32.i32(i29 %p_Val2_7, i32 20, i32 24)

ST_25: newsignbit_1 [1/1] 0.00ns
_ifconv:225  %newsignbit_1 = call i1 @_ssdm_op_BitSelect.i1.i29.i32(i29 %p_Val2_7, i32 24)

ST_25: p_Result_i [1/1] 0.00ns
_ifconv:226  %p_Result_i = call i2 @_ssdm_op_PartSelect.i2.i29.i32.i32(i29 %p_Val2_7, i32 25, i32 26)

ST_25: p_not_i1_i [1/1] 1.36ns
_ifconv:227  %p_not_i1_i = icmp ne i2 %p_Result_i, 0

ST_25: brmerge_i1_i [1/1] 1.37ns
_ifconv:228  %brmerge_i1_i = or i1 %newsignbit_1, %p_not_i1_i

ST_25: newsignbit_0_not_i1_i [1/1] 1.37ns
_ifconv:231  %newsignbit_0_not_i1_i = xor i1 %newsignbit_1, true

ST_25: p_not38_i1_i [1/1] 1.36ns
_ifconv:232  %p_not38_i1_i = icmp ne i2 %p_Result_i, -1

ST_25: brmerge39_i1_i [1/1] 1.37ns
_ifconv:233  %brmerge39_i1_i = or i1 %p_not38_i1_i, %newsignbit_0_not_i1_i

ST_25: isneg_14 [1/1] 0.00ns
_ifconv:241  %isneg_14 = call i1 @_ssdm_op_BitSelect.i1.i29.i32(i29 %p_Val2_10, i32 26)

ST_25: p_Val2_14 [1/1] 0.00ns
_ifconv:242  %p_Val2_14 = call i5 @_ssdm_op_PartSelect.i5.i29.i32.i32(i29 %p_Val2_10, i32 20, i32 24)

ST_25: newsignbit_2 [1/1] 0.00ns
_ifconv:243  %newsignbit_2 = call i1 @_ssdm_op_BitSelect.i1.i29.i32(i29 %p_Val2_10, i32 24)

ST_25: p_Result_3_i [1/1] 0.00ns
_ifconv:244  %p_Result_3_i = call i2 @_ssdm_op_PartSelect.i2.i29.i32.i32(i29 %p_Val2_10, i32 25, i32 26)

ST_25: p_not_i_i [1/1] 1.36ns
_ifconv:245  %p_not_i_i = icmp ne i2 %p_Result_3_i, 0

ST_25: brmerge_i_i1 [1/1] 1.37ns
_ifconv:246  %brmerge_i_i1 = or i1 %newsignbit_2, %p_not_i_i

ST_25: newsignbit_0_not_i_i [1/1] 1.37ns
_ifconv:249  %newsignbit_0_not_i_i = xor i1 %newsignbit_2, true

ST_25: p_not38_i_i [1/1] 1.36ns
_ifconv:250  %p_not38_i_i = icmp ne i2 %p_Result_3_i, -1

ST_25: brmerge39_i_i [1/1] 1.37ns
_ifconv:251  %brmerge39_i_i = or i1 %p_not38_i_i, %newsignbit_0_not_i_i


 <State 26>: 6.85ns
ST_26: tmp_9_i [1/1] 1.37ns
_ifconv:229  %tmp_9_i = xor i1 %isneg_13, true

ST_26: overflow_1 [1/1] 1.37ns
_ifconv:230  %overflow_1 = and i1 %brmerge_i1_i, %tmp_9_i

ST_26: underflow_1 [1/1] 1.37ns
_ifconv:234  %underflow_1 = and i1 %brmerge39_i1_i, %isneg_13

ST_26: brmerge_i_i1_i [1/1] 1.37ns
_ifconv:235  %brmerge_i_i1_i = or i1 %underflow_1, %overflow_1

ST_26: underflow_not_i [1/1] 1.37ns
_ifconv:236  %underflow_not_i = xor i1 %underflow_1, true

ST_26: brmerge8_i [1/1] 1.37ns
_ifconv:237  %brmerge8_i = or i1 %overflow_1, %underflow_not_i

ST_26: p_Val2_34_mux_i [1/1] 1.37ns
_ifconv:238  %p_Val2_34_mux_i = select i1 %brmerge_i_i1_i, i5 15, i5 %p_Val2_12

ST_26: p_Val2_i [1/1] 1.37ns
_ifconv:239  %p_Val2_i = select i1 %underflow_1, i5 -16, i5 %p_Val2_12

ST_26: clip_i_V [1/1] 1.37ns
_ifconv:240  %clip_i_V = select i1 %brmerge8_i, i5 %p_Val2_34_mux_i, i5 %p_Val2_i

ST_26: tmp_3_i [1/1] 1.37ns
_ifconv:247  %tmp_3_i = xor i1 %isneg_14, true

ST_26: overflow_2 [1/1] 1.37ns
_ifconv:248  %overflow_2 = and i1 %brmerge_i_i1, %tmp_3_i

ST_26: underflow_2 [1/1] 1.37ns
_ifconv:252  %underflow_2 = and i1 %brmerge39_i_i, %isneg_14

ST_26: brmerge_i_i_i [1/1] 1.37ns
_ifconv:253  %brmerge_i_i_i = or i1 %underflow_2, %overflow_2

ST_26: underflow_1_not_i [1/1] 1.37ns
_ifconv:254  %underflow_1_not_i = xor i1 %underflow_2, true

ST_26: brmerge9_i [1/1] 1.37ns
_ifconv:255  %brmerge9_i = or i1 %overflow_2, %underflow_1_not_i

ST_26: p_Val2_36_mux_i [1/1] 1.37ns
_ifconv:256  %p_Val2_36_mux_i = select i1 %brmerge_i_i_i, i5 15, i5 %p_Val2_14

ST_26: p_Val2_1_i [1/1] 1.37ns
_ifconv:257  %p_Val2_1_i = select i1 %underflow_2, i5 -16, i5 %p_Val2_14

ST_26: clip_q_V [1/1] 1.37ns
_ifconv:258  %clip_q_V = select i1 %brmerge9_i, i5 %p_Val2_36_mux_i, i5 %p_Val2_1_i

ST_26: tmp_132 [1/1] 0.00ns
_ifconv:259  %tmp_132 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %clip_i_V, i32 4)

ST_26: tmp_133 [1/1] 0.00ns
_ifconv:262  %tmp_133 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %clip_q_V, i32 4)


 <State 27>: 6.38ns
ST_27: tmp_i [1/1] 0.00ns
_ifconv:260  %tmp_i = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %tmp_132, i1 true)

ST_27: p_Result_31 [1/1] 0.00ns
_ifconv:261  %p_Result_31 = call i5 @_ssdm_op_PartSet.i5.i5.i2.i32.i32(i5 undef, i2 %tmp_i, i32 3, i32 4)

ST_27: OP1_V_2 [1/1] 0.00ns
_ifconv:265  %OP1_V_2 = sext i5 %p_Result_31 to i21

ST_27: OP2_V_2 [1/1] 0.00ns
_ifconv:266  %OP2_V_2 = sext i16 %p_Val2_63 to i21

ST_27: p_Val2_32 [1/1] 6.38ns
_ifconv:267  %p_Val2_32 = mul i21 %OP2_V_2, %OP1_V_2

ST_27: isneg_15 [1/1] 0.00ns
_ifconv:268  %isneg_15 = call i1 @_ssdm_op_BitSelect.i1.i21.i32(i21 %p_Val2_32, i32 20)

ST_27: p_Val2_35 [1/1] 0.00ns
_ifconv:269  %p_Val2_35 = call i14 @_ssdm_op_PartSelect.i14.i21.i32.i32(i21 %p_Val2_32, i32 5, i32 18)

ST_27: newsignbit_3 [1/1] 0.00ns
_ifconv:270  %newsignbit_3 = call i1 @_ssdm_op_BitSelect.i1.i21.i32(i21 %p_Val2_32, i32 18)

ST_27: p_Result_i1 [1/1] 0.00ns
_ifconv:271  %p_Result_i1 = call i2 @_ssdm_op_PartSelect.i2.i21.i32.i32(i21 %p_Val2_32, i32 19, i32 20)


 <State 28>: 8.22ns
ST_28: p_not_i_i1 [1/1] 1.36ns
_ifconv:272  %p_not_i_i1 = icmp ne i2 %p_Result_i1, 0

ST_28: brmerge_i_i2 [1/1] 1.37ns
_ifconv:273  %brmerge_i_i2 = or i1 %newsignbit_3, %p_not_i_i1

ST_28: tmp_4_i [1/1] 1.37ns
_ifconv:274  %tmp_4_i = xor i1 %isneg_15, true

ST_28: overflow_3 [1/1] 1.37ns
_ifconv:275  %overflow_3 = and i1 %brmerge_i_i2, %tmp_4_i

ST_28: newsignbit_0_not_i_i1 [1/1] 1.37ns
_ifconv:276  %newsignbit_0_not_i_i1 = xor i1 %newsignbit_3, true

ST_28: p_not38_i_i1 [1/1] 1.36ns
_ifconv:277  %p_not38_i_i1 = icmp ne i2 %p_Result_i1, -1

ST_28: brmerge39_i_i1 [1/1] 1.37ns
_ifconv:278  %brmerge39_i_i1 = or i1 %p_not38_i_i1, %newsignbit_0_not_i_i1

ST_28: underflow_3 [1/1] 1.37ns
_ifconv:279  %underflow_3 = and i1 %brmerge39_i_i1, %isneg_15

ST_28: brmerge_i_i_i1 [1/1] 1.37ns
_ifconv:280  %brmerge_i_i_i1 = or i1 %underflow_3, %overflow_3

ST_28: underflow_not_i1 [1/1] 1.37ns
_ifconv:281  %underflow_not_i1 = xor i1 %underflow_3, true

ST_28: brmerge_i1 [1/1] 1.37ns
_ifconv:282  %brmerge_i1 = or i1 %overflow_3, %underflow_not_i1

ST_28: p_Val2_47_mux_i [1/1] 1.37ns
_ifconv:283  %p_Val2_47_mux_i = select i1 %brmerge_i_i_i1, i14 8191, i14 %p_Val2_35

ST_28: p_Val2_i1 [1/1] 1.37ns
_ifconv:284  %p_Val2_i1 = select i1 %underflow_3, i14 -8192, i14 %p_Val2_35

ST_28: p_Val2_36 [1/1] 1.37ns
_ifconv:285  %p_Val2_36 = select i1 %brmerge_i1, i14 %p_Val2_47_mux_i, i14 %p_Val2_i1


 <State 29>: 6.38ns
ST_29: tmp_1_i [1/1] 0.00ns
_ifconv:263  %tmp_1_i = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %tmp_133, i1 true)

ST_29: p_Result_32 [1/1] 0.00ns
_ifconv:264  %p_Result_32 = call i5 @_ssdm_op_PartSet.i5.i5.i2.i32.i32(i5 undef, i2 %tmp_1_i, i32 3, i32 4)

ST_29: OP1_V_3 [1/1] 0.00ns
_ifconv:286  %OP1_V_3 = sext i5 %p_Result_32 to i21

ST_29: OP2_V_3 [1/1] 0.00ns
_ifconv:287  %OP2_V_3 = sext i16 %p_Val2_61 to i21

ST_29: p_Val2_11 [1/1] 3.36ns
_ifconv:288  %p_Val2_11 = mul i21 %OP2_V_3, %OP1_V_3

ST_29: tmp_6_i [1/1] 0.00ns
_ifconv:289  %tmp_6_i = call i19 @_ssdm_op_BitConcatenate.i19.i14.i5(i14 %p_Val2_36, i5 0)

ST_29: tmp_6_i_cast [1/1] 0.00ns
_ifconv:290  %tmp_6_i_cast = sext i19 %tmp_6_i to i21

ST_29: p_Val2_37 [1/1] 3.02ns
_ifconv:291  %p_Val2_37 = sub i21 %tmp_6_i_cast, %p_Val2_11

ST_29: isneg_16 [1/1] 0.00ns
_ifconv:292  %isneg_16 = call i1 @_ssdm_op_BitSelect.i1.i21.i32(i21 %p_Val2_37, i32 20)

ST_29: p_Val2_38 [1/1] 0.00ns
_ifconv:293  %p_Val2_38 = call i14 @_ssdm_op_PartSelect.i14.i21.i32.i32(i21 %p_Val2_37, i32 5, i32 18)

ST_29: newsignbit_4 [1/1] 0.00ns
_ifconv:294  %newsignbit_4 = call i1 @_ssdm_op_BitSelect.i1.i21.i32(i21 %p_Val2_37, i32 18)

ST_29: tmp_69 [1/1] 0.00ns
_ifconv:295  %tmp_69 = call i2 @_ssdm_op_PartSelect.i2.i21.i32.i32(i21 %p_Val2_37, i32 19, i32 20)


 <State 30>: 8.22ns
ST_30: p_not_i_i_i [1/1] 1.36ns
_ifconv:296  %p_not_i_i_i = icmp ne i2 %tmp_69, 0

ST_30: brmerge_i_i4_i [1/1] 1.37ns
_ifconv:297  %brmerge_i_i4_i = or i1 %newsignbit_4, %p_not_i_i_i

ST_30: tmp_9_i1 [1/1] 1.37ns
_ifconv:298  %tmp_9_i1 = xor i1 %isneg_16, true

ST_30: overflow_4 [1/1] 1.37ns
_ifconv:299  %overflow_4 = and i1 %brmerge_i_i4_i, %tmp_9_i1

ST_30: newsignbit_0_not_i_i_i [1/1] 1.37ns
_ifconv:300  %newsignbit_0_not_i_i_i = xor i1 %newsignbit_4, true

ST_30: p_not38_i_i_i [1/1] 1.36ns
_ifconv:301  %p_not38_i_i_i = icmp ne i2 %tmp_69, -1

ST_30: brmerge39_i_i_i [1/1] 1.37ns
_ifconv:302  %brmerge39_i_i_i = or i1 %p_not38_i_i_i, %newsignbit_0_not_i_i_i

ST_30: underflow_4 [1/1] 1.37ns
_ifconv:303  %underflow_4 = and i1 %brmerge39_i_i_i, %isneg_16

ST_30: brmerge_i_i_i_i [1/1] 1.37ns
_ifconv:304  %brmerge_i_i_i_i = or i1 %underflow_4, %overflow_4

ST_30: underflow_4_not_i [1/1] 1.37ns
_ifconv:305  %underflow_4_not_i = xor i1 %underflow_4, true

ST_30: brmerge1_i [1/1] 1.37ns
_ifconv:306  %brmerge1_i = or i1 %overflow_4, %underflow_4_not_i

ST_30: ssdm_int_14_1024_0_true_V_write_assign [1/1] 1.37ns
_ifconv:307  %ssdm_int_14_1024_0_true_V_write_assign = select i1 %brmerge_i_i_i_i, i14 8191, i14 %p_Val2_38

ST_30: p_Val2_2_i [1/1] 1.37ns
_ifconv:308  %p_Val2_2_i = select i1 %underflow_4, i14 -8192, i14 %p_Val2_38

ST_30: ph_est_V [1/1] 1.37ns
_ifconv:309  %ph_est_V = select i1 %brmerge1_i, i14 %ssdm_int_14_1024_0_true_V_write_assign, i14 %p_Val2_2_i


 <State 31>: 7.85ns
ST_31: tmp_i2 [1/1] 0.00ns
_ifconv:310  %tmp_i2 = call i28 @_ssdm_op_BitConcatenate.i28.i14.i14(i14 %ph_est_V, i14 0)

ST_31: tmp_11_i [1/1] 0.00ns
_ifconv:311  %tmp_11_i = sext i28 %tmp_i2 to i32

ST_31: tmp_12_i [1/1] 2.79ns
_ifconv:312  %tmp_12_i = shl i32 %tmp_11_i, %sh_assign_1_i_cast

ST_31: tmp_14_i [1/1] 2.79ns
_ifconv:313  %tmp_14_i = ashr i28 %tmp_i2, %sh_assign_1_i_cast1

ST_31: tmp_14_i_cast [1/1] 0.00ns
_ifconv:314  %tmp_14_i_cast = zext i28 %tmp_14_i to i32

ST_31: p_Val2_0_i_i121_in_i [1/1] 1.37ns
_ifconv:315  %p_Val2_0_i_i121_in_i = select i1 %isNeg, i32 %tmp_12_i, i32 %tmp_14_i_cast

ST_31: p_Val2_43 [1/1] 0.00ns
_ifconv:316  %p_Val2_43 = trunc i32 %p_Val2_0_i_i121_in_i to i28

ST_31: tmp_18_i [1/1] 2.79ns
_ifconv:317  %tmp_18_i = shl i32 %tmp_11_i, %sh_assign_3_i_cast

ST_31: tmp_20_i [1/1] 2.79ns
_ifconv:318  %tmp_20_i = ashr i28 %tmp_i2, %sh_assign_3_i_cast1

ST_31: tmp_20_i_cast [1/1] 0.00ns
_ifconv:319  %tmp_20_i_cast = zext i28 %tmp_20_i to i32

ST_31: p_in_i [1/1] 1.37ns
_ifconv:320  %p_in_i = select i1 %isNeg_1, i32 %tmp_18_i, i32 %tmp_20_i_cast

ST_31: p_Val2_40 [1/1] 0.00ns
_ifconv:321  %p_Val2_40 = trunc i32 %p_in_i to i28

ST_31: p_Val2_41 [1/1] 0.00ns
_ifconv:322  %p_Val2_41 = load i28* @i_reg_V, align 4

ST_31: p_Val2_42 [1/1] 2.32ns
_ifconv:323  %p_Val2_42 = add i28 %p_Val2_41, %p_Val2_40

ST_31: p_Val2_47 [1/1] 1.37ns
_ifconv:338  %p_Val2_47 = select i1 %control_in_reg_clr_read, i28 %p_5, i28 %p_Val2_42

ST_31: stg_548 [1/1] 0.00ns
_ifconv:339  store i28 %p_Val2_47, i28* @i_reg_V, align 4


 <State 32>: 7.80ns
ST_32: tmp_21_i [1/1] 0.00ns
_ifconv:324  %tmp_21_i = sext i28 %p_Val2_42 to i29

ST_32: tmp_22_i [1/1] 0.00ns
_ifconv:325  %tmp_22_i = sext i28 %p_Val2_43 to i29

ST_32: p_Val2_44 [1/1] 2.32ns
_ifconv:326  %p_Val2_44 = add i29 %tmp_22_i, %tmp_21_i

ST_32: isneg_17 [1/1] 0.00ns
_ifconv:327  %isneg_17 = call i1 @_ssdm_op_BitSelect.i1.i29.i32(i29 %p_Val2_44, i32 28)

ST_32: p_Val2_45 [1/1] 0.00ns
_ifconv:328  %p_Val2_45 = trunc i29 %p_Val2_44 to i28

ST_32: newsignbit_5 [1/1] 0.00ns
_ifconv:329  %newsignbit_5 = call i1 @_ssdm_op_BitSelect.i1.i29.i32(i29 %p_Val2_44, i32 27)

ST_32: tmp_24_i [1/1] 1.37ns
_ifconv:330  %tmp_24_i = xor i1 %newsignbit_5, true

ST_32: underflow_5 [1/1] 1.37ns
_ifconv:331  %underflow_5 = and i1 %isneg_17, %tmp_24_i

ST_32: brmerge_i_i_i2 [1/1] 1.37ns
_ifconv:332  %brmerge_i_i_i2 = xor i1 %isneg_17, %newsignbit_5

ST_32: isneg_not_i [1/1] 1.37ns
_ifconv:333  %isneg_not_i = xor i1 %isneg_17, true

ST_32: brmerge_i2 [1/1] 1.37ns
_ifconv:334  %brmerge_i2 = or i1 %newsignbit_5, %isneg_not_i

ST_32: p_Val2_54_mux_i [1/1] 1.37ns
_ifconv:335  %p_Val2_54_mux_i = select i1 %brmerge_i_i_i2, i28 134217727, i28 %p_Val2_45

ST_32: p_Val2_i2 [1/1] 1.37ns
_ifconv:336  %p_Val2_i2 = select i1 %underflow_5, i28 -134217728, i28 %p_Val2_45

ST_32: tmp_25_i [1/1] 1.37ns
_ifconv:337  %tmp_25_i = select i1 %brmerge_i2, i28 %p_Val2_54_mux_i, i28 %p_Val2_i2


 <State 33>: 6.48ns
ST_33: tmp_27_i [1/1] 0.00ns
_ifconv:340  %tmp_27_i = sext i28 %tmp_25_i to i32

ST_33: tmp_28_i [1/1] 2.79ns
_ifconv:341  %tmp_28_i = shl i32 %tmp_27_i, %sh_assign_5_i_cast

ST_33: tmp_30_i [1/1] 2.79ns
_ifconv:342  %tmp_30_i = ashr i28 %tmp_25_i, %sh_assign_5_i_cast1

ST_33: tmp_30_i_cast [1/1] 0.00ns
_ifconv:343  %tmp_30_i_cast = zext i28 %tmp_30_i to i32

ST_33: p_Val2_0_i_i129_in_i [1/1] 1.37ns
_ifconv:344  %p_Val2_0_i_i129_in_i = select i1 %isNeg_2, i32 %tmp_28_i, i32 %tmp_30_i_cast

ST_33: p_Val2_51 [1/1] 0.00ns
_ifconv:345  %p_Val2_51 = trunc i32 %p_Val2_0_i_i129_in_i to i28

ST_33: p_Val2_50 [1/1] 0.00ns
_ifconv:346  %p_Val2_50 = load i16* @phase_angle_V, align 2

ST_33: tmp_31_i [1/1] 0.00ns
_ifconv:347  %tmp_31_i = call i27 @_ssdm_op_BitConcatenate.i27.i16.i11(i16 %p_Val2_50, i11 0)

ST_33: tmp_31_i_cast [1/1] 0.00ns
_ifconv:348  %tmp_31_i_cast = sext i27 %tmp_31_i to i29

ST_33: tmp_32_i [1/1] 0.00ns
_ifconv:349  %tmp_32_i = zext i28 %p_Val2_51 to i29

ST_33: p_Val2_52 [1/1] 2.32ns
_ifconv:350  %p_Val2_52 = sub i29 %tmp_31_i_cast, %tmp_32_i

ST_33: p_Val2_53 [1/1] 0.00ns
_ifconv:351  %p_Val2_53 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %p_Val2_52, i32 11, i32 26)

ST_33: stg_575 [1/1] 0.00ns
_ifconv:352  store i16 %p_Val2_53, i16* @phase_angle_V, align 2

ST_33: msb_V [1/1] 0.00ns
_ifconv:353  %msb_V = call i2 @_ssdm_op_PartSelect.i2.i29.i32.i32(i29 %p_Val2_52, i32 25, i32 26)

ST_33: tmp_144 [1/1] 0.00ns
_ifconv:354  %tmp_144 = call i1 @_ssdm_op_BitSelect.i1.i29.i32(i29 %p_Val2_52, i32 25)

ST_33: sin_adr_V [1/1] 0.00ns
_ifconv:355  %sin_adr_V = call i10 @_ssdm_op_PartSelect.i10.i29.i32.i32(i29 %p_Val2_52, i32 15, i32 24)


 <State 34>: 5.13ns
ST_34: cos_adr_V_3 [1/1] 1.37ns
_ifconv:356  %cos_adr_V_3 = xor i10 %sin_adr_V, -1

ST_34: cos_adr_V [1/1] 1.37ns
_ifconv:357  %cos_adr_V = select i1 %tmp_144, i10 %cos_adr_V_3, i10 %sin_adr_V

ST_34: sin_adr_V_1 [1/1] 1.37ns
_ifconv:358  %sin_adr_V_1 = select i1 %tmp_144, i10 %sin_adr_V, i10 %cos_adr_V_3

ST_34: tmp_34_i [1/1] 0.00ns
_ifconv:359  %tmp_34_i = zext i10 %cos_adr_V to i64

ST_34: cos_lut_addr [1/1] 0.00ns
_ifconv:360  %cos_lut_addr = getelementptr [1024 x i15]* @cos_lut, i64 0, i64 %tmp_34_i

ST_34: cos_out_V_5 [2/2] 2.39ns
_ifconv:361  %cos_out_V_5 = load i15* %cos_lut_addr, align 2

ST_34: tmp_35_i [1/1] 0.00ns
_ifconv:363  %tmp_35_i = zext i10 %sin_adr_V_1 to i64

ST_34: cos_lut_addr_1 [1/1] 0.00ns
_ifconv:364  %cos_lut_addr_1 = getelementptr [1024 x i15]* @cos_lut, i64 0, i64 %tmp_35_i

ST_34: sin_out_V_4 [2/2] 2.39ns
_ifconv:365  %sin_out_V_4 = load i15* %cos_lut_addr_1, align 2


 <State 35>: 8.21ns
ST_35: cos_out_V_5 [1/2] 2.39ns
_ifconv:361  %cos_out_V_5 = load i15* %cos_lut_addr, align 2

ST_35: cos_out_V_4_i_cast [1/1] 0.00ns
_ifconv:362  %cos_out_V_4_i_cast = zext i15 %cos_out_V_5 to i16

ST_35: sin_out_V_4 [1/2] 2.39ns
_ifconv:365  %sin_out_V_4 = load i15* %cos_lut_addr_1, align 2

ST_35: sin_out_V_4_i_cast [1/1] 0.00ns
_ifconv:366  %sin_out_V_4_i_cast = zext i15 %sin_out_V_4 to i16

ST_35: tmp_36_i [1/1] 1.36ns
_ifconv:367  %tmp_36_i = icmp eq i2 %msb_V, 1

ST_35: tmp_37_i [1/1] 1.36ns
_ifconv:368  %tmp_37_i = icmp eq i2 %msb_V, 0

ST_35: tmp_38_i [1/1] 1.36ns
_ifconv:369  %tmp_38_i = icmp eq i2 %msb_V, -1

ST_35: sin_out_V [1/1] 1.96ns
_ifconv:370  %sin_out_V = sub i16 0, %sin_out_V_4_i_cast

ST_35: cos_out_V [1/1] 1.96ns
_ifconv:371  %cos_out_V = sub i16 0, %cos_out_V_4_i_cast

ST_35: sel_tmp3_demorgan_i [1/1] 1.37ns
_ifconv:372  %sel_tmp3_demorgan_i = or i1 %tmp_36_i, %tmp_37_i

ST_35: sel_tmp3_i [1/1] 1.37ns
_ifconv:373  %sel_tmp3_i = xor i1 %sel_tmp3_demorgan_i, true

ST_35: sel_tmp4_i [1/1] 1.37ns
_ifconv:374  %sel_tmp4_i = and i1 %tmp_38_i, %sel_tmp3_i

ST_35: cos_out_V_1 [1/1] 1.37ns
_ifconv:375  %cos_out_V_1 = select i1 %sel_tmp4_i, i16 %cos_out_V_4_i_cast, i16 %cos_out_V

ST_35: sel_tmp6_i [1/1] 1.37ns
_ifconv:376  %sel_tmp6_i = xor i1 %tmp_36_i, true

ST_35: sel_tmp7_i [1/1] 1.37ns
_ifconv:377  %sel_tmp7_i = and i1 %tmp_37_i, %sel_tmp6_i

ST_35: cos_out_V_6 [1/1] 1.37ns
_ifconv:378  %cos_out_V_6 = select i1 %sel_tmp7_i, i16 %cos_out_V_4_i_cast, i16 %cos_out_V_1

ST_35: newSel8 [1/1] 1.37ns
_ifconv:379  %newSel8 = select i1 %sel_tmp7_i, i16 %sin_out_V_4_i_cast, i16 %sin_out_V

ST_35: or_cond6 [1/1] 1.37ns
_ifconv:380  %or_cond6 = or i1 %sel_tmp7_i, %sel_tmp4_i

ST_35: newSel9 [1/1] 1.37ns
_ifconv:381  %newSel9 = select i1 %tmp_36_i, i16 %sin_out_V_4_i_cast, i16 %sin_out_V

ST_35: sin_out_V_5 [1/1] 1.37ns
_ifconv:382  %sin_out_V_5 = select i1 %or_cond6, i16 %newSel8, i16 %newSel9

ST_35: p_Val2_65 [1/1] 0.00ns
_ifconv:383  %p_Val2_65 = call i12 @_ssdm_op_PartSelect.i12.i16.i32.i32(i16 %cos_out_V_6, i32 4, i32 15)

ST_35: p_Val2_67 [1/1] 0.00ns
_ifconv:384  %p_Val2_67 = call i12 @_ssdm_op_PartSelect.i12.i16.i32.i32(i16 %sin_out_V_5, i32 4, i32 15)

ST_35: isneg_18 [1/1] 0.00ns
_ifconv:436  %isneg_18 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %cos_out_V_6, i32 15)

ST_35: isneg_19 [1/1] 0.00ns
_ifconv:462  %isneg_19 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %sin_out_V_5, i32 15)

ST_35: stg_612 [1/1] 0.00ns
_ifconv:493  store i12 %p_Val2_67, i12* %p_Val2_1, align 2

ST_35: stg_613 [1/1] 0.00ns
_ifconv:494  store i12 %p_Val2_65, i12* %p_Val2_s, align 2


 <State 36>: 6.54ns
ST_36: tmp_70 [1/1] 2.28ns
_ifconv:385  %tmp_70 = icmp eq i16 %p_Val2_61, 0

ST_36: tmp_V [1/1] 0.00ns
_ifconv:386  %tmp_V = sext i16 %p_Val2_61 to i17

ST_36: tmp_V_1 [1/1] 1.96ns
_ifconv:387  %tmp_V_1 = sub i17 0, %tmp_V

ST_36: tmp_V_15 [1/1] 1.37ns
_ifconv:388  %tmp_V_15 = select i1 %isneg_13, i17 %tmp_V_1, i17 %tmp_V

ST_36: p_Result_33 [1/1] 0.00ns
_ifconv:389  %p_Result_33 = call i17 @llvm.part.select.i17(i17 %tmp_V_15, i32 16, i32 0) nounwind

ST_36: p_Result_34 [1/1] 0.00ns
_ifconv:390  %p_Result_34 = call i32 @_ssdm_op_BitConcatenate.i32.i15.i17(i15 -1, i17 %p_Result_33)

ST_36: tmp_71 [1/1] 3.21ns
_ifconv:391  %tmp_71 = call i32 @llvm.cttz.i32(i32 %p_Result_34, i1 true) nounwind

ST_36: tmp_145 [1/1] 0.00ns
_ifconv:393  %tmp_145 = trunc i32 %tmp_71 to i8

ST_36: tmp_81 [1/1] 2.28ns
_ifconv:410  %tmp_81 = icmp eq i16 %p_Val2_63, 0

ST_36: tmp_V_2 [1/1] 0.00ns
_ifconv:411  %tmp_V_2 = sext i16 %p_Val2_63 to i17

ST_36: tmp_V_3 [1/1] 1.96ns
_ifconv:412  %tmp_V_3 = sub i17 0, %tmp_V_2

ST_36: tmp_V_16 [1/1] 1.37ns
_ifconv:413  %tmp_V_16 = select i1 %isneg_14, i17 %tmp_V_3, i17 %tmp_V_2

ST_36: p_Result_37 [1/1] 0.00ns
_ifconv:414  %p_Result_37 = call i17 @llvm.part.select.i17(i17 %tmp_V_16, i32 16, i32 0) nounwind

ST_36: p_Result_38 [1/1] 0.00ns
_ifconv:415  %p_Result_38 = call i32 @_ssdm_op_BitConcatenate.i32.i15.i17(i15 -1, i17 %p_Result_37)

ST_36: tmp_82 [1/1] 3.21ns
_ifconv:416  %tmp_82 = call i32 @llvm.cttz.i32(i32 %p_Result_38, i1 true) nounwind

ST_36: tmp_147 [1/1] 0.00ns
_ifconv:418  %tmp_147 = trunc i32 %tmp_82 to i8

ST_36: tmp_91 [1/1] 2.14ns
_ifconv:435  %tmp_91 = icmp eq i12 %p_Val2_65, 0

ST_36: tmp_V_4 [1/1] 0.00ns
_ifconv:437  %tmp_V_4 = sext i12 %p_Val2_65 to i13

ST_36: tmp_V_5 [1/1] 1.84ns
_ifconv:438  %tmp_V_5 = sub i13 0, %tmp_V_4

ST_36: tmp_V_17 [1/1] 1.37ns
_ifconv:439  %tmp_V_17 = select i1 %isneg_18, i13 %tmp_V_5, i13 %tmp_V_4

ST_36: p_Result_41 [1/1] 0.00ns
_ifconv:440  %p_Result_41 = call i13 @llvm.part.select.i13(i13 %tmp_V_17, i32 12, i32 0) nounwind

ST_36: p_Result_42 [1/1] 0.00ns
_ifconv:441  %p_Result_42 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i13(i19 -1, i13 %p_Result_41)

ST_36: tmp_92 [1/1] 3.21ns
_ifconv:442  %tmp_92 = call i32 @llvm.cttz.i32(i32 %p_Result_42, i1 true) nounwind

ST_36: tmp_150 [1/1] 0.00ns
_ifconv:444  %tmp_150 = trunc i32 %tmp_92 to i8

ST_36: tmp_101 [1/1] 2.14ns
_ifconv:461  %tmp_101 = icmp eq i12 %p_Val2_67, 0

ST_36: tmp_V_6 [1/1] 0.00ns
_ifconv:463  %tmp_V_6 = sext i12 %p_Val2_67 to i13

ST_36: tmp_V_7 [1/1] 1.84ns
_ifconv:464  %tmp_V_7 = sub i13 0, %tmp_V_6

ST_36: tmp_V_18 [1/1] 1.37ns
_ifconv:465  %tmp_V_18 = select i1 %isneg_19, i13 %tmp_V_7, i13 %tmp_V_6

ST_36: p_Result_45 [1/1] 0.00ns
_ifconv:466  %p_Result_45 = call i13 @llvm.part.select.i13(i13 %tmp_V_18, i32 12, i32 0) nounwind

ST_36: p_Result_46 [1/1] 0.00ns
_ifconv:467  %p_Result_46 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i13(i19 -1, i13 %p_Result_45)

ST_36: tmp_102 [1/1] 3.21ns
_ifconv:468  %tmp_102 = call i32 @llvm.cttz.i32(i32 %p_Result_46, i1 true) nounwind

ST_36: tmp_153 [1/1] 0.00ns
_ifconv:470  %tmp_153 = trunc i32 %tmp_102 to i8


 <State 37>: 6.33ns
ST_37: j [1/1] 2.44ns
_ifconv:392  %j = sub nsw i32 16, %tmp_71

ST_37: tmp_72 [1/1] 2.52ns
_ifconv:395  %tmp_72 = icmp eq i32 %tmp_71, 16

ST_37: tmp_73 [1/1] 2.52ns
_ifconv:397  %tmp_73 = icmp sgt i32 %j, 23

ST_37: tmp_74 [1/1] 2.44ns
_ifconv:398  %tmp_74 = add nsw i32 %j, -23

ST_37: tmp_75 [1/1] 1.37ns
_ifconv:399  %tmp_75 = select i1 %tmp_73, i32 %tmp_74, i32 0

ST_37: tmp_76 [1/1] 2.44ns
_ifconv:400  %tmp_76 = add nsw i32 %j, -1

ST_37: p_Result_s [1/1] 0.00ns
_ifconv:401  %p_Result_s = call i17 @llvm.part.select.i17(i17 %tmp_V_15, i32 %tmp_75, i32 %tmp_76) nounwind

ST_37: tmp_77 [1/1] 2.52ns
_ifconv:403  %tmp_77 = icmp slt i32 %j, 23

ST_37: tmp_146 [1/1] 0.00ns
_ifconv:404  %tmp_146 = trunc i32 %j to i23

ST_37: tmp_79 [1/1] 2.20ns
_ifconv:405  %tmp_79 = sub i23 23, %tmp_146

ST_37: tmp_88_cast [1/1] 1.37ns
_ifconv:406  %tmp_88_cast = select i1 %tmp_77, i23 %tmp_79, i23 0

ST_37: j_1 [1/1] 2.44ns
_ifconv:417  %j_1 = sub nsw i32 16, %tmp_82

ST_37: tmp_83 [1/1] 2.52ns
_ifconv:420  %tmp_83 = icmp eq i32 %tmp_82, 16

ST_37: tmp_84 [1/1] 2.52ns
_ifconv:422  %tmp_84 = icmp sgt i32 %j_1, 23

ST_37: tmp_85 [1/1] 2.44ns
_ifconv:423  %tmp_85 = add nsw i32 %j_1, -23

ST_37: tmp_86 [1/1] 1.37ns
_ifconv:424  %tmp_86 = select i1 %tmp_84, i32 %tmp_85, i32 0

ST_37: tmp_87 [1/1] 2.44ns
_ifconv:425  %tmp_87 = add nsw i32 %j_1, -1

ST_37: p_Result_8 [1/1] 0.00ns
_ifconv:426  %p_Result_8 = call i17 @llvm.part.select.i17(i17 %tmp_V_16, i32 %tmp_86, i32 %tmp_87) nounwind

ST_37: tmp_88 [1/1] 2.52ns
_ifconv:428  %tmp_88 = icmp slt i32 %j_1, 23

ST_37: tmp_148 [1/1] 0.00ns
_ifconv:429  %tmp_148 = trunc i32 %j_1 to i23

ST_37: tmp_89 [1/1] 2.20ns
_ifconv:430  %tmp_89 = sub i23 23, %tmp_148

ST_37: tmp_101_cast [1/1] 1.37ns
_ifconv:431  %tmp_101_cast = select i1 %tmp_88, i23 %tmp_89, i23 0

ST_37: j_2 [1/1] 2.44ns
_ifconv:443  %j_2 = sub nsw i32 12, %tmp_92

ST_37: tmp_93 [1/1] 2.52ns
_ifconv:446  %tmp_93 = icmp eq i32 %tmp_92, 12

ST_37: tmp_94 [1/1] 2.52ns
_ifconv:448  %tmp_94 = icmp sgt i32 %j_2, 23

ST_37: tmp_95 [1/1] 2.44ns
_ifconv:449  %tmp_95 = add nsw i32 %j_2, -23

ST_37: tmp_96 [1/1] 1.37ns
_ifconv:450  %tmp_96 = select i1 %tmp_94, i32 %tmp_95, i32 0

ST_37: tmp_97 [1/1] 2.44ns
_ifconv:451  %tmp_97 = add nsw i32 %j_2, -1

ST_37: p_Result_20 [1/1] 0.00ns
_ifconv:452  %p_Result_20 = call i13 @llvm.part.select.i13(i13 %tmp_V_17, i32 %tmp_96, i32 %tmp_97) nounwind

ST_37: tmp_98 [1/1] 2.52ns
_ifconv:454  %tmp_98 = icmp slt i32 %j_2, 23

ST_37: tmp_151 [1/1] 0.00ns
_ifconv:455  %tmp_151 = trunc i32 %j_2 to i23

ST_37: tmp_99 [1/1] 2.20ns
_ifconv:456  %tmp_99 = sub i23 23, %tmp_151

ST_37: tmp_114_cast [1/1] 1.37ns
_ifconv:457  %tmp_114_cast = select i1 %tmp_98, i23 %tmp_99, i23 0

ST_37: j_3 [1/1] 2.44ns
_ifconv:469  %j_3 = sub nsw i32 12, %tmp_102

ST_37: tmp_103 [1/1] 2.52ns
_ifconv:472  %tmp_103 = icmp eq i32 %tmp_102, 12

ST_37: tmp_104 [1/1] 2.52ns
_ifconv:474  %tmp_104 = icmp sgt i32 %j_3, 23

ST_37: tmp_105 [1/1] 2.44ns
_ifconv:475  %tmp_105 = add nsw i32 %j_3, -23

ST_37: tmp_106 [1/1] 1.37ns
_ifconv:476  %tmp_106 = select i1 %tmp_104, i32 %tmp_105, i32 0

ST_37: tmp_107 [1/1] 2.44ns
_ifconv:477  %tmp_107 = add nsw i32 %j_3, -1

ST_37: p_Result_25 [1/1] 0.00ns
_ifconv:478  %p_Result_25 = call i13 @llvm.part.select.i13(i13 %tmp_V_18, i32 %tmp_106, i32 %tmp_107) nounwind

ST_37: tmp_108 [1/1] 2.52ns
_ifconv:480  %tmp_108 = icmp slt i32 %j_3, 23

ST_37: tmp_154 [1/1] 0.00ns
_ifconv:481  %tmp_154 = trunc i32 %j_3 to i23

ST_37: tmp_109 [1/1] 2.20ns
_ifconv:482  %tmp_109 = sub i23 23, %tmp_154

ST_37: tmp_127_cast [1/1] 1.37ns
_ifconv:483  %tmp_127_cast = select i1 %tmp_108, i23 %tmp_109, i23 0


 <State 38>: 5.51ns
ST_38: p_Repl2_2_trunc [1/1] 1.72ns
_ifconv:394  %p_Repl2_2_trunc = sub i8 -126, %tmp_145

ST_38: p_Result_35 [1/1] 0.00ns
_ifconv:396  %p_Result_35 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %isneg_13, i8 %p_Repl2_2_trunc, i23 0)

ST_38: man_V [1/1] 0.00ns
_ifconv:402  %man_V = sext i17 %p_Result_s to i23

ST_38: man_V_18 [1/1] 2.77ns
_ifconv:407  %man_V_18 = shl i23 %man_V, %tmp_88_cast

ST_38: p_Result_36 [1/1] 0.00ns
_ifconv:408  %p_Result_36 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %isneg_13, i8 %p_Repl2_2_trunc, i23 %man_V_18)

ST_38: res_V [1/1] 1.37ns
_ifconv:409  %res_V = select i1 %tmp_72, i32 %p_Result_35, i32 %p_Result_36

ST_38: p_Repl2_6_trunc [1/1] 1.72ns
_ifconv:419  %p_Repl2_6_trunc = sub i8 -126, %tmp_147

ST_38: p_Result_39 [1/1] 0.00ns
_ifconv:421  %p_Result_39 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %isneg_14, i8 %p_Repl2_6_trunc, i23 0)

ST_38: man_V_11 [1/1] 0.00ns
_ifconv:427  %man_V_11 = sext i17 %p_Result_8 to i23

ST_38: man_V_19 [1/1] 2.77ns
_ifconv:432  %man_V_19 = shl i23 %man_V_11, %tmp_101_cast

ST_38: p_Result_40 [1/1] 0.00ns
_ifconv:433  %p_Result_40 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %isneg_14, i8 %p_Repl2_6_trunc, i23 %man_V_19)

ST_38: res_V_5 [1/1] 1.37ns
_ifconv:434  %res_V_5 = select i1 %tmp_83, i32 %p_Result_39, i32 %p_Result_40

ST_38: p_Repl2_10_trunc [1/1] 1.72ns
_ifconv:445  %p_Repl2_10_trunc = sub i8 -128, %tmp_150

ST_38: p_Result_43 [1/1] 0.00ns
_ifconv:447  %p_Result_43 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %isneg_18, i8 %p_Repl2_10_trunc, i23 0)

ST_38: man_V_13 [1/1] 0.00ns
_ifconv:453  %man_V_13 = sext i13 %p_Result_20 to i23

ST_38: man_V_20 [1/1] 2.76ns
_ifconv:458  %man_V_20 = shl i23 %man_V_13, %tmp_114_cast

ST_38: p_Result_44 [1/1] 0.00ns
_ifconv:459  %p_Result_44 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %isneg_18, i8 %p_Repl2_10_trunc, i23 %man_V_20)

ST_38: res_V_8 [1/1] 1.37ns
_ifconv:460  %res_V_8 = select i1 %tmp_93, i32 %p_Result_43, i32 %p_Result_44

ST_38: p_Repl2_14_trunc [1/1] 1.72ns
_ifconv:471  %p_Repl2_14_trunc = sub i8 -128, %tmp_153

ST_38: p_Result_47 [1/1] 0.00ns
_ifconv:473  %p_Result_47 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %isneg_19, i8 %p_Repl2_14_trunc, i23 0)

ST_38: man_V_15 [1/1] 0.00ns
_ifconv:479  %man_V_15 = sext i13 %p_Result_25 to i23

ST_38: man_V_21 [1/1] 2.76ns
_ifconv:484  %man_V_21 = shl i23 %man_V_15, %tmp_127_cast

ST_38: p_Result_48 [1/1] 0.00ns
_ifconv:485  %p_Result_48 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i23(i1 %isneg_19, i8 %p_Repl2_14_trunc, i23 %man_V_21)

ST_38: res_V_11 [1/1] 1.37ns
_ifconv:486  %res_V_11 = select i1 %tmp_103, i32 %p_Result_47, i32 %p_Result_48

ST_38: p_Repl2_11 [1/1] 1.37ns
_ifconv:487  %p_Repl2_11 = select i1 %tmp_70, i32 0, i32 %res_V

ST_38: p_Repl2_10 [1/1] 1.37ns
_ifconv:488  %p_Repl2_10 = select i1 %tmp_81, i32 0, i32 %res_V_5

ST_38: p_Repl2_9 [1/1] 1.37ns
_ifconv:489  %p_Repl2_9 = select i1 %tmp_91, i32 0, i32 %res_V_8

ST_38: p_Repl2_8 [1/1] 1.37ns
_ifconv:490  %p_Repl2_8 = select i1 %tmp_101, i32 0, i32 %res_V_11

ST_38: p_Result_49 [1/1] 0.00ns
_ifconv:491  %p_Result_49 = call i128 @_ssdm_op_BitConcatenate.i128.i32.i32.i32.i32(i32 %p_Repl2_11, i32 %p_Repl2_10, i32 %p_Repl2_9, i32 %p_Repl2_8)

ST_38: stg_719 [1/1] 0.00ns
_ifconv:492  call void @_ssdm_op_Write.axis.volatile.i128P(i128* %s_out_V_V, i128 %p_Result_49)

ST_38: stg_720 [1/1] 0.00ns
_ifconv:495  br label %1



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
