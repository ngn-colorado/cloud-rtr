

================================================================
== Vivado HLS Report for 'aes'
================================================================
* Date:           Sat May  9 23:39:32 2015

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        aes_runner
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.75|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|        24|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+------------------------+-----+-----+---------+--------------+--------+
|        RTL Ports       | Dir | Bits| Protocol| Source Object| C Type |
+------------------------+-----+-----+---------+--------------+--------+
|s_axi_AXILiteS_AWVALID  |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_AWREADY  | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_AWADDR   |  in |    7|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WVALID   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WREADY   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WDATA    |  in |   32|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WSTRB    |  in |    4|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARVALID  |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARREADY  | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARADDR   |  in |    7|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RVALID   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RREADY   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RDATA    | out |   32|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RRESP    | out |    2|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BVALID   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BREADY   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BRESP    | out |    2|  s_axi  |   AXILiteS   | scalar |
+------------------------+-----+-----+---------+--------------+--------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 26
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (!exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	3  / true
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: length_read [1/1] 0.00ns
:7  %length_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %length_r)

ST_1: destinationAddress_read [1/1] 0.00ns
:8  %destinationAddress_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %destinationAddress)

ST_1: sourceAddress_read [1/1] 0.00ns
:9  %sourceAddress_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %sourceAddress)

ST_1: sourceAddress_assign [1/1] 0.00ns
:10  %sourceAddress_assign = alloca i32, align 4

ST_1: destinationAddress_assign [1/1] 0.00ns
:11  %destinationAddress_assign = alloca i32, align 4

ST_1: stg_32 [1/1] 0.00ns
:12  store volatile i32 %sourceAddress_read, i32* %sourceAddress_assign, align 4

ST_1: stg_33 [1/1] 0.00ns
:13  store volatile i32 %destinationAddress_read, i32* %destinationAddress_assign, align 4

ST_1: key_local_V [1/1] 0.00ns
:31  %key_local_V = call i128 @_ssdm_op_Read.ap_vld.i128P(i128* %key_in_V)


 <State 2>: 2.44ns
ST_2: stg_35 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i128* %ddr_V), !map !7

ST_2: stg_36 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 %sourceAddress), !map !13

ST_2: stg_37 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i128* %key_in_V), !map !19

ST_2: stg_38 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %destinationAddress), !map !25

ST_2: stg_39 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %length_r), !map !29

ST_2: stg_40 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1 false) nounwind, !map !33

ST_2: stg_41 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @str) nounwind

ST_2: stg_42 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecWire(i128* %ddr_V, [6 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_2: stg_43 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecWire(i32 %length_r, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_44 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecWire(i32 %destinationAddress, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_45 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecWire(i128* %key_in_V, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_46 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecWire(i32 %sourceAddress, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_47 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecWire(i32 0, [11 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_48 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecWire(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_49 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecWire(i32 %length_r, [7 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_50 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecWire(i32 %destinationAddress, [7 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_51 [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecWire(i128* %key_in_V, [7 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_52 [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecWire(i32 %sourceAddress, [7 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: sourceAddress_assign_load [1/1] 0.00ns
:25  %sourceAddress_assign_load = load volatile i32* %sourceAddress_assign, align 4

ST_2: sourceAddressLocal [1/1] 0.00ns
:26  %sourceAddressLocal = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %sourceAddress_assign_load, i32 4, i32 31)

ST_2: sourceAddressLocal_2 [1/1] 0.00ns
:27  %sourceAddressLocal_2 = zext i28 %sourceAddressLocal to i32

ST_2: destinationAddress_assign_load [1/1] 0.00ns
:28  %destinationAddress_assign_load = load volatile i32* %destinationAddress_assign, align 4

ST_2: destinationAddressLocal [1/1] 0.00ns
:29  %destinationAddressLocal = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %destinationAddress_assign_load, i32 4, i32 31)

ST_2: destinationAddressLocal_2 [1/1] 0.00ns
:30  %destinationAddressLocal_2 = zext i28 %destinationAddressLocal to i32

ST_2: tmp [1/1] 2.44ns
:32  %tmp = add i32 %sourceAddressLocal_2, %length_read

ST_2: stg_60 [1/1] 1.57ns
:33  br label %1


 <State 3>: 8.75ns
ST_3: sourceAddressLocal1 [1/1] 0.00ns
:0  %sourceAddressLocal1 = phi i32 [ %sourceAddressLocal_2, %0 ], [ %sourceAddressLocal_1, %2 ]

ST_3: destinationAddressLocal1 [1/1] 0.00ns
:1  %destinationAddressLocal1 = phi i32 [ %destinationAddressLocal_2, %0 ], [ %destinationAddressLocal_1, %2 ]

ST_3: exitcond [1/1] 2.52ns
:2  %exitcond = icmp eq i32 %sourceAddressLocal1, %tmp

ST_3: stg_64 [1/1] 0.00ns
:3  br i1 %exitcond, label %3, label %2

ST_3: tmp_1 [1/1] 0.00ns
:0  %tmp_1 = zext i32 %sourceAddressLocal1 to i64

ST_3: ddr_V_addr [1/1] 0.00ns
:1  %ddr_V_addr = getelementptr i128* %ddr_V, i64 %tmp_1

ST_3: data_V_req [2/2] 8.75ns
:2  %data_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %ddr_V_addr, i32 1)

ST_3: sourceAddressLocal_1 [1/1] 2.44ns
:10  %sourceAddressLocal_1 = add i32 %sourceAddressLocal1, 1

ST_3: stg_69 [1/1] 0.00ns
:0  ret i1 true


 <State 4>: 8.75ns
ST_4: data_V_req [1/2] 8.75ns
:2  %data_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %ddr_V_addr, i32 1)

ST_4: data_V [1/1] 8.75ns
:3  %data_V = call i128 @_ssdm_op_Read.m_axi.volatile.i128P(i128* %ddr_V_addr)


 <State 5>: 1.37ns
ST_5: encrypted_data_V [20/20] 1.37ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 6>: 7.87ns
ST_6: encrypted_data_V [19/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 7>: 7.87ns
ST_7: encrypted_data_V [18/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 8>: 7.87ns
ST_8: encrypted_data_V [17/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 9>: 7.87ns
ST_9: encrypted_data_V [16/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 10>: 7.87ns
ST_10: encrypted_data_V [15/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 11>: 7.87ns
ST_11: encrypted_data_V [14/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 12>: 7.87ns
ST_12: encrypted_data_V [13/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 13>: 7.87ns
ST_13: encrypted_data_V [12/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 14>: 7.87ns
ST_14: encrypted_data_V [11/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 15>: 7.87ns
ST_15: encrypted_data_V [10/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 16>: 7.87ns
ST_16: encrypted_data_V [9/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 17>: 7.87ns
ST_17: encrypted_data_V [8/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 18>: 7.87ns
ST_18: encrypted_data_V [7/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 19>: 7.87ns
ST_19: encrypted_data_V [6/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 20>: 7.87ns
ST_20: encrypted_data_V [5/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 21>: 7.87ns
ST_21: encrypted_data_V [4/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 22>: 7.87ns
ST_22: encrypted_data_V [3/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 23>: 7.87ns
ST_23: encrypted_data_V [2/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 24>: 7.87ns
ST_24: encrypted_data_V [1/20] 7.87ns
:4  %encrypted_data_V = call fastcc i128 @aestest(i128 %data_V, i128 %key_local_V)


 <State 25>: 8.75ns
ST_25: tmp_2 [1/1] 0.00ns
:5  %tmp_2 = zext i32 %destinationAddressLocal1 to i64

ST_25: ddr_V_addr_1 [1/1] 0.00ns
:6  %ddr_V_addr_1 = getelementptr i128* %ddr_V, i64 %tmp_2

ST_25: ddr_V_addr_1_req [1/1] 8.75ns
:7  %ddr_V_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i128P(i128* %ddr_V_addr_1, i32 1)

ST_25: stg_95 [1/1] 8.75ns
:8  call void @_ssdm_op_Write.m_axi.volatile.i128P(i128* %ddr_V_addr_1, i128 %encrypted_data_V)

ST_25: ddr_V_addr_1_resp [2/2] 8.75ns
:9  %ddr_V_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %ddr_V_addr_1)

ST_25: destinationAddressLocal_1 [1/1] 2.44ns
:11  %destinationAddressLocal_1 = add i32 %destinationAddressLocal1, 1


 <State 26>: 8.75ns
ST_26: ddr_V_addr_1_resp [1/2] 8.75ns
:9  %ddr_V_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %ddr_V_addr_1)

ST_26: stg_99 [1/1] 0.00ns
:12  br label %1



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
