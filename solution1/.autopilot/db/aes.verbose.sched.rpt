

================================================================
== Vivado HLS Report for 'aes'
================================================================
* Date:           Fri Sep 11 18:07:36 2015

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        aes_runner
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.75|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------------+-----+------------+---------+
    |      Latency     |     Interval     | Pipeline|
    | min |     max    | min |     max    |   Type  |
    +-----+------------+-----+------------+---------+
    |   18|  6174015506|   19|  6174015507|   none  |
    +-----+------------+-----+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+------------+----------+-----------+-----------+---------------+----------+
        |          |      Latency     | Iteration|  Initiation Interval  |      Trip     |          |
        | Loop Name| min |     max    |  Latency |  achieved |   target  |     Count     | Pipelined|
        +----------+-----+------------+----------+-----------+-----------+---------------+----------+
        |- Loop 1  |    0|  6174015488|        23|          -|          -| 0 ~ 268435456 |    no    |
        +----------+-----+------------+----------+-----------+-----------+---------------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+------------------------+-----+-----+---------+--------------+--------+
|        RTL Ports       | Dir | Bits| Protocol| Source Object| C Type |
+------------------------+-----+-----+---------+--------------+--------+
|s_axi_AXILiteS_AWVALID  |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_AWREADY  | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_AWADDR   |  in |    7|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WVALID   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WREADY   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WDATA    |  in |   32|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WSTRB    |  in |    4|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARVALID  |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARREADY  | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARADDR   |  in |    7|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RVALID   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RREADY   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RDATA    | out |   32|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RRESP    | out |    2|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BVALID   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BREADY   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BRESP    | out |    2|  s_axi  |   AXILiteS   | scalar |
+------------------------+-----+-----+---------+--------------+--------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 83
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	62  / (!exitcond & tmp_35)
	20  / (!exitcond & !tmp_35 & !tmp_38)
	41  / (!exitcond & !tmp_35 & tmp_38)
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	83  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	83  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	19  / true
* FSM state operations: 

 <State 1>: 8.75ns
ST_1: rhs_V [1/1] 0.00ns
.preheader.preheader:0  %rhs_V = alloca i128, align 8

ST_1: t_V [1/1] 0.00ns
.preheader.preheader:1  %t_V = alloca i128, align 8

ST_1: sourceAddress_assign [1/1] 0.00ns
.preheader.preheader:18  %sourceAddress_assign = alloca i32, align 4

ST_1: destinationAddress_assign [1/1] 0.00ns
.preheader.preheader:19  %destinationAddress_assign = alloca i32, align 4

ST_1: p_req13 [2/2] 8.75ns
.preheader.preheader:48  %p_req13 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_1: m_s2mm_ctl_addr [1/1] 0.00ns
.preheader.preheader:53  %m_s2mm_ctl_addr = getelementptr i32* %m_s2mm_ctl, i64 12

ST_1: p_req23 [2/2] 8.75ns
.preheader.preheader:54  %p_req23 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_1: stg_91 [1/1] 1.72ns
.preheader.preheader:173  store i128 0, i128* %t_V, align 8


 <State 2>: 8.75ns
ST_2: p_req13 [1/2] 8.75ns
.preheader.preheader:48  %p_req13 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_2: p_req23 [1/2] 8.75ns
.preheader.preheader:54  %p_req23 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 3>: 8.75ns
ST_3: m_mm2s_ctl_req11 [1/1] 8.75ns
.preheader.preheader:50  %m_mm2s_ctl_req11 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_3: stg_95 [1/1] 8.75ns
.preheader.preheader:51  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 0)

ST_3: m_mm2s_ctl_resp12 [2/2] 8.75ns
.preheader.preheader:52  %m_mm2s_ctl_resp12 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_3: m_s2mm_ctl_addr_req21 [1/1] 8.75ns
.preheader.preheader:56  %m_s2mm_ctl_addr_req21 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_3: stg_98 [1/1] 8.75ns
.preheader.preheader:57  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 0)

ST_3: m_s2mm_ctl_addr_resp22 [2/2] 8.75ns
.preheader.preheader:58  %m_s2mm_ctl_addr_resp22 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 4>: 8.75ns
ST_4: mode_read [1/1] 0.00ns
.preheader.preheader:14  %mode_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %mode)

ST_4: numBytes_read [1/1] 0.00ns
.preheader.preheader:15  %numBytes_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %numBytes)

ST_4: destinationAddress_read [1/1] 0.00ns
.preheader.preheader:16  %destinationAddress_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %destinationAddress)

ST_4: sourceAddress_read [1/1] 0.00ns
.preheader.preheader:17  %sourceAddress_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %sourceAddress)

ST_4: stg_104 [1/1] 0.00ns
.preheader.preheader:20  store volatile i32 %sourceAddress_read, i32* %sourceAddress_assign, align 4

ST_4: stg_105 [1/1] 0.00ns
.preheader.preheader:21  store volatile i32 %destinationAddress_read, i32* %destinationAddress_assign, align 4

ST_4: tmp [1/1] 0.00ns
.preheader.preheader:42  %tmp = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %numBytes_read, i32 4, i32 31)

ST_4: tmp_325 [1/1] 0.00ns
.preheader.preheader:44  %tmp_325 = trunc i32 %numBytes_read to i4

ST_4: tmp_26 [1/1] 1.88ns
.preheader.preheader:45  %tmp_26 = icmp ne i4 %tmp_325, 0

ST_4: empty_97 [1/1] 8.75ns
.preheader.preheader:49  %empty_97 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_4: m_mm2s_ctl_resp12 [1/2] 8.75ns
.preheader.preheader:52  %m_mm2s_ctl_resp12 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_4: empty_98 [1/1] 8.75ns
.preheader.preheader:55  %empty_98 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_4: m_s2mm_ctl_addr_resp22 [1/2] 8.75ns
.preheader.preheader:58  %m_s2mm_ctl_addr_resp22 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_4: m_mm2s_ctl_load_req [2/2] 8.75ns
.preheader.preheader:59  %m_mm2s_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_4: m_s2mm_ctl_load_req [2/2] 8.75ns
.preheader.preheader:67  %m_s2mm_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_4: key_in_V_read [1/1] 0.00ns
.preheader.preheader:135  %key_in_V_read = call i128 @_ssdm_op_Read.ap_vld.i128P(i128* %key_in_V)

ST_4: tmp_331 [1/1] 0.00ns
.preheader.preheader:136  %tmp_331 = trunc i128 %key_in_V_read to i8

ST_4: iv_V_read [1/1] 0.00ns
.preheader.preheader:137  %iv_V_read = call i128 @_ssdm_op_Read.ap_vld.i128P(i128* %iv_V)

ST_4: tmp_332 [1/1] 0.00ns
.preheader.preheader:138  %tmp_332 = trunc i128 %iv_V_read to i8

ST_4: p_Result_1 [1/1] 0.00ns
.preheader.preheader:139  %p_Result_1 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 8, i32 15)

ST_4: p_Result_6_1 [1/1] 0.00ns
.preheader.preheader:140  %p_Result_6_1 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 8, i32 15)

ST_4: p_Result_2 [1/1] 0.00ns
.preheader.preheader:141  %p_Result_2 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 16, i32 23)

ST_4: p_Result_6_2 [1/1] 0.00ns
.preheader.preheader:142  %p_Result_6_2 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 16, i32 23)

ST_4: p_Result_3 [1/1] 0.00ns
.preheader.preheader:143  %p_Result_3 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 24, i32 31)

ST_4: p_Result_6_3 [1/1] 0.00ns
.preheader.preheader:144  %p_Result_6_3 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 24, i32 31)

ST_4: p_Result_4 [1/1] 0.00ns
.preheader.preheader:145  %p_Result_4 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 32, i32 39)

ST_4: p_Result_6_4 [1/1] 0.00ns
.preheader.preheader:146  %p_Result_6_4 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 32, i32 39)

ST_4: p_Result_5 [1/1] 0.00ns
.preheader.preheader:147  %p_Result_5 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 40, i32 47)

ST_4: p_Result_6_5 [1/1] 0.00ns
.preheader.preheader:148  %p_Result_6_5 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 40, i32 47)

ST_4: p_Result_s [1/1] 0.00ns
.preheader.preheader:149  %p_Result_s = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 48, i32 55)

ST_4: p_Result_6_6 [1/1] 0.00ns
.preheader.preheader:150  %p_Result_6_6 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 48, i32 55)

ST_4: p_Result_7 [1/1] 0.00ns
.preheader.preheader:151  %p_Result_7 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 56, i32 63)

ST_4: p_Result_6_7 [1/1] 0.00ns
.preheader.preheader:152  %p_Result_6_7 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 56, i32 63)

ST_4: p_Result_8 [1/1] 0.00ns
.preheader.preheader:153  %p_Result_8 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 64, i32 71)

ST_4: p_Result_6_8 [1/1] 0.00ns
.preheader.preheader:154  %p_Result_6_8 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 64, i32 71)

ST_4: p_Result_9 [1/1] 0.00ns
.preheader.preheader:155  %p_Result_9 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 72, i32 79)

ST_4: p_Result_6_9 [1/1] 0.00ns
.preheader.preheader:156  %p_Result_6_9 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 72, i32 79)

ST_4: p_Result_10 [1/1] 0.00ns
.preheader.preheader:157  %p_Result_10 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 80, i32 87)

ST_4: p_Result_6_s [1/1] 0.00ns
.preheader.preheader:158  %p_Result_6_s = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 80, i32 87)

ST_4: p_Result_11 [1/1] 0.00ns
.preheader.preheader:159  %p_Result_11 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 88, i32 95)

ST_4: p_Result_6_10 [1/1] 0.00ns
.preheader.preheader:160  %p_Result_6_10 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 88, i32 95)

ST_4: p_Result_12 [1/1] 0.00ns
.preheader.preheader:161  %p_Result_12 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 96, i32 103)

ST_4: p_Result_6_11 [1/1] 0.00ns
.preheader.preheader:162  %p_Result_6_11 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 96, i32 103)

ST_4: p_Result_13 [1/1] 0.00ns
.preheader.preheader:163  %p_Result_13 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 104, i32 111)

ST_4: p_Result_6_12 [1/1] 0.00ns
.preheader.preheader:164  %p_Result_6_12 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 104, i32 111)

ST_4: p_Result_14 [1/1] 0.00ns
.preheader.preheader:165  %p_Result_14 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 112, i32 119)

ST_4: p_Result_6_13 [1/1] 0.00ns
.preheader.preheader:166  %p_Result_6_13 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 112, i32 119)

ST_4: p_Result_15 [1/1] 0.00ns
.preheader.preheader:167  %p_Result_15 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %key_in_V_read, i32 120, i32 127)

ST_4: p_Result_6_14 [1/1] 0.00ns
.preheader.preheader:169  %p_Result_6_14 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %iv_V_read, i32 120, i32 127)

ST_4: tmp_35 [1/1] 2.52ns
.preheader.preheader:171  %tmp_35 = icmp eq i32 %mode_read, 1

ST_4: tmp_38 [1/1] 2.52ns
.preheader.preheader:172  %tmp_38 = icmp eq i32 %mode_read, 2


 <State 5>: 8.75ns
ST_5: m_mm2s_ctl_load_req [1/2] 8.75ns
.preheader.preheader:59  %m_mm2s_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_5: m_mm2s_ctl_read [1/1] 8.75ns
.preheader.preheader:60  %m_mm2s_ctl_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_5: tmp_s [1/1] 0.00ns
.preheader.preheader:61  %tmp_s = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %m_mm2s_ctl_read, i32 3, i32 31)

ST_5: tmp_326 [1/1] 0.00ns
.preheader.preheader:62  %tmp_326 = trunc i32 %m_mm2s_ctl_read to i2

ST_5: m_s2mm_ctl_load_req [1/2] 8.75ns
.preheader.preheader:67  %m_s2mm_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_5: m_s2mm_ctl_addr_read [1/1] 8.75ns
.preheader.preheader:68  %m_s2mm_ctl_addr_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_5: tmp_39 [1/1] 0.00ns
.preheader.preheader:69  %tmp_39 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %m_s2mm_ctl_addr_read, i32 3, i32 31)

ST_5: tmp_327 [1/1] 0.00ns
.preheader.preheader:70  %tmp_327 = trunc i32 %m_s2mm_ctl_addr_read to i2


 <State 6>: 8.75ns
ST_6: tmp_28 [1/1] 0.00ns
.preheader.preheader:63  %tmp_28 = call i32 @_ssdm_op_BitConcatenate.i32.i29.i1.i2(i29 %tmp_s, i1 true, i2 %tmp_326)

ST_6: m_mm2s_ctl_req9 [1/1] 8.75ns
.preheader.preheader:64  %m_mm2s_ctl_req9 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_6: stg_161 [1/1] 8.75ns
.preheader.preheader:65  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 %tmp_28)

ST_6: m_mm2s_ctl_resp10 [2/2] 8.75ns
.preheader.preheader:66  %m_mm2s_ctl_resp10 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_6: tmp_29 [1/1] 0.00ns
.preheader.preheader:71  %tmp_29 = call i32 @_ssdm_op_BitConcatenate.i32.i29.i1.i2(i29 %tmp_39, i1 true, i2 %tmp_327)

ST_6: m_s2mm_ctl_addr_req19 [1/1] 8.75ns
.preheader.preheader:72  %m_s2mm_ctl_addr_req19 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_6: stg_165 [1/1] 8.75ns
.preheader.preheader:73  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 %tmp_29)

ST_6: m_s2mm_ctl_addr_resp20 [2/2] 8.75ns
.preheader.preheader:74  %m_s2mm_ctl_addr_resp20 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 7>: 8.75ns
ST_7: m_mm2s_ctl_resp10 [1/2] 8.75ns
.preheader.preheader:66  %m_mm2s_ctl_resp10 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_7: m_s2mm_ctl_addr_resp20 [1/2] 8.75ns
.preheader.preheader:74  %m_s2mm_ctl_addr_resp20 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_7: p_req [2/2] 8.75ns
.preheader.preheader:75  %p_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_7: p_req18 [2/2] 8.75ns
.preheader.preheader:80  %p_req18 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 8>: 8.75ns
ST_8: p_req [1/2] 8.75ns
.preheader.preheader:75  %p_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_8: p_req18 [1/2] 8.75ns
.preheader.preheader:80  %p_req18 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 9>: 8.75ns
ST_9: m_mm2s_ctl_req7 [1/1] 8.75ns
.preheader.preheader:77  %m_mm2s_ctl_req7 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_9: stg_174 [1/1] 8.75ns
.preheader.preheader:78  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 0)

ST_9: m_mm2s_ctl_resp8 [2/2] 8.75ns
.preheader.preheader:79  %m_mm2s_ctl_resp8 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_9: m_s2mm_ctl_addr_req16 [1/1] 8.75ns
.preheader.preheader:82  %m_s2mm_ctl_addr_req16 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_9: stg_177 [1/1] 8.75ns
.preheader.preheader:83  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 0)

ST_9: m_s2mm_ctl_addr_resp17 [2/2] 8.75ns
.preheader.preheader:84  %m_s2mm_ctl_addr_resp17 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 10>: 8.75ns
ST_10: empty_99 [1/1] 8.75ns
.preheader.preheader:76  %empty_99 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_10: m_mm2s_ctl_resp8 [1/2] 8.75ns
.preheader.preheader:79  %m_mm2s_ctl_resp8 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_10: empty_100 [1/1] 8.75ns
.preheader.preheader:81  %empty_100 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_10: m_s2mm_ctl_addr_resp17 [1/2] 8.75ns
.preheader.preheader:84  %m_s2mm_ctl_addr_resp17 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_10: m_mm2s_ctl_load_1_req [2/2] 8.75ns
.preheader.preheader:85  %m_mm2s_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_10: m_s2mm_ctl_load_1_req [2/2] 8.75ns
.preheader.preheader:111  %m_s2mm_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 11>: 8.75ns
ST_11: m_mm2s_ctl_load_1_req [1/2] 8.75ns
.preheader.preheader:85  %m_mm2s_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_11: m_mm2s_ctl_read_1 [1/1] 8.75ns
.preheader.preheader:86  %m_mm2s_ctl_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_11: tmp_40 [1/1] 0.00ns
.preheader.preheader:87  %tmp_40 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %m_mm2s_ctl_read_1, i32 1, i32 31)

ST_11: m_s2mm_ctl_load_1_req [1/2] 8.75ns
.preheader.preheader:111  %m_s2mm_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_11: m_s2mm_ctl_addr_read_1 [1/1] 8.75ns
.preheader.preheader:112  %m_s2mm_ctl_addr_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_11: tmp_42 [1/1] 0.00ns
.preheader.preheader:113  %tmp_42 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %m_s2mm_ctl_addr_read_1, i32 1, i32 31)


 <State 12>: 8.75ns
ST_12: tmp_30 [1/1] 0.00ns
.preheader.preheader:88  %tmp_30 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_40, i1 true)

ST_12: m_mm2s_ctl_req5 [1/1] 8.75ns
.preheader.preheader:89  %m_mm2s_ctl_req5 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_12: stg_193 [1/1] 8.75ns
.preheader.preheader:90  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 %tmp_30)

ST_12: m_mm2s_ctl_resp6 [2/2] 8.75ns
.preheader.preheader:91  %m_mm2s_ctl_resp6 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_12: tmp_32 [1/1] 0.00ns
.preheader.preheader:114  %tmp_32 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_42, i1 true)

ST_12: m_s2mm_ctl_addr_req14 [1/1] 8.75ns
.preheader.preheader:115  %m_s2mm_ctl_addr_req14 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_12: stg_197 [1/1] 8.75ns
.preheader.preheader:116  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 %tmp_32)

ST_12: m_s2mm_ctl_addr_resp15 [2/2] 8.75ns
.preheader.preheader:117  %m_s2mm_ctl_addr_resp15 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 13>: 8.75ns
ST_13: m_mm2s_ctl_resp6 [1/2] 8.75ns
.preheader.preheader:91  %m_mm2s_ctl_resp6 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_13: m_mm2s_ctl_load_2_req [2/2] 8.75ns
.preheader.preheader:92  %m_mm2s_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_13: m_s2mm_ctl_addr_resp15 [1/2] 8.75ns
.preheader.preheader:117  %m_s2mm_ctl_addr_resp15 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_13: m_s2mm_ctl_load_2_req [2/2] 8.75ns
.preheader.preheader:118  %m_s2mm_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)


 <State 14>: 8.75ns
ST_14: m_mm2s_ctl_load_2_req [1/2] 8.75ns
.preheader.preheader:92  %m_mm2s_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_14: m_mm2s_ctl_read_2 [1/1] 8.75ns
.preheader.preheader:93  %m_mm2s_ctl_read_2 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_14: tmp_41 [1/1] 0.00ns
.preheader.preheader:94  %tmp_41 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %m_mm2s_ctl_read_2, i32 13, i32 31)

ST_14: tmp_328 [1/1] 0.00ns
.preheader.preheader:95  %tmp_328 = trunc i32 %m_mm2s_ctl_read_2 to i12

ST_14: m_s2mm_ctl_load_2_req [1/2] 8.75ns
.preheader.preheader:118  %m_s2mm_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_14: m_s2mm_ctl_addr_read_2 [1/1] 8.75ns
.preheader.preheader:119  %m_s2mm_ctl_addr_read_2 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr)

ST_14: tmp_43 [1/1] 0.00ns
.preheader.preheader:120  %tmp_43 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %m_s2mm_ctl_addr_read_2, i32 13, i32 31)

ST_14: tmp_330 [1/1] 0.00ns
.preheader.preheader:121  %tmp_330 = trunc i32 %m_s2mm_ctl_addr_read_2 to i12


 <State 15>: 8.75ns
ST_15: empty [1/1] 0.00ns
.preheader.preheader:40  %empty = load volatile i32* %sourceAddress_assign, align 4

ST_15: empty_96 [1/1] 0.00ns
.preheader.preheader:41  %empty_96 = load volatile i32* %destinationAddress_assign, align 4

ST_15: tmp_31 [1/1] 0.00ns
.preheader.preheader:96  %tmp_31 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i1.i12(i19 %tmp_41, i1 true, i12 %tmp_328)

ST_15: m_mm2s_ctl_req [1/1] 8.75ns
.preheader.preheader:97  %m_mm2s_ctl_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_15: stg_215 [1/1] 8.75ns
.preheader.preheader:98  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 %tmp_31)

ST_15: m_mm2s_ctl_resp [2/2] 8.75ns
.preheader.preheader:99  %m_mm2s_ctl_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_15: tmp_33 [1/1] 0.00ns
.preheader.preheader:122  %tmp_33 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i1.i12(i19 %tmp_43, i1 true, i12 %tmp_330)

ST_15: m_s2mm_ctl_addr_req [1/1] 8.75ns
.preheader.preheader:123  %m_s2mm_ctl_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr, i32 1)

ST_15: stg_219 [1/1] 8.75ns
.preheader.preheader:124  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr, i32 %tmp_33)

ST_15: m_s2mm_ctl_addr_resp [2/2] 8.75ns
.preheader.preheader:125  %m_s2mm_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)


 <State 16>: 8.75ns
ST_16: tmp_cast [1/1] 0.00ns
.preheader.preheader:43  %tmp_cast = zext i28 %tmp to i29

ST_16: tmp_27_cast [1/1] 0.00ns
.preheader.preheader:46  %tmp_27_cast = zext i1 %tmp_26 to i29

ST_16: numIterations [1/1] 2.32ns
.preheader.preheader:47  %numIterations = add i29 %tmp_cast, %tmp_27_cast

ST_16: m_mm2s_ctl_resp [1/2] 8.75ns
.preheader.preheader:99  %m_mm2s_ctl_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_16: sourceAddress_assign_load [1/1] 0.00ns
.preheader.preheader:100  %sourceAddress_assign_load = load volatile i32* %sourceAddress_assign, align 4

ST_16: m_mm2s_ctl_addr [1/1] 0.00ns
.preheader.preheader:101  %m_mm2s_ctl_addr = getelementptr i32* %m_mm2s_ctl, i64 6

ST_16: m_mm2s_ctl_addr_req [1/1] 8.75ns
.preheader.preheader:102  %m_mm2s_ctl_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl_addr, i32 1)

ST_16: stg_228 [1/1] 8.75ns
.preheader.preheader:103  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl_addr, i32 %sourceAddress_assign_load)

ST_16: m_mm2s_ctl_addr_resp [2/2] 8.75ns
.preheader.preheader:104  %m_mm2s_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr)

ST_16: tmp_329 [1/1] 0.00ns
.preheader.preheader:105  %tmp_329 = trunc i29 %numIterations to i28

ST_16: m_s2mm_ctl_addr_resp [1/2] 8.75ns
.preheader.preheader:125  %m_s2mm_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr)

ST_16: destinationAddress_assign_load [1/1] 0.00ns
.preheader.preheader:126  %destinationAddress_assign_load = load volatile i32* %destinationAddress_assign, align 4

ST_16: m_s2mm_ctl_addr_1 [1/1] 0.00ns
.preheader.preheader:127  %m_s2mm_ctl_addr_1 = getelementptr i32* %m_s2mm_ctl, i64 18

ST_16: m_s2mm_ctl_addr_1_req [1/1] 8.75ns
.preheader.preheader:128  %m_s2mm_ctl_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr_1, i32 1)

ST_16: stg_235 [1/1] 8.75ns
.preheader.preheader:129  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr_1, i32 %destinationAddress_assign_load)

ST_16: m_s2mm_ctl_addr_1_resp [2/2] 8.75ns
.preheader.preheader:130  %m_s2mm_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr_1)


 <State 17>: 8.75ns
ST_17: m_mm2s_ctl_addr_resp [1/2] 8.75ns
.preheader.preheader:104  %m_mm2s_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr)

ST_17: read_length [1/1] 0.00ns
.preheader.preheader:106  %read_length = call i32 @_ssdm_op_BitConcatenate.i32.i28.i4(i28 %tmp_329, i4 0)

ST_17: m_mm2s_ctl_addr_1 [1/1] 0.00ns
.preheader.preheader:107  %m_mm2s_ctl_addr_1 = getelementptr i32* %m_mm2s_ctl, i64 10

ST_17: m_mm2s_ctl_addr_1_req [1/1] 8.75ns
.preheader.preheader:108  %m_mm2s_ctl_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl_addr_1, i32 1)

ST_17: stg_241 [1/1] 8.75ns
.preheader.preheader:109  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl_addr_1, i32 %read_length)

ST_17: m_mm2s_ctl_addr_1_resp [2/2] 8.75ns
.preheader.preheader:110  %m_mm2s_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr_1)

ST_17: m_s2mm_ctl_addr_1_resp [1/2] 8.75ns
.preheader.preheader:130  %m_s2mm_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr_1)

ST_17: m_s2mm_ctl_addr_2 [1/1] 0.00ns
.preheader.preheader:131  %m_s2mm_ctl_addr_2 = getelementptr i32* %m_s2mm_ctl, i64 22

ST_17: m_s2mm_ctl_addr_2_req [1/1] 8.75ns
.preheader.preheader:132  %m_s2mm_ctl_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_s2mm_ctl_addr_2, i32 1)

ST_17: stg_246 [1/1] 8.75ns
.preheader.preheader:133  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_s2mm_ctl_addr_2, i32 %read_length)

ST_17: m_s2mm_ctl_addr_2_resp [2/2] 8.75ns
.preheader.preheader:134  %m_s2mm_ctl_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr_2)


 <State 18>: 8.75ns
ST_18: stg_248 [1/1] 0.00ns
.preheader.preheader:2  call void (...)* @_ssdm_op_SpecBitsMap(i32* %m_mm2s_ctl), !map !7

ST_18: stg_249 [1/1] 0.00ns
.preheader.preheader:3  call void (...)* @_ssdm_op_SpecBitsMap(i32* %m_s2mm_ctl), !map !13

ST_18: stg_250 [1/1] 0.00ns
.preheader.preheader:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %sourceAddress), !map !17

ST_18: stg_251 [1/1] 0.00ns
.preheader.preheader:5  call void (...)* @_ssdm_op_SpecBitsMap(i128* %key_in_V), !map !23

ST_18: stg_252 [1/1] 0.00ns
.preheader.preheader:6  call void (...)* @_ssdm_op_SpecBitsMap(i128* %iv_V), !map !29

ST_18: stg_253 [1/1] 0.00ns
.preheader.preheader:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 %destinationAddress), !map !33

ST_18: stg_254 [1/1] 0.00ns
.preheader.preheader:8  call void (...)* @_ssdm_op_SpecBitsMap(i32 %numBytes), !map !37

ST_18: stg_255 [1/1] 0.00ns
.preheader.preheader:9  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mode), !map !41

ST_18: stg_256 [1/1] 0.00ns
.preheader.preheader:10  call void (...)* @_ssdm_op_SpecBitsMap(i128* %s_in_V_V), !map !45

ST_18: stg_257 [1/1] 0.00ns
.preheader.preheader:11  call void (...)* @_ssdm_op_SpecBitsMap(i128* %s_out_V_V), !map !49

ST_18: stg_258 [1/1] 0.00ns
.preheader.preheader:12  call void (...)* @_ssdm_op_SpecBitsMap(i1 false) nounwind, !map !53

ST_18: stg_259 [1/1] 0.00ns
.preheader.preheader:13  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @str) nounwind

ST_18: stg_260 [1/1] 0.00ns
.preheader.preheader:22  call void (...)* @_ssdm_op_SpecWire(i128* %s_out_V_V, [5 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 1000, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_261 [1/1] 0.00ns
.preheader.preheader:23  call void (...)* @_ssdm_op_SpecWire(i128* %s_in_V_V, [5 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 1000, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_262 [1/1] 0.00ns
.preheader.preheader:24  call void (...)* @_ssdm_op_SpecWire(i32* %m_s2mm_ctl, [6 x i8]* @p_str27, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16)

ST_18: stg_263 [1/1] 0.00ns
.preheader.preheader:25  call void (...)* @_ssdm_op_SpecWire(i32* %m_mm2s_ctl, [6 x i8]* @p_str27, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16)

ST_18: stg_264 [1/1] 0.00ns
.preheader.preheader:26  call void (...)* @_ssdm_op_SpecWire(i128* %iv_V, [10 x i8]* @p_str38, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_265 [1/1] 0.00ns
.preheader.preheader:27  call void (...)* @_ssdm_op_SpecWire(i128* %iv_V, [7 x i8]* @p_str49, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_266 [1/1] 0.00ns
.preheader.preheader:28  call void (...)* @_ssdm_op_SpecWire(i32 %numBytes, [10 x i8]* @p_str38, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_267 [1/1] 0.00ns
.preheader.preheader:29  call void (...)* @_ssdm_op_SpecWire(i32 %numBytes, [7 x i8]* @p_str49, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_268 [1/1] 0.00ns
.preheader.preheader:30  call void (...)* @_ssdm_op_SpecWire(i32 %mode, [10 x i8]* @p_str38, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_269 [1/1] 0.00ns
.preheader.preheader:31  call void (...)* @_ssdm_op_SpecWire(i32 %mode, [7 x i8]* @p_str49, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_270 [1/1] 0.00ns
.preheader.preheader:32  call void (...)* @_ssdm_op_SpecWire(i32 %destinationAddress, [10 x i8]* @p_str38, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_271 [1/1] 0.00ns
.preheader.preheader:33  call void (...)* @_ssdm_op_SpecWire(i128* %key_in_V, [10 x i8]* @p_str38, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_272 [1/1] 0.00ns
.preheader.preheader:34  call void (...)* @_ssdm_op_SpecWire(i32 %sourceAddress, [10 x i8]* @p_str38, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_273 [1/1] 0.00ns
.preheader.preheader:35  call void (...)* @_ssdm_op_SpecWire(i32 0, [11 x i8]* @p_str510, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_274 [1/1] 0.00ns
.preheader.preheader:36  call void (...)* @_ssdm_op_SpecWire(i32 0, [10 x i8]* @p_str38, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_275 [1/1] 0.00ns
.preheader.preheader:37  call void (...)* @_ssdm_op_SpecWire(i32 %destinationAddress, [7 x i8]* @p_str49, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_276 [1/1] 0.00ns
.preheader.preheader:38  call void (...)* @_ssdm_op_SpecWire(i128* %key_in_V, [7 x i8]* @p_str49, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: stg_277 [1/1] 0.00ns
.preheader.preheader:39  call void (...)* @_ssdm_op_SpecWire(i32 %sourceAddress, [7 x i8]* @p_str49, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str16, [1 x i8]* @p_str16, [1 x i8]* @p_str16) nounwind

ST_18: m_mm2s_ctl_addr_1_resp [1/2] 8.75ns
.preheader.preheader:110  %m_mm2s_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr_1)

ST_18: m_s2mm_ctl_addr_2_resp [1/2] 8.75ns
.preheader.preheader:134  %m_s2mm_ctl_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_s2mm_ctl_addr_2)

ST_18: key_local_V_0_s [1/1] 0.00ns
.preheader.preheader:168  %key_local_V_0_s = call i128 @_ssdm_op_BitConcatenate.i128.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8(i8 %tmp_331, i8 %p_Result_1, i8 %p_Result_2, i8 %p_Result_3, i8 %p_Result_4, i8 %p_Result_5, i8 %p_Result_s, i8 %p_Result_7, i8 %p_Result_8, i8 %p_Result_9, i8 %p_Result_10, i8 %p_Result_11, i8 %p_Result_12, i8 %p_Result_13, i8 %p_Result_14, i8 %p_Result_15)

ST_18: iv_local_V_s [1/1] 0.00ns
.preheader.preheader:170  %iv_local_V_s = call i128 @_ssdm_op_BitConcatenate.i128.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8(i8 %tmp_332, i8 %p_Result_6_1, i8 %p_Result_6_2, i8 %p_Result_6_3, i8 %p_Result_6_4, i8 %p_Result_6_5, i8 %p_Result_6_6, i8 %p_Result_6_7, i8 %p_Result_6_8, i8 %p_Result_6_9, i8 %p_Result_6_s, i8 %p_Result_6_10, i8 %p_Result_6_11, i8 %p_Result_6_12, i8 %p_Result_6_13, i8 %p_Result_6_14)

ST_18: stg_282 [1/1] 1.54ns
.preheader.preheader:174  br label %.preheader


 <State 19>: 2.47ns
ST_19: iterations [1/1] 0.00ns
.preheader:0  %iterations = phi i29 [ %iterations_1, %5 ], [ 0, %.preheader.preheader ]

ST_19: empty_101 [1/1] 0.00ns
.preheader:1  %empty_101 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 268435456, i64 0)

ST_19: exitcond [1/1] 2.47ns
.preheader:2  %exitcond = icmp eq i29 %iterations, %numIterations

ST_19: iterations_1 [1/1] 2.44ns
.preheader:3  %iterations_1 = add i29 %iterations, 1

ST_19: stg_287 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %6, label %0

ST_19: tmp_V [1/1] 0.00ns
:0  %tmp_V = call i128 @_ssdm_op_Read.axis.volatile.i128P(i128* %s_in_V_V)

ST_19: tmp_333 [1/1] 0.00ns
:1  %tmp_333 = trunc i128 %tmp_V to i8

ST_19: p_Result_19_1 [1/1] 0.00ns
:2  %p_Result_19_1 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 8, i32 15)

ST_19: p_Result_19_2 [1/1] 0.00ns
:3  %p_Result_19_2 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 16, i32 23)

ST_19: p_Result_19_3 [1/1] 0.00ns
:4  %p_Result_19_3 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 24, i32 31)

ST_19: p_Result_19_4 [1/1] 0.00ns
:5  %p_Result_19_4 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 32, i32 39)

ST_19: p_Result_19_5 [1/1] 0.00ns
:6  %p_Result_19_5 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 40, i32 47)

ST_19: p_Result_19_6 [1/1] 0.00ns
:7  %p_Result_19_6 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 48, i32 55)

ST_19: p_Result_19_7 [1/1] 0.00ns
:8  %p_Result_19_7 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 56, i32 63)

ST_19: p_Result_19_8 [1/1] 0.00ns
:9  %p_Result_19_8 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 64, i32 71)

ST_19: p_Result_19_9 [1/1] 0.00ns
:10  %p_Result_19_9 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 72, i32 79)

ST_19: p_Result_19_s [1/1] 0.00ns
:11  %p_Result_19_s = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 80, i32 87)

ST_19: p_Result_19_10 [1/1] 0.00ns
:12  %p_Result_19_10 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 88, i32 95)

ST_19: p_Result_19_11 [1/1] 0.00ns
:13  %p_Result_19_11 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 96, i32 103)

ST_19: p_Result_19_12 [1/1] 0.00ns
:14  %p_Result_19_12 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 104, i32 111)

ST_19: p_Result_19_13 [1/1] 0.00ns
:15  %p_Result_19_13 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 112, i32 119)

ST_19: p_Result_19_14 [1/1] 0.00ns
:16  %p_Result_19_14 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_V, i32 120, i32 127)

ST_19: p_1_s [1/1] 0.00ns
:17  %p_1_s = call i128 @_ssdm_op_BitConcatenate.i128.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8(i8 %tmp_333, i8 %p_Result_19_1, i8 %p_Result_19_2, i8 %p_Result_19_3, i8 %p_Result_19_4, i8 %p_Result_19_5, i8 %p_Result_19_6, i8 %p_Result_19_7, i8 %p_Result_19_8, i8 %p_Result_19_9, i8 %p_Result_19_s, i8 %p_Result_19_10, i8 %p_Result_19_11, i8 %p_Result_19_12, i8 %p_Result_19_13, i8 %p_Result_19_14)

ST_19: stg_306 [1/1] 0.00ns
:18  br i1 %tmp_35, label %1, label %2

ST_19: stg_307 [1/1] 0.00ns
:0  br i1 %tmp_38, label %3, label %4

ST_19: stg_308 [1/1] 0.00ns
:0  ret i1 true


 <State 20>: 2.30ns
ST_20: encrypted_data_V_2 [20/20] 2.30ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 21>: 7.87ns
ST_21: encrypted_data_V_2 [19/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 22>: 7.87ns
ST_22: encrypted_data_V_2 [18/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 23>: 7.87ns
ST_23: encrypted_data_V_2 [17/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 24>: 7.87ns
ST_24: encrypted_data_V_2 [16/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 25>: 7.87ns
ST_25: encrypted_data_V_2 [15/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 26>: 7.87ns
ST_26: encrypted_data_V_2 [14/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 27>: 7.87ns
ST_27: encrypted_data_V_2 [13/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 28>: 7.87ns
ST_28: encrypted_data_V_2 [12/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 29>: 7.87ns
ST_29: encrypted_data_V_2 [11/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 30>: 7.87ns
ST_30: encrypted_data_V_2 [10/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 31>: 7.87ns
ST_31: encrypted_data_V_2 [9/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 32>: 7.87ns
ST_32: encrypted_data_V_2 [8/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 33>: 7.87ns
ST_33: encrypted_data_V_2 [7/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 34>: 7.87ns
ST_34: encrypted_data_V_2 [6/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 35>: 7.87ns
ST_35: encrypted_data_V_2 [5/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 36>: 7.87ns
ST_36: encrypted_data_V_2 [4/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 37>: 7.87ns
ST_37: encrypted_data_V_2 [3/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 38>: 7.87ns
ST_38: encrypted_data_V_2 [2/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 39>: 7.87ns
ST_39: encrypted_data_V_2 [1/20] 7.87ns
:0  %encrypted_data_V_2 = call fastcc i128 @aestest(i128 %p_1_s, i128 %key_local_V_0_s)


 <State 40>: 1.72ns
ST_40: stg_329 [1/1] 1.72ns
:1  store i128 %encrypted_data_V_2, i128* %rhs_V, align 8

ST_40: stg_330 [1/1] 0.00ns
:2  br label %5


 <State 41>: 7.04ns
ST_41: t_V_load_1 [1/1] 0.00ns
:0  %t_V_load_1 = load i128* %t_V, align 8

ST_41: encrypted_data_V_1 [20/20] 2.30ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)

ST_41: count_V_1 [1/1] 5.32ns
:3  %count_V_1 = add i128 %t_V_load_1, 1

ST_41: stg_334 [1/1] 1.72ns
:4  store i128 %count_V_1, i128* %t_V, align 8


 <State 42>: 7.87ns
ST_42: encrypted_data_V_1 [19/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 43>: 7.87ns
ST_43: encrypted_data_V_1 [18/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 44>: 7.87ns
ST_44: encrypted_data_V_1 [17/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 45>: 7.87ns
ST_45: encrypted_data_V_1 [16/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 46>: 7.87ns
ST_46: encrypted_data_V_1 [15/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 47>: 7.87ns
ST_47: encrypted_data_V_1 [14/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 48>: 7.87ns
ST_48: encrypted_data_V_1 [13/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 49>: 7.87ns
ST_49: encrypted_data_V_1 [12/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 50>: 7.87ns
ST_50: encrypted_data_V_1 [11/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 51>: 7.87ns
ST_51: encrypted_data_V_1 [10/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 52>: 7.87ns
ST_52: encrypted_data_V_1 [9/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 53>: 7.87ns
ST_53: encrypted_data_V_1 [8/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 54>: 7.87ns
ST_54: encrypted_data_V_1 [7/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 55>: 7.87ns
ST_55: encrypted_data_V_1 [6/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 56>: 7.87ns
ST_56: encrypted_data_V_1 [5/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 57>: 7.87ns
ST_57: encrypted_data_V_1 [4/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 58>: 7.87ns
ST_58: encrypted_data_V_1 [3/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 59>: 7.87ns
ST_59: encrypted_data_V_1 [2/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 60>: 7.87ns
ST_60: encrypted_data_V_1 [1/20] 7.87ns
:1  %encrypted_data_V_1 = call fastcc i128 @aestest(i128 %t_V_load_1, i128 %key_local_V_0_s)


 <State 61>: 3.09ns
ST_61: r_V_1 [1/1] 1.37ns
:2  %r_V_1 = xor i128 %p_1_s, %encrypted_data_V_1

ST_61: stg_355 [1/1] 1.72ns
:5  store i128 %r_V_1, i128* %rhs_V, align 8

ST_61: stg_356 [1/1] 0.00ns
:6  br label %5


 <State 62>: 8.37ns
ST_62: rhs_V_load [1/1] 0.00ns
:0  %rhs_V_load = load i128* %rhs_V, align 8

ST_62: t_V_load [1/1] 0.00ns
:1  %t_V_load = load i128* %t_V, align 8

ST_62: tmp_36 [1/1] 3.33ns
:2  %tmp_36 = icmp eq i128 %t_V_load, 0

ST_62: storemerge_v [1/1] 1.37ns
:3  %storemerge_v = select i1 %tmp_36, i128 %iv_local_V_s, i128 %rhs_V_load

ST_62: r_V [1/1] 1.37ns
:4  %r_V = xor i128 %p_1_s, %storemerge_v

ST_62: encrypted_data_V [20/20] 2.30ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)

ST_62: count_V [1/1] 5.32ns
:6  %count_V = add i128 %t_V_load, 1

ST_62: stg_364 [1/1] 1.72ns
:7  store i128 %count_V, i128* %t_V, align 8


 <State 63>: 7.87ns
ST_63: encrypted_data_V [19/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 64>: 7.87ns
ST_64: encrypted_data_V [18/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 65>: 7.87ns
ST_65: encrypted_data_V [17/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 66>: 7.87ns
ST_66: encrypted_data_V [16/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 67>: 7.87ns
ST_67: encrypted_data_V [15/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 68>: 7.87ns
ST_68: encrypted_data_V [14/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 69>: 7.87ns
ST_69: encrypted_data_V [13/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 70>: 7.87ns
ST_70: encrypted_data_V [12/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 71>: 7.87ns
ST_71: encrypted_data_V [11/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 72>: 7.87ns
ST_72: encrypted_data_V [10/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 73>: 7.87ns
ST_73: encrypted_data_V [9/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 74>: 7.87ns
ST_74: encrypted_data_V [8/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 75>: 7.87ns
ST_75: encrypted_data_V [7/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 76>: 7.87ns
ST_76: encrypted_data_V [6/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 77>: 7.87ns
ST_77: encrypted_data_V [5/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 78>: 7.87ns
ST_78: encrypted_data_V [4/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 79>: 7.87ns
ST_79: encrypted_data_V [3/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 80>: 7.87ns
ST_80: encrypted_data_V [2/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 81>: 7.87ns
ST_81: encrypted_data_V [1/20] 7.87ns
:5  %encrypted_data_V = call fastcc i128 @aestest(i128 %r_V, i128 %key_local_V_0_s)


 <State 82>: 1.72ns
ST_82: stg_384 [1/1] 1.72ns
:8  store i128 %encrypted_data_V, i128* %rhs_V, align 8

ST_82: stg_385 [1/1] 0.00ns
:9  br label %5


 <State 83>: 0.00ns
ST_83: p_Val2_s [1/1] 0.00ns
:0  %p_Val2_s = load i128* %rhs_V, align 8

ST_83: tmp_334 [1/1] 0.00ns
:1  %tmp_334 = trunc i128 %p_Val2_s to i8

ST_83: p_Result_22_1 [1/1] 0.00ns
:2  %p_Result_22_1 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 8, i32 15)

ST_83: p_Result_22_2 [1/1] 0.00ns
:3  %p_Result_22_2 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 16, i32 23)

ST_83: p_Result_22_3 [1/1] 0.00ns
:4  %p_Result_22_3 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 24, i32 31)

ST_83: p_Result_22_4 [1/1] 0.00ns
:5  %p_Result_22_4 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 32, i32 39)

ST_83: p_Result_22_5 [1/1] 0.00ns
:6  %p_Result_22_5 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 40, i32 47)

ST_83: p_Result_22_6 [1/1] 0.00ns
:7  %p_Result_22_6 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 48, i32 55)

ST_83: p_Result_22_7 [1/1] 0.00ns
:8  %p_Result_22_7 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 56, i32 63)

ST_83: p_Result_22_8 [1/1] 0.00ns
:9  %p_Result_22_8 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 64, i32 71)

ST_83: p_Result_22_9 [1/1] 0.00ns
:10  %p_Result_22_9 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 72, i32 79)

ST_83: p_Result_22_s [1/1] 0.00ns
:11  %p_Result_22_s = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 80, i32 87)

ST_83: p_Result_22_10 [1/1] 0.00ns
:12  %p_Result_22_10 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 88, i32 95)

ST_83: p_Result_22_11 [1/1] 0.00ns
:13  %p_Result_22_11 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 96, i32 103)

ST_83: p_Result_22_12 [1/1] 0.00ns
:14  %p_Result_22_12 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 104, i32 111)

ST_83: p_Result_22_13 [1/1] 0.00ns
:15  %p_Result_22_13 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 112, i32 119)

ST_83: p_Result_22_14 [1/1] 0.00ns
:16  %p_Result_22_14 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %p_Val2_s, i32 120, i32 127)

ST_83: tmp_V_1 [1/1] 0.00ns
:17  %tmp_V_1 = call i128 @_ssdm_op_BitConcatenate.i128.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8.i8(i8 %tmp_334, i8 %p_Result_22_1, i8 %p_Result_22_2, i8 %p_Result_22_3, i8 %p_Result_22_4, i8 %p_Result_22_5, i8 %p_Result_22_6, i8 %p_Result_22_7, i8 %p_Result_22_8, i8 %p_Result_22_9, i8 %p_Result_22_s, i8 %p_Result_22_10, i8 %p_Result_22_11, i8 %p_Result_22_12, i8 %p_Result_22_13, i8 %p_Result_22_14)

ST_83: stg_404 [1/1] 0.00ns
:18  call void @_ssdm_op_Write.axis.volatile.i128P(i128* %s_out_V_V, i128 %tmp_V_1)

ST_83: stg_405 [1/1] 0.00ns
:19  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
