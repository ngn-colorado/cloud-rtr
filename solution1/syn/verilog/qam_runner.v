// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="qam_runner,hls_ip_2014_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module qam_runner (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        m_axi_m_mm2s_ctl_AWVALID,
        m_axi_m_mm2s_ctl_AWREADY,
        m_axi_m_mm2s_ctl_AWADDR,
        m_axi_m_mm2s_ctl_AWID,
        m_axi_m_mm2s_ctl_AWLEN,
        m_axi_m_mm2s_ctl_AWSIZE,
        m_axi_m_mm2s_ctl_AWBURST,
        m_axi_m_mm2s_ctl_AWLOCK,
        m_axi_m_mm2s_ctl_AWCACHE,
        m_axi_m_mm2s_ctl_AWPROT,
        m_axi_m_mm2s_ctl_AWQOS,
        m_axi_m_mm2s_ctl_AWREGION,
        m_axi_m_mm2s_ctl_AWUSER,
        m_axi_m_mm2s_ctl_WVALID,
        m_axi_m_mm2s_ctl_WREADY,
        m_axi_m_mm2s_ctl_WDATA,
        m_axi_m_mm2s_ctl_WSTRB,
        m_axi_m_mm2s_ctl_WLAST,
        m_axi_m_mm2s_ctl_WID,
        m_axi_m_mm2s_ctl_WUSER,
        m_axi_m_mm2s_ctl_ARVALID,
        m_axi_m_mm2s_ctl_ARREADY,
        m_axi_m_mm2s_ctl_ARADDR,
        m_axi_m_mm2s_ctl_ARID,
        m_axi_m_mm2s_ctl_ARLEN,
        m_axi_m_mm2s_ctl_ARSIZE,
        m_axi_m_mm2s_ctl_ARBURST,
        m_axi_m_mm2s_ctl_ARLOCK,
        m_axi_m_mm2s_ctl_ARCACHE,
        m_axi_m_mm2s_ctl_ARPROT,
        m_axi_m_mm2s_ctl_ARQOS,
        m_axi_m_mm2s_ctl_ARREGION,
        m_axi_m_mm2s_ctl_ARUSER,
        m_axi_m_mm2s_ctl_RVALID,
        m_axi_m_mm2s_ctl_RREADY,
        m_axi_m_mm2s_ctl_RDATA,
        m_axi_m_mm2s_ctl_RLAST,
        m_axi_m_mm2s_ctl_RID,
        m_axi_m_mm2s_ctl_RUSER,
        m_axi_m_mm2s_ctl_RRESP,
        m_axi_m_mm2s_ctl_BVALID,
        m_axi_m_mm2s_ctl_BREADY,
        m_axi_m_mm2s_ctl_BRESP,
        m_axi_m_mm2s_ctl_BID,
        m_axi_m_mm2s_ctl_BUSER,
        m_axi_m_s2mm_ctl_AWVALID,
        m_axi_m_s2mm_ctl_AWREADY,
        m_axi_m_s2mm_ctl_AWADDR,
        m_axi_m_s2mm_ctl_AWID,
        m_axi_m_s2mm_ctl_AWLEN,
        m_axi_m_s2mm_ctl_AWSIZE,
        m_axi_m_s2mm_ctl_AWBURST,
        m_axi_m_s2mm_ctl_AWLOCK,
        m_axi_m_s2mm_ctl_AWCACHE,
        m_axi_m_s2mm_ctl_AWPROT,
        m_axi_m_s2mm_ctl_AWQOS,
        m_axi_m_s2mm_ctl_AWREGION,
        m_axi_m_s2mm_ctl_AWUSER,
        m_axi_m_s2mm_ctl_WVALID,
        m_axi_m_s2mm_ctl_WREADY,
        m_axi_m_s2mm_ctl_WDATA,
        m_axi_m_s2mm_ctl_WSTRB,
        m_axi_m_s2mm_ctl_WLAST,
        m_axi_m_s2mm_ctl_WID,
        m_axi_m_s2mm_ctl_WUSER,
        m_axi_m_s2mm_ctl_ARVALID,
        m_axi_m_s2mm_ctl_ARREADY,
        m_axi_m_s2mm_ctl_ARADDR,
        m_axi_m_s2mm_ctl_ARID,
        m_axi_m_s2mm_ctl_ARLEN,
        m_axi_m_s2mm_ctl_ARSIZE,
        m_axi_m_s2mm_ctl_ARBURST,
        m_axi_m_s2mm_ctl_ARLOCK,
        m_axi_m_s2mm_ctl_ARCACHE,
        m_axi_m_s2mm_ctl_ARPROT,
        m_axi_m_s2mm_ctl_ARQOS,
        m_axi_m_s2mm_ctl_ARREGION,
        m_axi_m_s2mm_ctl_ARUSER,
        m_axi_m_s2mm_ctl_RVALID,
        m_axi_m_s2mm_ctl_RREADY,
        m_axi_m_s2mm_ctl_RDATA,
        m_axi_m_s2mm_ctl_RLAST,
        m_axi_m_s2mm_ctl_RID,
        m_axi_m_s2mm_ctl_RUSER,
        m_axi_m_s2mm_ctl_RRESP,
        m_axi_m_s2mm_ctl_BVALID,
        m_axi_m_s2mm_ctl_BREADY,
        m_axi_m_s2mm_ctl_BRESP,
        m_axi_m_s2mm_ctl_BID,
        m_axi_m_s2mm_ctl_BUSER,
        s_in_V_V_TDATA,
        s_in_V_V_TVALID,
        s_in_V_V_TREADY,
        s_out_V_V_TDATA,
        s_out_V_V_TVALID,
        s_out_V_V_TREADY,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b000000;
parameter    ap_ST_st2_fsm_1 = 6'b1;
parameter    ap_ST_st3_fsm_2 = 6'b10;
parameter    ap_ST_st4_fsm_3 = 6'b11;
parameter    ap_ST_st5_fsm_4 = 6'b100;
parameter    ap_ST_st6_fsm_5 = 6'b101;
parameter    ap_ST_st7_fsm_6 = 6'b110;
parameter    ap_ST_st8_fsm_7 = 6'b111;
parameter    ap_ST_st9_fsm_8 = 6'b1000;
parameter    ap_ST_st10_fsm_9 = 6'b1001;
parameter    ap_ST_st11_fsm_10 = 6'b1010;
parameter    ap_ST_st12_fsm_11 = 6'b1011;
parameter    ap_ST_st13_fsm_12 = 6'b1100;
parameter    ap_ST_st14_fsm_13 = 6'b1101;
parameter    ap_ST_st15_fsm_14 = 6'b1110;
parameter    ap_ST_st16_fsm_15 = 6'b1111;
parameter    ap_ST_st17_fsm_16 = 6'b10000;
parameter    ap_ST_st18_fsm_17 = 6'b10001;
parameter    ap_ST_st19_fsm_18 = 6'b10010;
parameter    ap_ST_st20_fsm_19 = 6'b10011;
parameter    ap_ST_st21_fsm_20 = 6'b10100;
parameter    ap_ST_st22_fsm_21 = 6'b10101;
parameter    ap_ST_st23_fsm_22 = 6'b10110;
parameter    ap_ST_st24_fsm_23 = 6'b10111;
parameter    ap_ST_st25_fsm_24 = 6'b11000;
parameter    ap_ST_st26_fsm_25 = 6'b11001;
parameter    ap_ST_st27_fsm_26 = 6'b11010;
parameter    ap_ST_st28_fsm_27 = 6'b11011;
parameter    ap_ST_st29_fsm_28 = 6'b11100;
parameter    ap_ST_st30_fsm_29 = 6'b11101;
parameter    ap_ST_st31_fsm_30 = 6'b11110;
parameter    ap_ST_st32_fsm_31 = 6'b11111;
parameter    ap_ST_st33_fsm_32 = 6'b100000;
parameter    ap_ST_st34_fsm_33 = 6'b100001;
parameter    ap_ST_st35_fsm_34 = 6'b100010;
parameter    ap_ST_st36_fsm_35 = 6'b100011;
parameter    ap_ST_st37_fsm_36 = 6'b100100;
parameter    ap_ST_st38_fsm_37 = 6'b100101;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv28_0 = 28'b0000000000000000000000000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_DATA_WIDTH = 32;
parameter    C_M_AXI_M_MM2S_CTL_ID_WIDTH = 1;
parameter    C_M_AXI_M_MM2S_CTL_ADDR_WIDTH = 32;
parameter    C_M_AXI_M_MM2S_CTL_DATA_WIDTH = 32;
parameter    C_M_AXI_M_MM2S_CTL_AWUSER_WIDTH = 1;
parameter    C_M_AXI_M_MM2S_CTL_ARUSER_WIDTH = 1;
parameter    C_M_AXI_M_MM2S_CTL_WUSER_WIDTH = 1;
parameter    C_M_AXI_M_MM2S_CTL_RUSER_WIDTH = 1;
parameter    C_M_AXI_M_MM2S_CTL_BUSER_WIDTH = 1;
parameter    C_M_AXI_M_MM2S_CTL_TARGET_ADDR = 0;
parameter    C_M_AXI_M_MM2S_CTL_USER_VALUE = 0;
parameter    C_M_AXI_M_MM2S_CTL_PROT_VALUE = 0;
parameter    C_M_AXI_M_MM2S_CTL_CACHE_VALUE = 3;
parameter    C_M_AXI_M_S2MM_CTL_ID_WIDTH = 1;
parameter    C_M_AXI_M_S2MM_CTL_ADDR_WIDTH = 32;
parameter    C_M_AXI_M_S2MM_CTL_DATA_WIDTH = 32;
parameter    C_M_AXI_M_S2MM_CTL_AWUSER_WIDTH = 1;
parameter    C_M_AXI_M_S2MM_CTL_ARUSER_WIDTH = 1;
parameter    C_M_AXI_M_S2MM_CTL_WUSER_WIDTH = 1;
parameter    C_M_AXI_M_S2MM_CTL_RUSER_WIDTH = 1;
parameter    C_M_AXI_M_S2MM_CTL_BUSER_WIDTH = 1;
parameter    C_M_AXI_M_S2MM_CTL_TARGET_ADDR = 0;
parameter    C_M_AXI_M_S2MM_CTL_USER_VALUE = 0;
parameter    C_M_AXI_M_S2MM_CTL_PROT_VALUE = 0;
parameter    C_M_AXI_M_S2MM_CTL_CACHE_VALUE = 3;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv64_C = 64'b1100;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_12 = 64'b10010;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv64_16 = 64'b10110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv63_0 = 63'b000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv28_8000000 = 28'b1000000000000000000000000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv9_9 = 9'b1001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv9_1F7 = 9'b111110111;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv12_C01 = 12'b110000000001;
parameter    ap_const_lv54_0 = 54'b000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv12_433 = 12'b10000110011;
parameter    ap_const_lv12_1A = 12'b11010;
parameter    ap_const_lv12_FE6 = 12'b111111100110;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv12_36 = 12'b110110;
parameter    ap_const_lv12_1C = 12'b11100;
parameter    ap_const_lv12_2 = 12'b10;
parameter    ap_const_lv12_3 = 12'b11;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv54_3FFFFFFFFFFFFF = 54'b111111111111111111111111111111111111111111111111111111;
parameter    ap_const_lv28_FFFFFFF = 28'b1111111111111111111111111111;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv12_D = 12'b1101;
parameter    ap_const_lv12_FF3 = 12'b111111110011;
parameter    ap_const_lv28_7FFFFFF = 28'b111111111111111111111111111;
parameter    ap_const_lv16_FFFF = 16'b1111111111111111;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv5_F = 5'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv14_1FFF = 14'b1111111111111;
parameter    ap_const_lv14_2000 = 14'b10000000000000;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv15_7FFF = 15'b111111111111111;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv19_7FFFF = 19'b1111111111111111111;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_FFFFFFE9 = 32'b11111111111111111111111111101001;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv23_17 = 23'b10111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv8_82 = 8'b10000010;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_M_MM2S_CTL_WSTRB_WIDTH = (C_M_AXI_M_MM2S_CTL_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_M_S2MM_CTL_WSTRB_WIDTH = (C_M_AXI_M_S2MM_CTL_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   m_axi_m_mm2s_ctl_AWVALID;
input   m_axi_m_mm2s_ctl_AWREADY;
output  [C_M_AXI_M_MM2S_CTL_ADDR_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_AWADDR;
output  [C_M_AXI_M_MM2S_CTL_ID_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_AWID;
output  [7:0] m_axi_m_mm2s_ctl_AWLEN;
output  [2:0] m_axi_m_mm2s_ctl_AWSIZE;
output  [1:0] m_axi_m_mm2s_ctl_AWBURST;
output  [1:0] m_axi_m_mm2s_ctl_AWLOCK;
output  [3:0] m_axi_m_mm2s_ctl_AWCACHE;
output  [2:0] m_axi_m_mm2s_ctl_AWPROT;
output  [3:0] m_axi_m_mm2s_ctl_AWQOS;
output  [3:0] m_axi_m_mm2s_ctl_AWREGION;
output  [C_M_AXI_M_MM2S_CTL_AWUSER_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_AWUSER;
output   m_axi_m_mm2s_ctl_WVALID;
input   m_axi_m_mm2s_ctl_WREADY;
output  [C_M_AXI_M_MM2S_CTL_DATA_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_WDATA;
output  [C_M_AXI_M_MM2S_CTL_WSTRB_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_WSTRB;
output   m_axi_m_mm2s_ctl_WLAST;
output  [C_M_AXI_M_MM2S_CTL_ID_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_WID;
output  [C_M_AXI_M_MM2S_CTL_WUSER_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_WUSER;
output   m_axi_m_mm2s_ctl_ARVALID;
input   m_axi_m_mm2s_ctl_ARREADY;
output  [C_M_AXI_M_MM2S_CTL_ADDR_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_ARADDR;
output  [C_M_AXI_M_MM2S_CTL_ID_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_ARID;
output  [7:0] m_axi_m_mm2s_ctl_ARLEN;
output  [2:0] m_axi_m_mm2s_ctl_ARSIZE;
output  [1:0] m_axi_m_mm2s_ctl_ARBURST;
output  [1:0] m_axi_m_mm2s_ctl_ARLOCK;
output  [3:0] m_axi_m_mm2s_ctl_ARCACHE;
output  [2:0] m_axi_m_mm2s_ctl_ARPROT;
output  [3:0] m_axi_m_mm2s_ctl_ARQOS;
output  [3:0] m_axi_m_mm2s_ctl_ARREGION;
output  [C_M_AXI_M_MM2S_CTL_ARUSER_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_ARUSER;
input   m_axi_m_mm2s_ctl_RVALID;
output   m_axi_m_mm2s_ctl_RREADY;
input  [C_M_AXI_M_MM2S_CTL_DATA_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_RDATA;
input   m_axi_m_mm2s_ctl_RLAST;
input  [C_M_AXI_M_MM2S_CTL_ID_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_RID;
input  [C_M_AXI_M_MM2S_CTL_RUSER_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_RUSER;
input  [1:0] m_axi_m_mm2s_ctl_RRESP;
input   m_axi_m_mm2s_ctl_BVALID;
output   m_axi_m_mm2s_ctl_BREADY;
input  [1:0] m_axi_m_mm2s_ctl_BRESP;
input  [C_M_AXI_M_MM2S_CTL_ID_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_BID;
input  [C_M_AXI_M_MM2S_CTL_BUSER_WIDTH - 1 : 0] m_axi_m_mm2s_ctl_BUSER;
output   m_axi_m_s2mm_ctl_AWVALID;
input   m_axi_m_s2mm_ctl_AWREADY;
output  [C_M_AXI_M_S2MM_CTL_ADDR_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_AWADDR;
output  [C_M_AXI_M_S2MM_CTL_ID_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_AWID;
output  [7:0] m_axi_m_s2mm_ctl_AWLEN;
output  [2:0] m_axi_m_s2mm_ctl_AWSIZE;
output  [1:0] m_axi_m_s2mm_ctl_AWBURST;
output  [1:0] m_axi_m_s2mm_ctl_AWLOCK;
output  [3:0] m_axi_m_s2mm_ctl_AWCACHE;
output  [2:0] m_axi_m_s2mm_ctl_AWPROT;
output  [3:0] m_axi_m_s2mm_ctl_AWQOS;
output  [3:0] m_axi_m_s2mm_ctl_AWREGION;
output  [C_M_AXI_M_S2MM_CTL_AWUSER_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_AWUSER;
output   m_axi_m_s2mm_ctl_WVALID;
input   m_axi_m_s2mm_ctl_WREADY;
output  [C_M_AXI_M_S2MM_CTL_DATA_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_WDATA;
output  [C_M_AXI_M_S2MM_CTL_WSTRB_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_WSTRB;
output   m_axi_m_s2mm_ctl_WLAST;
output  [C_M_AXI_M_S2MM_CTL_ID_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_WID;
output  [C_M_AXI_M_S2MM_CTL_WUSER_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_WUSER;
output   m_axi_m_s2mm_ctl_ARVALID;
input   m_axi_m_s2mm_ctl_ARREADY;
output  [C_M_AXI_M_S2MM_CTL_ADDR_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_ARADDR;
output  [C_M_AXI_M_S2MM_CTL_ID_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_ARID;
output  [7:0] m_axi_m_s2mm_ctl_ARLEN;
output  [2:0] m_axi_m_s2mm_ctl_ARSIZE;
output  [1:0] m_axi_m_s2mm_ctl_ARBURST;
output  [1:0] m_axi_m_s2mm_ctl_ARLOCK;
output  [3:0] m_axi_m_s2mm_ctl_ARCACHE;
output  [2:0] m_axi_m_s2mm_ctl_ARPROT;
output  [3:0] m_axi_m_s2mm_ctl_ARQOS;
output  [3:0] m_axi_m_s2mm_ctl_ARREGION;
output  [C_M_AXI_M_S2MM_CTL_ARUSER_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_ARUSER;
input   m_axi_m_s2mm_ctl_RVALID;
output   m_axi_m_s2mm_ctl_RREADY;
input  [C_M_AXI_M_S2MM_CTL_DATA_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_RDATA;
input   m_axi_m_s2mm_ctl_RLAST;
input  [C_M_AXI_M_S2MM_CTL_ID_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_RID;
input  [C_M_AXI_M_S2MM_CTL_RUSER_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_RUSER;
input  [1:0] m_axi_m_s2mm_ctl_RRESP;
input   m_axi_m_s2mm_ctl_BVALID;
output   m_axi_m_s2mm_ctl_BREADY;
input  [1:0] m_axi_m_s2mm_ctl_BRESP;
input  [C_M_AXI_M_S2MM_CTL_ID_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_BID;
input  [C_M_AXI_M_S2MM_CTL_BUSER_WIDTH - 1 : 0] m_axi_m_s2mm_ctl_BUSER;
input  [127:0] s_in_V_V_TDATA;
input   s_in_V_V_TVALID;
output   s_in_V_V_TREADY;
output  [127:0] s_out_V_V_TDATA;
output   s_out_V_V_TVALID;
input   s_out_V_V_TREADY;
output   interrupt;

reg s_in_V_V_TREADY;
reg s_out_V_V_TVALID;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
reg   [5:0] ap_CS_fsm = 6'b000000;
reg    ap_ready;
wire   [31:0] sourceAddress;
reg   [31:0] sourceAddress_in_sig;
reg   [31:0] sourceAddress_preg = 32'b00000000000000000000000000000000;
wire    sourceAddress_ap_vld;
reg    sourceAddress_ap_vld_in_sig;
reg    sourceAddress_ap_vld_preg = 1'b0;
wire   [31:0] destinationAddress;
reg   [31:0] destinationAddress_in_sig;
reg   [31:0] destinationAddress_preg = 32'b00000000000000000000000000000000;
wire    destinationAddress_ap_vld;
reg    destinationAddress_ap_vld_in_sig;
reg    destinationAddress_ap_vld_preg = 1'b0;
wire   [31:0] iterations;
reg   [31:0] iterations_in_sig;
reg   [31:0] iterations_preg = 32'b00000000000000000000000000000000;
wire    iterations_ap_vld;
reg    iterations_ap_vld_in_sig;
reg    iterations_ap_vld_preg = 1'b0;
wire   [31:0] control_in_qam;
wire    control_in_qam_ap_vld;
wire   [7:0] control_in_lf_p;
reg   [7:0] control_in_lf_p_in_sig;
reg   [7:0] control_in_lf_p_preg = 8'b00000000;
wire    control_in_lf_p_ap_vld;
reg    control_in_lf_p_ap_vld_in_sig;
reg    control_in_lf_p_ap_vld_preg = 1'b0;
wire   [7:0] control_in_lf_i;
reg   [7:0] control_in_lf_i_in_sig;
reg   [7:0] control_in_lf_i_preg = 8'b00000000;
wire    control_in_lf_i_ap_vld;
reg    control_in_lf_i_ap_vld_in_sig;
reg    control_in_lf_i_ap_vld_preg = 1'b0;
wire   [7:0] control_in_lf_out_gain;
reg   [7:0] control_in_lf_out_gain_in_sig;
reg   [7:0] control_in_lf_out_gain_preg = 8'b00000000;
wire    control_in_lf_out_gain_ap_vld;
reg    control_in_lf_out_gain_ap_vld_in_sig;
reg    control_in_lf_out_gain_ap_vld_preg = 1'b0;
wire    control_in_reg_clr;
reg    control_in_reg_clr_in_sig;
reg    control_in_reg_clr_preg = 1'b0;
wire    control_in_reg_clr_ap_vld;
reg    control_in_reg_clr_ap_vld_in_sig;
reg    control_in_reg_clr_ap_vld_preg = 1'b0;
wire   [31:0] control_in_reg_init;
reg   [31:0] control_in_reg_init_in_sig;
reg   [31:0] control_in_reg_init_preg = 32'b00000000000000000000000000000000;
wire    control_in_reg_init_ap_vld;
reg    control_in_reg_init_ap_vld_in_sig;
reg    control_in_reg_init_ap_vld_preg = 1'b0;
reg   [27:0] i_reg_V = 28'b0000000000000000000000000000;
reg   [15:0] phase_angle_V = 16'b0000000000000000;
wire   [9:0] cos_lut_address0;
reg    cos_lut_ce0;
wire   [14:0] cos_lut_q0;
wire   [9:0] cos_lut_address1;
reg    cos_lut_ce1;
wire   [14:0] cos_lut_q1;
wire   [0:0] ap_return;
reg    m_mm2s_ctl_AWVALID;
wire    m_mm2s_ctl_AWREADY;
reg   [31:0] m_mm2s_ctl_AWADDR;
wire   [0:0] m_mm2s_ctl_AWID;
wire   [31:0] m_mm2s_ctl_AWLEN;
wire   [2:0] m_mm2s_ctl_AWSIZE;
wire   [1:0] m_mm2s_ctl_AWBURST;
wire   [1:0] m_mm2s_ctl_AWLOCK;
wire   [3:0] m_mm2s_ctl_AWCACHE;
wire   [2:0] m_mm2s_ctl_AWPROT;
wire   [3:0] m_mm2s_ctl_AWQOS;
wire   [3:0] m_mm2s_ctl_AWREGION;
wire   [0:0] m_mm2s_ctl_AWUSER;
reg    m_mm2s_ctl_WVALID;
wire    m_mm2s_ctl_WREADY;
reg   [31:0] m_mm2s_ctl_WDATA;
wire   [3:0] m_mm2s_ctl_WSTRB;
wire    m_mm2s_ctl_WLAST;
wire   [0:0] m_mm2s_ctl_WID;
wire   [0:0] m_mm2s_ctl_WUSER;
reg    m_mm2s_ctl_ARVALID;
wire    m_mm2s_ctl_ARREADY;
wire   [31:0] m_mm2s_ctl_ARADDR;
wire   [0:0] m_mm2s_ctl_ARID;
wire   [31:0] m_mm2s_ctl_ARLEN;
wire   [2:0] m_mm2s_ctl_ARSIZE;
wire   [1:0] m_mm2s_ctl_ARBURST;
wire   [1:0] m_mm2s_ctl_ARLOCK;
wire   [3:0] m_mm2s_ctl_ARCACHE;
wire   [2:0] m_mm2s_ctl_ARPROT;
wire   [3:0] m_mm2s_ctl_ARQOS;
wire   [3:0] m_mm2s_ctl_ARREGION;
wire   [0:0] m_mm2s_ctl_ARUSER;
wire    m_mm2s_ctl_RVALID;
reg    m_mm2s_ctl_RREADY;
wire   [31:0] m_mm2s_ctl_RDATA;
wire    m_mm2s_ctl_RLAST;
wire   [0:0] m_mm2s_ctl_RID;
wire   [0:0] m_mm2s_ctl_RUSER;
wire   [1:0] m_mm2s_ctl_RRESP;
wire    m_mm2s_ctl_BVALID;
reg    m_mm2s_ctl_BREADY;
wire   [1:0] m_mm2s_ctl_BRESP;
wire   [0:0] m_mm2s_ctl_BID;
wire   [0:0] m_mm2s_ctl_BUSER;
reg    m_s2mm_ctl_AWVALID;
wire    m_s2mm_ctl_AWREADY;
reg   [31:0] m_s2mm_ctl_AWADDR;
wire   [0:0] m_s2mm_ctl_AWID;
wire   [31:0] m_s2mm_ctl_AWLEN;
wire   [2:0] m_s2mm_ctl_AWSIZE;
wire   [1:0] m_s2mm_ctl_AWBURST;
wire   [1:0] m_s2mm_ctl_AWLOCK;
wire   [3:0] m_s2mm_ctl_AWCACHE;
wire   [2:0] m_s2mm_ctl_AWPROT;
wire   [3:0] m_s2mm_ctl_AWQOS;
wire   [3:0] m_s2mm_ctl_AWREGION;
wire   [0:0] m_s2mm_ctl_AWUSER;
reg    m_s2mm_ctl_WVALID;
wire    m_s2mm_ctl_WREADY;
reg   [31:0] m_s2mm_ctl_WDATA;
wire   [3:0] m_s2mm_ctl_WSTRB;
wire    m_s2mm_ctl_WLAST;
wire   [0:0] m_s2mm_ctl_WID;
wire   [0:0] m_s2mm_ctl_WUSER;
reg    m_s2mm_ctl_ARVALID;
wire    m_s2mm_ctl_ARREADY;
reg   [31:0] m_s2mm_ctl_ARADDR;
wire   [0:0] m_s2mm_ctl_ARID;
wire   [31:0] m_s2mm_ctl_ARLEN;
wire   [2:0] m_s2mm_ctl_ARSIZE;
wire   [1:0] m_s2mm_ctl_ARBURST;
wire   [1:0] m_s2mm_ctl_ARLOCK;
wire   [3:0] m_s2mm_ctl_ARCACHE;
wire   [2:0] m_s2mm_ctl_ARPROT;
wire   [3:0] m_s2mm_ctl_ARQOS;
wire   [3:0] m_s2mm_ctl_ARREGION;
wire   [0:0] m_s2mm_ctl_ARUSER;
wire    m_s2mm_ctl_RVALID;
reg    m_s2mm_ctl_RREADY;
wire   [31:0] m_s2mm_ctl_RDATA;
wire    m_s2mm_ctl_RLAST;
wire   [0:0] m_s2mm_ctl_RID;
wire   [0:0] m_s2mm_ctl_RUSER;
wire   [1:0] m_s2mm_ctl_RRESP;
wire    m_s2mm_ctl_BVALID;
reg    m_s2mm_ctl_BREADY;
wire   [1:0] m_s2mm_ctl_BRESP;
wire   [0:0] m_s2mm_ctl_BID;
wire   [0:0] m_s2mm_ctl_BUSER;
wire   [31:0] m_s2mm_ctl_addr_fu_466_p2;
reg   [31:0] m_s2mm_ctl_addr_reg_3740;
reg    ap_sig_ioackin_m_mm2s_ctl_ARREADY;
reg    ap_sig_ioackin_m_s2mm_ctl_ARREADY;
reg    ap_sig_bdd_467;
wire   [0:0] control_in_reg_clr_read_read_fu_359_p2;
reg   [0:0] isNeg_reg_3787;
reg   [0:0] isNeg_2_reg_3793;
reg   [28:0] tmp_13_reg_3799;
reg    ap_sig_bdd_493;
wire   [1:0] tmp_15_fu_499_p1;
reg   [1:0] tmp_15_reg_3804;
reg   [28:0] tmp_18_reg_3809;
wire   [1:0] tmp_21_fu_513_p1;
reg   [1:0] tmp_21_reg_3814;
reg   [30:0] tmp_29_reg_3819;
reg   [30:0] tmp_37_reg_3824;
reg   [18:0] tmp_31_reg_3829;
wire   [11:0] tmp_34_fu_581_p1;
reg   [11:0] tmp_34_reg_3834;
reg   [18:0] tmp_44_reg_3839;
wire   [11:0] tmp_45_fu_595_p1;
reg   [11:0] tmp_45_reg_3844;
reg    ap_sig_bdd_522;
reg    ap_sig_ioackin_m_mm2s_ctl_AWREADY;
reg    ap_sig_ioackin_m_mm2s_ctl_WREADY;
reg    ap_sig_ioackin_m_s2mm_ctl_AWREADY;
reg    ap_sig_ioackin_m_s2mm_ctl_WREADY;
wire   [63:0] ireg_V_2_fu_652_p1;
reg   [63:0] ireg_V_2_reg_3869;
wire   [0:0] tmp_39_fu_660_p2;
reg   [0:0] tmp_39_reg_3876;
wire   [27:0] p_this_assign_fu_666_p3;
reg   [27:0] p_this_assign_reg_3882;
wire   [0:0] sel_tmp34_fu_674_p2;
reg   [0:0] sel_tmp34_reg_3887;
wire   [27:0] sh_assign_1_i_cast1_fu_696_p1;
reg   [27:0] sh_assign_1_i_cast1_reg_3892;
wire   [31:0] sh_assign_1_i_cast_fu_700_p1;
reg   [31:0] sh_assign_1_i_cast_reg_3897;
wire   [0:0] isNeg_1_fu_713_p3;
reg   [0:0] isNeg_1_reg_3902;
wire   [27:0] sh_assign_3_i_cast1_fu_735_p1;
reg   [27:0] sh_assign_3_i_cast1_reg_3907;
wire   [31:0] sh_assign_3_i_cast_fu_739_p1;
reg   [31:0] sh_assign_3_i_cast_reg_3912;
wire   [27:0] sh_assign_5_i_cast1_fu_759_p1;
reg   [27:0] sh_assign_5_i_cast1_reg_3917;
wire   [31:0] sh_assign_5_i_cast_fu_763_p1;
reg   [31:0] sh_assign_5_i_cast_reg_3922;
wire   [31:0] i_1_fu_772_p2;
reg   [31:0] i_1_reg_3930;
wire   [0:0] tmp_6_fu_767_p2;
reg    ap_sig_bdd_590;
wire   [31:0] v_assign_fu_798_p1;
wire   [0:0] isneg_12_fu_808_p3;
reg   [0:0] isneg_12_reg_3945;
wire   [53:0] man_V_17_fu_855_p3;
reg   [53:0] man_V_17_reg_3952;
wire   [11:0] F2_2_fu_863_p2;
reg   [11:0] F2_2_reg_3960;
wire   [0:0] tmp_40_fu_869_p2;
reg   [0:0] tmp_40_reg_3967;
wire   [11:0] sh_amt_2_fu_887_p3;
reg   [11:0] sh_amt_2_reg_3972;
wire   [0:0] tmp_43_fu_895_p2;
reg   [0:0] tmp_43_reg_3979;
wire   [27:0] tmp_119_fu_901_p1;
reg   [27:0] tmp_119_reg_3985;
wire   [0:0] tmp_57_fu_905_p2;
reg   [0:0] tmp_57_reg_3991;
wire   [27:0] sel_tmp25_fu_991_p3;
reg   [27:0] sel_tmp25_reg_3997;
wire   [0:0] sel_tmp27_fu_1005_p2;
reg   [0:0] sel_tmp27_reg_4002;
wire   [0:0] tmp_58_fu_1029_p2;
reg   [0:0] tmp_58_reg_4007;
wire   [0:0] rev_fu_1043_p2;
reg   [0:0] rev_reg_4014;
wire   [0:0] Range1_all_ones_1_fu_1068_p2;
reg   [0:0] Range1_all_ones_1_reg_4019;
reg   [0:0] tmp_127_reg_4026;
wire   [0:0] tmp_61_fu_1082_p2;
reg   [0:0] tmp_61_reg_4031;
wire   [0:0] Range2_all_ones_fu_1103_p2;
reg   [0:0] Range2_all_ones_reg_4037;
wire   [0:0] tmp_64_fu_1109_p2;
reg   [0:0] tmp_64_reg_4042;
wire   [0:0] Range1_all_zeros_1_fu_1121_p2;
reg   [0:0] Range1_all_zeros_1_reg_4047;
wire   [0:0] tmp2_fu_1132_p2;
reg   [0:0] tmp2_reg_4052;
wire   [0:0] tmp3_fu_1150_p2;
reg   [0:0] tmp3_reg_4058;
reg   [0:0] isneg_reg_4063;
wire   [51:0] tmp_62_fu_1186_p1;
reg   [51:0] tmp_62_reg_4069;
wire   [0:0] tmp_8_fu_1190_p2;
reg   [0:0] tmp_8_reg_4074;
wire   [11:0] F2_fu_1196_p2;
reg   [11:0] F2_reg_4080;
reg   [0:0] isneg_1_reg_4088;
wire   [51:0] tmp_112_fu_1232_p1;
reg   [51:0] tmp_112_reg_4094;
wire   [0:0] tmp_24_fu_1236_p2;
reg   [0:0] tmp_24_reg_4099;
wire   [11:0] F2_1_fu_1242_p2;
reg   [11:0] F2_1_reg_4105;
wire   [27:0] p_Val2_4_fu_1255_p3;
reg   [27:0] p_Val2_4_reg_4113;
wire   [0:0] neg_src_fu_1353_p2;
reg   [0:0] neg_src_reg_4120;
wire   [0:0] overflow_fu_1375_p2;
reg   [0:0] overflow_reg_4126;
wire   [0:0] brmerge92_demorgan_i_fu_1381_p2;
reg   [0:0] brmerge92_demorgan_i_reg_4132;
wire   [15:0] tmp_78_fu_1443_p1;
reg   [15:0] tmp_78_reg_4138;
wire   [0:0] tmp_14_fu_1447_p2;
reg   [0:0] tmp_14_reg_4143;
wire   [15:0] tmp_90_fu_1479_p1;
reg   [15:0] tmp_90_reg_4149;
wire   [15:0] tmp_100_fu_1493_p1;
reg   [15:0] tmp_100_reg_4154;
wire   [0:0] sel_tmp2_fu_1502_p2;
reg   [0:0] sel_tmp2_reg_4159;
wire   [0:0] sel_tmp7_fu_1519_p2;
reg   [0:0] sel_tmp7_reg_4164;
wire   [0:0] sel_tmp3_fu_1537_p2;
reg   [0:0] sel_tmp3_reg_4170;
wire   [15:0] tmp_113_fu_1599_p1;
reg   [15:0] tmp_113_reg_4175;
wire   [0:0] tmp_30_fu_1603_p2;
reg   [0:0] tmp_30_reg_4180;
wire   [15:0] tmp_115_fu_1635_p1;
reg   [15:0] tmp_115_reg_4186;
wire   [15:0] tmp_116_fu_1649_p1;
reg   [15:0] tmp_116_reg_4191;
wire   [0:0] sel_tmp10_fu_1658_p2;
reg   [0:0] sel_tmp10_reg_4196;
wire   [0:0] sel_tmp12_fu_1675_p2;
reg   [0:0] sel_tmp12_reg_4201;
wire   [0:0] sel_tmp15_fu_1693_p2;
reg   [0:0] sel_tmp15_reg_4207;
wire   [27:0] p_5_fu_1768_p3;
reg   [27:0] p_5_reg_4212;
wire   [15:0] newSel3_fu_1834_p3;
reg   [15:0] newSel3_reg_4217;
wire   [15:0] newSel7_fu_1900_p3;
reg   [15:0] newSel7_reg_4222;
wire   [27:0] p_Val2_6_fu_1934_p2;
reg   [27:0] p_Val2_6_reg_4227;
reg   [15:0] tmp_68_reg_4232;
wire   [27:0] p_Val2_9_fu_1956_p2;
reg   [27:0] p_Val2_9_reg_4237;
reg   [15:0] tmp_111_reg_4242;
reg   [15:0] p_Val2_61_reg_4247;
reg   [15:0] p_Val2_63_reg_4254;
reg   [0:0] isneg_13_reg_4261;
reg   [4:0] p_Val2_12_reg_4270;
wire   [0:0] brmerge_i1_i_fu_2074_p2;
reg   [0:0] brmerge_i1_i_reg_4276;
wire   [0:0] brmerge39_i1_i_fu_2092_p2;
reg   [0:0] brmerge39_i1_i_reg_4281;
reg   [0:0] isneg_14_reg_4286;
reg   [4:0] p_Val2_14_reg_4295;
wire   [0:0] brmerge_i_i1_fu_2140_p2;
reg   [0:0] brmerge_i_i1_reg_4301;
wire   [0:0] brmerge39_i_i_fu_2158_p2;
reg   [0:0] brmerge39_i_i_reg_4306;
reg   [0:0] tmp_132_reg_4311;
reg   [0:0] tmp_133_reg_4316;
reg   [0:0] isneg_15_reg_4321;
reg   [13:0] p_Val2_35_reg_4327;
reg   [0:0] newsignbit_3_reg_4333;
reg   [1:0] p_Result_i1_reg_4339;
wire   [13:0] p_Val2_36_fu_2430_p3;
reg   [13:0] p_Val2_36_reg_4345;
reg   [0:0] isneg_16_reg_4350;
reg   [13:0] p_Val2_38_reg_4356;
reg   [0:0] newsignbit_4_reg_4362;
reg   [1:0] tmp_69_reg_4368;
wire   [13:0] ph_est_V_fu_2597_p3;
reg   [13:0] ph_est_V_reg_4374;
wire   [27:0] p_Val2_43_fu_2637_p1;
reg   [27:0] p_Val2_43_reg_4379;
wire   [27:0] p_Val2_42_fu_2670_p2;
reg   [27:0] p_Val2_42_reg_4384;
wire   [27:0] tmp_25_i_fu_2766_p3;
reg   [27:0] tmp_25_i_reg_4389;
reg   [1:0] msb_V_reg_4395;
reg   [0:0] tmp_144_reg_4402;
reg   [9:0] sin_adr_V_reg_4408;
reg   [11:0] p_Val2_65_reg_4425;
reg   [11:0] p_Val2_67_reg_4431;
reg   [0:0] isneg_18_reg_4437;
reg   [0:0] isneg_19_reg_4444;
wire   [0:0] tmp_70_fu_3055_p2;
reg   [0:0] tmp_70_reg_4451;
wire   [16:0] tmp_V_15_fu_3069_p3;
reg   [16:0] tmp_V_15_reg_4456;
reg   [31:0] tmp_71_fu_3094_p3;
reg   [31:0] tmp_71_reg_4461;
wire   [7:0] tmp_145_fu_3102_p1;
reg   [7:0] tmp_145_reg_4467;
wire   [0:0] tmp_81_fu_3106_p2;
reg   [0:0] tmp_81_reg_4472;
wire   [16:0] tmp_V_16_fu_3120_p3;
reg   [16:0] tmp_V_16_reg_4477;
reg   [31:0] tmp_82_fu_3145_p3;
reg   [31:0] tmp_82_reg_4482;
wire   [7:0] tmp_147_fu_3153_p1;
reg   [7:0] tmp_147_reg_4488;
wire   [0:0] tmp_91_fu_3157_p2;
reg   [0:0] tmp_91_reg_4493;
wire   [12:0] tmp_V_17_fu_3171_p3;
reg   [12:0] tmp_V_17_reg_4498;
reg   [31:0] tmp_92_fu_3196_p3;
reg   [31:0] tmp_92_reg_4503;
wire   [7:0] tmp_150_fu_3204_p1;
reg   [7:0] tmp_150_reg_4509;
wire   [0:0] tmp_101_fu_3208_p2;
reg   [0:0] tmp_101_reg_4514;
wire   [12:0] tmp_V_18_fu_3222_p3;
reg   [12:0] tmp_V_18_reg_4519;
reg   [31:0] tmp_102_fu_3247_p3;
reg   [31:0] tmp_102_reg_4524;
wire   [7:0] tmp_153_fu_3255_p1;
reg   [7:0] tmp_153_reg_4530;
wire   [0:0] tmp_72_fu_3264_p2;
reg   [0:0] tmp_72_reg_4535;
wire   [16:0] p_Result_s_fu_3295_p4;
reg   [16:0] p_Result_s_reg_4540;
wire   [22:0] tmp_88_cast_fu_3320_p3;
reg   [22:0] tmp_88_cast_reg_4545;
wire   [0:0] tmp_83_fu_3333_p2;
reg   [0:0] tmp_83_reg_4550;
wire   [16:0] p_Result_8_fu_3364_p4;
reg   [16:0] p_Result_8_reg_4555;
wire   [22:0] tmp_101_cast_fu_3389_p3;
reg   [22:0] tmp_101_cast_reg_4560;
wire   [0:0] tmp_93_fu_3402_p2;
reg   [0:0] tmp_93_reg_4565;
wire   [12:0] p_Result_20_fu_3433_p4;
reg   [12:0] p_Result_20_reg_4570;
wire   [22:0] tmp_114_cast_fu_3458_p3;
reg   [22:0] tmp_114_cast_reg_4575;
wire   [0:0] tmp_103_fu_3471_p2;
reg   [0:0] tmp_103_reg_4580;
wire   [12:0] p_Result_25_fu_3502_p4;
reg   [12:0] p_Result_25_reg_4585;
wire   [22:0] tmp_127_cast_fu_3527_p3;
reg   [22:0] tmp_127_cast_reg_4590;
reg   [31:0] i_reg_448;
reg    ap_sig_ioackin_s_out_V_V_TREADY;
wire   [63:0] tmp_34_i_fu_2888_p1;
wire   [63:0] tmp_35_i_fu_2893_p1;
reg    ap_reg_ioackin_m_mm2s_ctl_ARREADY = 1'b0;
reg    ap_reg_ioackin_m_mm2s_ctl_AWREADY = 1'b0;
reg    ap_reg_ioackin_m_mm2s_ctl_WREADY = 1'b0;
wire   [31:0] m_mm2s_ctl_assign_fu_517_p4;
reg    ap_sig_bdd_947;
wire   [31:0] tmp_1_fu_555_p3;
wire   [31:0] tmp_2_fu_599_p4;
wire   [31:0] read_length_fu_631_p2;
reg    ap_reg_ioackin_m_s2mm_ctl_ARREADY = 1'b0;
reg    ap_reg_ioackin_m_s2mm_ctl_AWREADY = 1'b0;
reg    ap_reg_ioackin_m_s2mm_ctl_WREADY = 1'b0;
wire   [31:0] tmp_fu_526_p4;
wire   [31:0] tmp_4_fu_563_p3;
wire   [31:0] tmp_5_fu_608_p4;
wire   [27:0] p_Val2_47_fu_2676_p3;
reg   [11:0] p_Val2_s_fu_322;
reg   [11:0] p_Val2_1_fu_326;
reg    ap_reg_ioackin_s_out_V_V_TREADY = 1'b0;
reg   [31:0] grp_fu_460_p0;
wire   [31:0] grp_fu_463_p0;
wire   [63:0] grp_fu_460_p1;
wire   [62:0] tmp_46_fu_656_p1;
wire   [8:0] tmp_10_i_fu_683_p1;
wire   [8:0] sh_i_cast_fu_680_p1;
wire   [8:0] tmp_10_i_fu_683_p2;
wire   [8:0] sh_assign_fu_689_p2;
wire   [8:0] sh_assign_fu_689_p3;
wire   [8:0] sh_assign_1_fu_707_p0;
wire   [8:0] tmp_15_i_cast_fu_704_p1;
wire   [8:0] sh_assign_1_fu_707_p2;
wire   [8:0] tmp_16_i_fu_721_p1;
wire   [8:0] tmp_16_i_fu_721_p2;
wire   [8:0] sh_assign_2_fu_727_p3;
wire   [8:0] tmp_26_i_fu_746_p1;
wire   [8:0] sh_1_i_cast_fu_743_p1;
wire   [8:0] tmp_26_i_fu_746_p2;
wire   [8:0] sh_assign_3_fu_752_p2;
wire   [8:0] sh_assign_3_fu_752_p3;
wire   [31:0] first_r_V_fu_778_p4;
wire   [31:0] second_r_V_fu_788_p4;
wire   [10:0] exp_tmp_V_2_fu_815_p4;
wire   [11:0] tmp_s_fu_824_p1;
wire   [51:0] tmp_118_fu_834_p1;
wire   [52:0] tmp_38_fu_837_p3;
wire   [53:0] p_Result_30_fu_845_p1;
wire   [53:0] man_V_7_fu_849_p2;
wire   [11:0] tmp_41_fu_875_p2;
wire   [11:0] tmp_42_fu_881_p2;
wire   [11:0] exp_V_fu_828_p2;
wire   [31:0] tmp_51_fu_924_p0;
wire   [31:0] sh_amt_2_cast_fu_911_p1;
wire   [53:0] tmp_51_fu_924_p1;
wire   [53:0] tmp_52_fu_928_p2;
wire   [31:0] tmp_55_fu_940_p0;
wire   [31:0] tmp_55_fu_940_p1;
wire   [31:0] tmp_55_fu_940_p2;
wire   [0:0] sel_tmp19_fu_956_p2;
wire   [0:0] sel_tmp20_fu_961_p2;
wire   [0:0] tmp_49_fu_914_p2;
wire   [0:0] sel_tmp21_fu_966_p2;
wire   [27:0] tmp_120_fu_933_p1;
wire   [27:0] sel_tmp18_fu_950_p3;
wire   [0:0] sel_tmp23_fu_980_p2;
wire   [0:0] tmp_50_fu_919_p2;
wire   [0:0] sel_tmp24_fu_985_p2;
wire   [27:0] tmp_123_fu_946_p1;
wire   [27:0] sel_tmp22_fu_972_p3;
wire   [0:0] sel_tmp26_fu_999_p2;
wire   [11:0] pos1_fu_1011_p2;
wire   [11:0] pos2_fu_1020_p2;
wire   [0:0] tmp_125_fu_1035_p3;
wire   [31:0] tmp_59_fu_1049_p0;
wire   [53:0] tmp_59_fu_1049_p1;
wire   [53:0] tmp_60_fu_1053_p2;
wire   [0:0] lD_fu_1058_p1;
wire   [0:0] tmp1_fu_1062_p2;
wire   [31:0] tmp_63_fu_1088_p0;
wire   [53:0] tmp_63_fu_1088_p1;
wire   [53:0] Range2_V_1_fu_1092_p2;
wire   [53:0] r_V_fu_1097_p2;
wire   [0:0] sel_tmp28_fu_1126_p2;
wire   [0:0] tmp_63_not_fu_1138_p2;
wire   [0:0] tmp_65_fu_1115_p2;
wire   [0:0] sel_tmp30_fu_1144_p2;
wire   [63:0] ireg_V_fu_1156_p1;
wire   [10:0] exp_tmp_V_fu_1172_p4;
wire   [62:0] tmp_56_fu_1160_p1;
wire   [11:0] tmp_3_fu_1182_p1;
wire   [63:0] grp_fu_463_p1;
wire   [63:0] ireg_V_1_fu_1202_p1;
wire   [10:0] exp_tmp_V_1_fu_1218_p4;
wire   [62:0] tmp_110_fu_1206_p1;
wire   [11:0] tmp_22_fu_1228_p1;
wire   [27:0] p_2_fu_1248_p3;
wire   [0:0] rev1_fu_1269_p2;
wire   [0:0] or_cond88_i_fu_1274_p2;
wire   [0:0] Range2_all_ones_1_i_fu_1279_p3;
wire   [0:0] Range1_all_zeros_fu_1295_p2;
wire   [0:0] sel_tmp31_fu_1309_p2;
wire   [0:0] sel_tmp29_fu_1305_p2;
wire   [0:0] or_cond89_i_fu_1286_p2;
wire   [0:0] sel_tmp33_fu_1321_p2;
wire   [0:0] p_93_i_fu_1300_p2;
wire   [0:0] sel_tmp32_fu_1313_p3;
wire   [0:0] Range1_all_ones_fu_1290_p2;
wire   [0:0] sel_tmp35_fu_1334_p3;
wire   [0:0] newsignbit_fu_1261_p3;
wire   [0:0] sel_tmp36_fu_1348_p2;
wire   [0:0] deleted_zeros_0_i_fu_1326_p3;
wire   [0:0] deleted_zeros_0_not_i_fu_1358_p2;
wire   [0:0] brmerge_i_fu_1364_p2;
wire   [0:0] tmp_67_fu_1370_p2;
wire   [0:0] deleted_ones_0_i_fu_1340_p3;
wire   [52:0] tmp_7_fu_1387_p3;
wire   [53:0] p_Result_28_fu_1394_p1;
wire   [53:0] man_V_1_fu_1398_p2;
wire   [0:0] tmp_9_fu_1411_p2;
wire   [11:0] tmp_10_fu_1416_p2;
wire   [11:0] tmp_11_fu_1421_p2;
wire   [11:0] sh_amt_fu_1426_p3;
wire   [53:0] man_V_2_fu_1404_p3;
wire   [7:0] tmp_80_fu_1453_p4;
wire   [31:0] tmp_16_fu_1469_p0;
wire   [31:0] sh_amt_cast_fu_1434_p1;
wire   [53:0] tmp_16_fu_1469_p1;
wire   [53:0] tmp_17_fu_1473_p2;
wire   [31:0] tmp_20_fu_1487_p0;
wire   [31:0] tmp_20_fu_1487_p1;
wire   [31:0] tmp_20_fu_1487_p2;
wire   [0:0] tmp_12_fu_1438_p2;
wire   [0:0] sel_tmp1_fu_1497_p2;
wire   [0:0] sel_tmp6_demorgan_fu_1508_p2;
wire   [0:0] sel_tmp6_fu_1513_p2;
wire   [0:0] sel_tmp14_demorgan_fu_1525_p2;
wire   [0:0] icmp_fu_1463_p2;
wire   [0:0] sel_tmp_fu_1531_p2;
wire   [52:0] tmp_23_fu_1543_p3;
wire   [53:0] p_Result_29_fu_1550_p1;
wire   [53:0] man_V_4_fu_1554_p2;
wire   [0:0] tmp_25_fu_1567_p2;
wire   [11:0] tmp_26_fu_1572_p2;
wire   [11:0] tmp_27_fu_1577_p2;
wire   [11:0] sh_amt_1_fu_1582_p3;
wire   [53:0] man_V_5_fu_1560_p3;
wire   [7:0] tmp_114_fu_1609_p4;
wire   [31:0] tmp_32_fu_1625_p0;
wire   [31:0] sh_amt_1_cast_fu_1590_p1;
wire   [53:0] tmp_32_fu_1625_p1;
wire   [53:0] tmp_33_fu_1629_p2;
wire   [31:0] tmp_36_fu_1643_p0;
wire   [31:0] tmp_36_fu_1643_p1;
wire   [31:0] tmp_36_fu_1643_p2;
wire   [0:0] tmp_28_fu_1594_p2;
wire   [0:0] sel_tmp9_fu_1653_p2;
wire   [0:0] sel_tmp30_demorgan_fu_1664_p2;
wire   [0:0] sel_tmp11_fu_1669_p2;
wire   [0:0] sel_tmp38_demorgan_fu_1681_p2;
wire   [0:0] icmp1_fu_1619_p2;
wire   [0:0] sel_tmp14_fu_1687_p2;
wire   [0:0] brmerge92_i_fu_1699_p2;
wire   [0:0] underflow_fu_1704_p2;
wire   [0:0] sign_assign_not_fu_1714_p2;
wire   [0:0] tmp4_fu_1719_p2;
wire   [0:0] brmerge_i_i_fu_1709_p2;
wire   [0:0] tmp_66_fu_1736_p2;
wire   [0:0] sel_tmp93_demorgan_fu_1747_p2;
wire   [27:0] sel_tmp37_fu_1741_p3;
wire   [0:0] brmerge_fu_1724_p2;
wire   [0:0] tmp67_fu_1758_p2;
wire   [0:0] sel_tmp39_fu_1763_p2;
wire   [27:0] this_assign_mux_fu_1729_p3;
wire   [27:0] sel_tmp38_fu_1751_p3;
wire   [0:0] sel_tmp4_fu_1787_p2;
wire   [0:0] sel_tmp5_fu_1792_p2;
wire   [15:0] p_s_fu_1776_p3;
wire   [0:0] sel_tmp8_fu_1783_p2;
wire   [0:0] or_cond_fu_1804_p2;
wire   [15:0] newSel_fu_1797_p3;
wire   [15:0] newSel1_fu_1809_p3;
wire   [0:0] or_cond1_fu_1815_p2;
wire   [0:0] or_cond2_fu_1828_p2;
wire   [15:0] newSel2_fu_1820_p3;
wire   [0:0] sel_tmp16_fu_1853_p2;
wire   [0:0] sel_tmp17_fu_1858_p2;
wire   [15:0] p_1_fu_1842_p3;
wire   [0:0] sel_tmp13_fu_1849_p2;
wire   [0:0] or_cond3_fu_1870_p2;
wire   [15:0] newSel4_fu_1863_p3;
wire   [15:0] newSel5_fu_1875_p3;
wire   [0:0] or_cond4_fu_1881_p2;
wire   [0:0] or_cond5_fu_1894_p2;
wire   [15:0] newSel6_fu_1886_p3;
wire   [15:0] p_Val2_5_fu_1921_p0;
wire   [27:0] OP1_V_fu_1914_p1;
wire   [11:0] p_Val2_5_fu_1921_p1;
wire   [27:0] OP2_V_fu_1917_p1;
wire   [15:0] p_Val2_6_fu_1934_p0;
wire   [27:0] OP1_V_1_fu_1927_p1;
wire   [11:0] p_Val2_6_fu_1934_p1;
wire   [27:0] OP2_V_1_fu_1930_p1;
wire   [27:0] p_Val2_5_fu_1921_p2;
wire   [15:0] p_Val2_8_fu_1950_p0;
wire   [11:0] p_Val2_8_fu_1950_p1;
wire   [15:0] p_Val2_9_fu_1956_p0;
wire   [11:0] p_Val2_9_fu_1956_p1;
wire   [27:0] p_Val2_8_fu_1950_p2;
wire   [26:0] tmp_1_i_i_fu_1972_p3;
wire   [28:0] p_Val2_7_fu_1986_p0;
wire   [28:0] tmp_2_i_i_fu_1983_p1;
wire   [28:0] p_Val2_7_fu_1986_p2;
wire   [26:0] tmp_6_i_i_fu_2002_p3;
wire   [28:0] p_Val2_10_fu_2016_p0;
wire   [28:0] tmp_7_i_i_fu_2013_p1;
wire   [28:0] p_Val2_10_fu_2016_p2;
wire   [1:0] p_Result_i_fu_2058_p4;
wire   [0:0] newsignbit_1_fu_2050_p3;
wire   [0:0] p_not_i1_i_fu_2068_p2;
wire   [0:0] p_not38_i1_i_fu_2086_p2;
wire   [0:0] newsignbit_0_not_i1_i_fu_2080_p2;
wire   [1:0] p_Result_3_i_fu_2124_p4;
wire   [0:0] newsignbit_2_fu_2116_p3;
wire   [0:0] p_not_i_i_fu_2134_p2;
wire   [0:0] p_not38_i_i_fu_2152_p2;
wire   [0:0] newsignbit_0_not_i_i_fu_2146_p2;
wire   [0:0] tmp_9_i_fu_2164_p2;
wire   [0:0] underflow_1_fu_2174_p2;
wire   [0:0] overflow_1_fu_2169_p2;
wire   [0:0] underflow_not_i_fu_2184_p2;
wire   [0:0] brmerge_i_i1_i_fu_2178_p2;
wire   [0:0] brmerge8_i_fu_2190_p2;
wire   [4:0] p_Val2_34_mux_i_fu_2196_p3;
wire   [4:0] p_Val2_i_fu_2203_p3;
wire   [0:0] tmp_3_i_fu_2218_p2;
wire   [0:0] underflow_2_fu_2228_p2;
wire   [0:0] overflow_2_fu_2223_p2;
wire   [0:0] underflow_1_not_i_fu_2238_p2;
wire   [0:0] brmerge_i_i_i_fu_2232_p2;
wire   [0:0] brmerge9_i_fu_2244_p2;
wire   [4:0] p_Val2_36_mux_i_fu_2250_p3;
wire   [4:0] p_Val2_1_i_fu_2257_p3;
wire   [4:0] clip_i_V_fu_2210_p3;
wire   [4:0] clip_q_V_fu_2264_p3;
wire   [1:0] tmp_i_fu_2288_p3;
wire   [4:0] p_Result_31_fu_2295_p5;
wire   [15:0] p_Val2_32_fu_2314_p0;
wire   [4:0] p_Val2_32_fu_2314_p1;
wire   [20:0] p_Val2_32_fu_2314_p2;
wire   [0:0] p_not_i_i1_fu_2356_p2;
wire   [0:0] brmerge_i_i2_fu_2361_p2;
wire   [0:0] tmp_4_i_fu_2366_p2;
wire   [0:0] p_not38_i_i1_fu_2382_p2;
wire   [0:0] newsignbit_0_not_i_i1_fu_2377_p2;
wire   [0:0] brmerge39_i_i1_fu_2387_p2;
wire   [0:0] underflow_3_fu_2393_p2;
wire   [0:0] overflow_3_fu_2371_p2;
wire   [0:0] underflow_not_i1_fu_2404_p2;
wire   [0:0] brmerge_i_i_i1_fu_2398_p2;
wire   [0:0] brmerge_i1_fu_2410_p2;
wire   [13:0] p_Val2_47_mux_i_fu_2416_p3;
wire   [13:0] p_Val2_i1_fu_2423_p3;
wire   [1:0] tmp_1_i_fu_2438_p3;
wire   [4:0] p_Result_32_fu_2445_p5;
wire   [15:0] p_Val2_11_fu_2464_p0;
wire   [4:0] p_Val2_11_fu_2464_p1;
wire   [18:0] tmp_6_i_fu_2470_p3;
wire   [20:0] p_Val2_37_fu_2481_p0;
wire   [20:0] p_Val2_11_fu_2464_p2;
wire   [20:0] p_Val2_37_fu_2481_p2;
wire   [0:0] p_not_i_i_i_fu_2523_p2;
wire   [0:0] brmerge_i_i4_i_fu_2528_p2;
wire   [0:0] tmp_9_i1_fu_2533_p2;
wire   [0:0] p_not38_i_i_i_fu_2549_p2;
wire   [0:0] newsignbit_0_not_i_i_i_fu_2544_p2;
wire   [0:0] brmerge39_i_i_i_fu_2554_p2;
wire   [0:0] underflow_4_fu_2560_p2;
wire   [0:0] overflow_4_fu_2538_p2;
wire   [0:0] underflow_4_not_i_fu_2571_p2;
wire   [0:0] brmerge_i_i_i_i_fu_2565_p2;
wire   [0:0] brmerge1_i_fu_2577_p2;
wire   [13:0] ssdm_int_14_1024_0_true_V_write_assign_fu_2583_p3;
wire   [13:0] p_Val2_2_i_fu_2590_p3;
wire   [27:0] tmp_i2_fu_2605_p3;
wire   [31:0] tmp_12_i_fu_2616_p0;
wire   [31:0] tmp_11_i_fu_2612_p1;
wire   [27:0] tmp_14_i_fu_2621_p2;
wire   [31:0] tmp_12_i_fu_2616_p2;
wire   [31:0] tmp_14_i_cast_fu_2626_p1;
wire   [31:0] p_Val2_0_i_i121_in_i_fu_2630_p3;
wire   [31:0] tmp_18_i_fu_2641_p0;
wire   [27:0] tmp_20_i_fu_2646_p2;
wire   [31:0] tmp_18_i_fu_2641_p2;
wire   [31:0] tmp_20_i_cast_fu_2651_p1;
wire   [31:0] p_in_i_fu_2655_p3;
wire   [27:0] p_Val2_40_fu_2662_p1;
wire   [0:0] p_Val2_47_fu_2676_p0;
wire   [28:0] p_Val2_44_fu_2694_p0;
wire   [28:0] p_Val2_44_fu_2694_p1;
wire   [28:0] p_Val2_44_fu_2694_p2;
wire   [0:0] newsignbit_5_fu_2712_p3;
wire   [0:0] isneg_17_fu_2700_p3;
wire   [0:0] tmp_24_i_fu_2720_p2;
wire   [0:0] isneg_not_i_fu_2738_p2;
wire   [0:0] brmerge_i_i_i2_fu_2732_p2;
wire   [27:0] p_Val2_45_fu_2708_p1;
wire   [0:0] underflow_5_fu_2726_p2;
wire   [0:0] brmerge_i2_fu_2744_p2;
wire   [27:0] p_Val2_54_mux_i_fu_2750_p3;
wire   [27:0] p_Val2_i2_fu_2758_p3;
wire   [31:0] tmp_28_i_fu_2777_p0;
wire   [27:0] tmp_30_i_fu_2782_p2;
wire   [31:0] tmp_28_i_fu_2777_p2;
wire   [31:0] tmp_30_i_cast_fu_2786_p1;
wire   [31:0] p_Val2_0_i_i129_in_i_fu_2790_p3;
wire   [26:0] tmp_31_i_fu_2805_p3;
wire   [27:0] p_Val2_51_fu_2797_p1;
wire   [28:0] p_Val2_52_fu_2821_p0;
wire   [28:0] tmp_32_i_fu_2817_p1;
wire   [28:0] p_Val2_52_fu_2821_p2;
wire   [9:0] cos_adr_V_3_fu_2871_p2;
wire   [9:0] cos_adr_V_fu_2876_p3;
wire   [9:0] sin_adr_V_1_fu_2882_p3;
wire   [15:0] sin_out_V_4_i_cast_fu_2902_p1;
wire   [15:0] cos_out_V_4_i_cast_fu_2898_p1;
wire   [0:0] tmp_36_i_fu_2906_p2;
wire   [0:0] tmp_37_i_fu_2911_p2;
wire   [0:0] sel_tmp3_demorgan_i_fu_2933_p2;
wire   [0:0] tmp_38_i_fu_2916_p2;
wire   [0:0] sel_tmp3_i_fu_2939_p2;
wire   [0:0] sel_tmp4_i_fu_2945_p2;
wire   [15:0] cos_out_V_fu_2927_p2;
wire   [0:0] sel_tmp6_i_fu_2959_p2;
wire   [0:0] sel_tmp7_i_fu_2965_p2;
wire   [15:0] cos_out_V_1_fu_2951_p3;
wire   [15:0] sin_out_V_fu_2921_p2;
wire   [0:0] or_cond6_fu_2987_p2;
wire   [15:0] newSel8_fu_2979_p3;
wire   [15:0] newSel9_fu_2993_p3;
wire   [15:0] cos_out_V_6_fu_2971_p3;
wire   [15:0] sin_out_V_5_fu_3001_p3;
wire   [16:0] tmp_V_1_fu_3063_p1;
wire   [16:0] tmp_V_fu_3060_p1;
wire   [16:0] tmp_V_1_fu_3063_p2;
wire   [16:0] tmp_V_15_fu_3069_p2;
reg   [16:0] p_Result_33_fu_3076_p4;
wire   [31:0] p_Result_34_fu_3086_p3;
wire   [16:0] tmp_V_3_fu_3114_p1;
wire   [16:0] tmp_V_2_fu_3111_p1;
wire   [16:0] tmp_V_3_fu_3114_p2;
wire   [16:0] tmp_V_16_fu_3120_p2;
reg   [16:0] p_Result_37_fu_3127_p4;
wire   [31:0] p_Result_38_fu_3137_p3;
wire   [12:0] tmp_V_5_fu_3165_p1;
wire   [12:0] tmp_V_4_fu_3162_p1;
wire   [12:0] tmp_V_5_fu_3165_p2;
wire   [12:0] tmp_V_17_fu_3171_p2;
reg   [12:0] p_Result_41_fu_3178_p4;
wire   [31:0] p_Result_42_fu_3188_p3;
wire   [12:0] tmp_V_7_fu_3216_p1;
wire   [12:0] tmp_V_6_fu_3213_p1;
wire   [12:0] tmp_V_7_fu_3216_p2;
wire   [12:0] tmp_V_18_fu_3222_p2;
reg   [12:0] p_Result_45_fu_3229_p4;
wire   [31:0] p_Result_46_fu_3239_p3;
wire   [31:0] j_fu_3259_p2;
wire   [0:0] tmp_73_fu_3269_p2;
wire   [31:0] tmp_74_fu_3275_p2;
wire   [31:0] tmp_75_fu_3281_p3;
wire   [31:0] tmp_76_fu_3289_p2;
wire   [22:0] tmp_146_fu_3310_p1;
wire   [0:0] tmp_77_fu_3304_p2;
wire   [22:0] tmp_79_fu_3314_p2;
wire   [31:0] j_1_fu_3328_p2;
wire   [0:0] tmp_84_fu_3338_p2;
wire   [31:0] tmp_85_fu_3344_p2;
wire   [31:0] tmp_86_fu_3350_p3;
wire   [31:0] tmp_87_fu_3358_p2;
wire   [22:0] tmp_148_fu_3379_p1;
wire   [0:0] tmp_88_fu_3373_p2;
wire   [22:0] tmp_89_fu_3383_p2;
wire   [31:0] j_2_fu_3397_p2;
wire   [0:0] tmp_94_fu_3407_p2;
wire   [31:0] tmp_95_fu_3413_p2;
wire   [31:0] tmp_96_fu_3419_p3;
wire   [31:0] tmp_97_fu_3427_p2;
wire   [22:0] tmp_151_fu_3448_p1;
wire   [0:0] tmp_98_fu_3442_p2;
wire   [22:0] tmp_99_fu_3452_p2;
wire   [31:0] j_3_fu_3466_p2;
wire   [0:0] tmp_104_fu_3476_p2;
wire   [31:0] tmp_105_fu_3482_p2;
wire   [31:0] tmp_106_fu_3488_p3;
wire   [31:0] tmp_107_fu_3496_p2;
wire   [22:0] tmp_154_fu_3517_p1;
wire   [0:0] tmp_108_fu_3511_p2;
wire   [22:0] tmp_109_fu_3521_p2;
wire   [7:0] p_Repl2_2_trunc_fu_3535_p2;
wire   [22:0] man_V_18_fu_3552_p0;
wire   [22:0] man_V_18_fu_3552_p2;
wire   [31:0] p_Result_35_fu_3540_p4;
wire   [31:0] p_Result_36_fu_3557_p4;
wire   [7:0] p_Repl2_6_trunc_fu_3573_p2;
wire   [22:0] man_V_19_fu_3590_p0;
wire   [22:0] man_V_19_fu_3590_p2;
wire   [31:0] p_Result_39_fu_3578_p4;
wire   [31:0] p_Result_40_fu_3595_p4;
wire   [7:0] p_Repl2_10_trunc_fu_3611_p2;
wire   [22:0] man_V_20_fu_3628_p0;
wire   [22:0] man_V_20_fu_3628_p2;
wire   [31:0] p_Result_43_fu_3616_p4;
wire   [31:0] p_Result_44_fu_3633_p4;
wire   [7:0] p_Repl2_14_trunc_fu_3649_p2;
wire   [22:0] man_V_21_fu_3666_p0;
wire   [22:0] man_V_21_fu_3666_p2;
wire   [31:0] p_Result_47_fu_3654_p4;
wire   [31:0] p_Result_48_fu_3671_p4;
wire   [31:0] res_V_fu_3566_p3;
wire   [31:0] res_V_5_fu_3604_p3;
wire   [31:0] res_V_8_fu_3642_p3;
wire   [31:0] res_V_11_fu_3680_p3;
wire   [31:0] p_Repl2_11_fu_3687_p3;
wire   [31:0] p_Repl2_10_fu_3694_p3;
wire   [31:0] p_Repl2_9_fu_3701_p3;
wire   [31:0] p_Repl2_8_fu_3708_p3;
reg    grp_fu_460_ce;
reg    grp_fu_463_ce;
reg   [5:0] ap_NS_fsm;


qam_runner_cos_lut #(
    .DataWidth( 15 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
cos_lut_U(
    .clk( ap_clk ),
    .reset( ap_rst_n ),
    .address0( cos_lut_address0 ),
    .ce0( cos_lut_ce0 ),
    .q0( cos_lut_q0 ),
    .address1( cos_lut_address1 ),
    .ce1( cos_lut_ce1 ),
    .q1( cos_lut_q1 )
);

qam_runner_AXILiteS_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
qam_runner_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .ap_return( ap_return ),
    .sourceAddress( sourceAddress ),
    .sourceAddress_ap_vld( sourceAddress_ap_vld ),
    .destinationAddress( destinationAddress ),
    .destinationAddress_ap_vld( destinationAddress_ap_vld ),
    .iterations( iterations ),
    .iterations_ap_vld( iterations_ap_vld ),
    .control_in_qam( control_in_qam ),
    .control_in_qam_ap_vld( control_in_qam_ap_vld ),
    .control_in_lf_p( control_in_lf_p ),
    .control_in_lf_p_ap_vld( control_in_lf_p_ap_vld ),
    .control_in_lf_i( control_in_lf_i ),
    .control_in_lf_i_ap_vld( control_in_lf_i_ap_vld ),
    .control_in_lf_out_gain( control_in_lf_out_gain ),
    .control_in_lf_out_gain_ap_vld( control_in_lf_out_gain_ap_vld ),
    .control_in_reg_clr( control_in_reg_clr ),
    .control_in_reg_clr_ap_vld( control_in_reg_clr_ap_vld ),
    .control_in_reg_init( control_in_reg_init ),
    .control_in_reg_init_ap_vld( control_in_reg_init_ap_vld )
);

qam_runner_m_mm2s_ctl_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 2 ),
    .C_ID_WIDTH( C_M_AXI_M_MM2S_CTL_ID_WIDTH ),
    .C_ADDR_WIDTH( C_M_AXI_M_MM2S_CTL_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_M_AXI_M_MM2S_CTL_DATA_WIDTH ),
    .C_AWUSER_WIDTH( C_M_AXI_M_MM2S_CTL_AWUSER_WIDTH ),
    .C_ARUSER_WIDTH( C_M_AXI_M_MM2S_CTL_ARUSER_WIDTH ),
    .C_WUSER_WIDTH( C_M_AXI_M_MM2S_CTL_WUSER_WIDTH ),
    .C_RUSER_WIDTH( C_M_AXI_M_MM2S_CTL_RUSER_WIDTH ),
    .C_BUSER_WIDTH( C_M_AXI_M_MM2S_CTL_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_M_MM2S_CTL_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_M_MM2S_CTL_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_M_MM2S_CTL_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_M_MM2S_CTL_CACHE_VALUE ))
qam_runner_m_mm2s_ctl_m_axi_U(
    .AWVALID( m_axi_m_mm2s_ctl_AWVALID ),
    .AWREADY( m_axi_m_mm2s_ctl_AWREADY ),
    .AWADDR( m_axi_m_mm2s_ctl_AWADDR ),
    .AWID( m_axi_m_mm2s_ctl_AWID ),
    .AWLEN( m_axi_m_mm2s_ctl_AWLEN ),
    .AWSIZE( m_axi_m_mm2s_ctl_AWSIZE ),
    .AWBURST( m_axi_m_mm2s_ctl_AWBURST ),
    .AWLOCK( m_axi_m_mm2s_ctl_AWLOCK ),
    .AWCACHE( m_axi_m_mm2s_ctl_AWCACHE ),
    .AWPROT( m_axi_m_mm2s_ctl_AWPROT ),
    .AWQOS( m_axi_m_mm2s_ctl_AWQOS ),
    .AWREGION( m_axi_m_mm2s_ctl_AWREGION ),
    .AWUSER( m_axi_m_mm2s_ctl_AWUSER ),
    .WVALID( m_axi_m_mm2s_ctl_WVALID ),
    .WREADY( m_axi_m_mm2s_ctl_WREADY ),
    .WDATA( m_axi_m_mm2s_ctl_WDATA ),
    .WSTRB( m_axi_m_mm2s_ctl_WSTRB ),
    .WLAST( m_axi_m_mm2s_ctl_WLAST ),
    .WID( m_axi_m_mm2s_ctl_WID ),
    .WUSER( m_axi_m_mm2s_ctl_WUSER ),
    .ARVALID( m_axi_m_mm2s_ctl_ARVALID ),
    .ARREADY( m_axi_m_mm2s_ctl_ARREADY ),
    .ARADDR( m_axi_m_mm2s_ctl_ARADDR ),
    .ARID( m_axi_m_mm2s_ctl_ARID ),
    .ARLEN( m_axi_m_mm2s_ctl_ARLEN ),
    .ARSIZE( m_axi_m_mm2s_ctl_ARSIZE ),
    .ARBURST( m_axi_m_mm2s_ctl_ARBURST ),
    .ARLOCK( m_axi_m_mm2s_ctl_ARLOCK ),
    .ARCACHE( m_axi_m_mm2s_ctl_ARCACHE ),
    .ARPROT( m_axi_m_mm2s_ctl_ARPROT ),
    .ARQOS( m_axi_m_mm2s_ctl_ARQOS ),
    .ARREGION( m_axi_m_mm2s_ctl_ARREGION ),
    .ARUSER( m_axi_m_mm2s_ctl_ARUSER ),
    .RVALID( m_axi_m_mm2s_ctl_RVALID ),
    .RREADY( m_axi_m_mm2s_ctl_RREADY ),
    .RDATA( m_axi_m_mm2s_ctl_RDATA ),
    .RLAST( m_axi_m_mm2s_ctl_RLAST ),
    .RID( m_axi_m_mm2s_ctl_RID ),
    .RUSER( m_axi_m_mm2s_ctl_RUSER ),
    .RRESP( m_axi_m_mm2s_ctl_RRESP ),
    .BVALID( m_axi_m_mm2s_ctl_BVALID ),
    .BREADY( m_axi_m_mm2s_ctl_BREADY ),
    .BRESP( m_axi_m_mm2s_ctl_BRESP ),
    .BID( m_axi_m_mm2s_ctl_BID ),
    .BUSER( m_axi_m_mm2s_ctl_BUSER ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .I_ARVALID( m_mm2s_ctl_ARVALID ),
    .I_ARREADY( m_mm2s_ctl_ARREADY ),
    .I_ARADDR( m_mm2s_ctl_ARADDR ),
    .I_ARID( m_mm2s_ctl_ARID ),
    .I_ARLEN( m_mm2s_ctl_ARLEN ),
    .I_ARSIZE( m_mm2s_ctl_ARSIZE ),
    .I_ARLOCK( m_mm2s_ctl_ARLOCK ),
    .I_ARCACHE( m_mm2s_ctl_ARCACHE ),
    .I_ARQOS( m_mm2s_ctl_ARQOS ),
    .I_ARPROT( m_mm2s_ctl_ARPROT ),
    .I_ARUSER( m_mm2s_ctl_ARUSER ),
    .I_ARBURST( m_mm2s_ctl_ARBURST ),
    .I_ARREGION( m_mm2s_ctl_ARREGION ),
    .I_RVALID( m_mm2s_ctl_RVALID ),
    .I_RREADY( m_mm2s_ctl_RREADY ),
    .I_RDATA( m_mm2s_ctl_RDATA ),
    .I_RID( m_mm2s_ctl_RID ),
    .I_RUSER( m_mm2s_ctl_RUSER ),
    .I_RRESP( m_mm2s_ctl_RRESP ),
    .I_RLAST( m_mm2s_ctl_RLAST ),
    .I_AWVALID( m_mm2s_ctl_AWVALID ),
    .I_AWREADY( m_mm2s_ctl_AWREADY ),
    .I_AWADDR( m_mm2s_ctl_AWADDR ),
    .I_AWID( m_mm2s_ctl_AWID ),
    .I_AWLEN( m_mm2s_ctl_AWLEN ),
    .I_AWSIZE( m_mm2s_ctl_AWSIZE ),
    .I_AWLOCK( m_mm2s_ctl_AWLOCK ),
    .I_AWCACHE( m_mm2s_ctl_AWCACHE ),
    .I_AWQOS( m_mm2s_ctl_AWQOS ),
    .I_AWPROT( m_mm2s_ctl_AWPROT ),
    .I_AWUSER( m_mm2s_ctl_AWUSER ),
    .I_AWBURST( m_mm2s_ctl_AWBURST ),
    .I_AWREGION( m_mm2s_ctl_AWREGION ),
    .I_WVALID( m_mm2s_ctl_WVALID ),
    .I_WREADY( m_mm2s_ctl_WREADY ),
    .I_WDATA( m_mm2s_ctl_WDATA ),
    .I_WID( m_mm2s_ctl_WID ),
    .I_WUSER( m_mm2s_ctl_WUSER ),
    .I_WLAST( m_mm2s_ctl_WLAST ),
    .I_WSTRB( m_mm2s_ctl_WSTRB ),
    .I_BVALID( m_mm2s_ctl_BVALID ),
    .I_BREADY( m_mm2s_ctl_BREADY ),
    .I_BRESP( m_mm2s_ctl_BRESP ),
    .I_BID( m_mm2s_ctl_BID ),
    .I_BUSER( m_mm2s_ctl_BUSER )
);

qam_runner_m_s2mm_ctl_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 2 ),
    .C_ID_WIDTH( C_M_AXI_M_S2MM_CTL_ID_WIDTH ),
    .C_ADDR_WIDTH( C_M_AXI_M_S2MM_CTL_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_M_AXI_M_S2MM_CTL_DATA_WIDTH ),
    .C_AWUSER_WIDTH( C_M_AXI_M_S2MM_CTL_AWUSER_WIDTH ),
    .C_ARUSER_WIDTH( C_M_AXI_M_S2MM_CTL_ARUSER_WIDTH ),
    .C_WUSER_WIDTH( C_M_AXI_M_S2MM_CTL_WUSER_WIDTH ),
    .C_RUSER_WIDTH( C_M_AXI_M_S2MM_CTL_RUSER_WIDTH ),
    .C_BUSER_WIDTH( C_M_AXI_M_S2MM_CTL_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_M_S2MM_CTL_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_M_S2MM_CTL_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_M_S2MM_CTL_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_M_S2MM_CTL_CACHE_VALUE ))
qam_runner_m_s2mm_ctl_m_axi_U(
    .AWVALID( m_axi_m_s2mm_ctl_AWVALID ),
    .AWREADY( m_axi_m_s2mm_ctl_AWREADY ),
    .AWADDR( m_axi_m_s2mm_ctl_AWADDR ),
    .AWID( m_axi_m_s2mm_ctl_AWID ),
    .AWLEN( m_axi_m_s2mm_ctl_AWLEN ),
    .AWSIZE( m_axi_m_s2mm_ctl_AWSIZE ),
    .AWBURST( m_axi_m_s2mm_ctl_AWBURST ),
    .AWLOCK( m_axi_m_s2mm_ctl_AWLOCK ),
    .AWCACHE( m_axi_m_s2mm_ctl_AWCACHE ),
    .AWPROT( m_axi_m_s2mm_ctl_AWPROT ),
    .AWQOS( m_axi_m_s2mm_ctl_AWQOS ),
    .AWREGION( m_axi_m_s2mm_ctl_AWREGION ),
    .AWUSER( m_axi_m_s2mm_ctl_AWUSER ),
    .WVALID( m_axi_m_s2mm_ctl_WVALID ),
    .WREADY( m_axi_m_s2mm_ctl_WREADY ),
    .WDATA( m_axi_m_s2mm_ctl_WDATA ),
    .WSTRB( m_axi_m_s2mm_ctl_WSTRB ),
    .WLAST( m_axi_m_s2mm_ctl_WLAST ),
    .WID( m_axi_m_s2mm_ctl_WID ),
    .WUSER( m_axi_m_s2mm_ctl_WUSER ),
    .ARVALID( m_axi_m_s2mm_ctl_ARVALID ),
    .ARREADY( m_axi_m_s2mm_ctl_ARREADY ),
    .ARADDR( m_axi_m_s2mm_ctl_ARADDR ),
    .ARID( m_axi_m_s2mm_ctl_ARID ),
    .ARLEN( m_axi_m_s2mm_ctl_ARLEN ),
    .ARSIZE( m_axi_m_s2mm_ctl_ARSIZE ),
    .ARBURST( m_axi_m_s2mm_ctl_ARBURST ),
    .ARLOCK( m_axi_m_s2mm_ctl_ARLOCK ),
    .ARCACHE( m_axi_m_s2mm_ctl_ARCACHE ),
    .ARPROT( m_axi_m_s2mm_ctl_ARPROT ),
    .ARQOS( m_axi_m_s2mm_ctl_ARQOS ),
    .ARREGION( m_axi_m_s2mm_ctl_ARREGION ),
    .ARUSER( m_axi_m_s2mm_ctl_ARUSER ),
    .RVALID( m_axi_m_s2mm_ctl_RVALID ),
    .RREADY( m_axi_m_s2mm_ctl_RREADY ),
    .RDATA( m_axi_m_s2mm_ctl_RDATA ),
    .RLAST( m_axi_m_s2mm_ctl_RLAST ),
    .RID( m_axi_m_s2mm_ctl_RID ),
    .RUSER( m_axi_m_s2mm_ctl_RUSER ),
    .RRESP( m_axi_m_s2mm_ctl_RRESP ),
    .BVALID( m_axi_m_s2mm_ctl_BVALID ),
    .BREADY( m_axi_m_s2mm_ctl_BREADY ),
    .BRESP( m_axi_m_s2mm_ctl_BRESP ),
    .BID( m_axi_m_s2mm_ctl_BID ),
    .BUSER( m_axi_m_s2mm_ctl_BUSER ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .I_ARVALID( m_s2mm_ctl_ARVALID ),
    .I_ARREADY( m_s2mm_ctl_ARREADY ),
    .I_ARADDR( m_s2mm_ctl_ARADDR ),
    .I_ARID( m_s2mm_ctl_ARID ),
    .I_ARLEN( m_s2mm_ctl_ARLEN ),
    .I_ARSIZE( m_s2mm_ctl_ARSIZE ),
    .I_ARLOCK( m_s2mm_ctl_ARLOCK ),
    .I_ARCACHE( m_s2mm_ctl_ARCACHE ),
    .I_ARQOS( m_s2mm_ctl_ARQOS ),
    .I_ARPROT( m_s2mm_ctl_ARPROT ),
    .I_ARUSER( m_s2mm_ctl_ARUSER ),
    .I_ARBURST( m_s2mm_ctl_ARBURST ),
    .I_ARREGION( m_s2mm_ctl_ARREGION ),
    .I_RVALID( m_s2mm_ctl_RVALID ),
    .I_RREADY( m_s2mm_ctl_RREADY ),
    .I_RDATA( m_s2mm_ctl_RDATA ),
    .I_RID( m_s2mm_ctl_RID ),
    .I_RUSER( m_s2mm_ctl_RUSER ),
    .I_RRESP( m_s2mm_ctl_RRESP ),
    .I_RLAST( m_s2mm_ctl_RLAST ),
    .I_AWVALID( m_s2mm_ctl_AWVALID ),
    .I_AWREADY( m_s2mm_ctl_AWREADY ),
    .I_AWADDR( m_s2mm_ctl_AWADDR ),
    .I_AWID( m_s2mm_ctl_AWID ),
    .I_AWLEN( m_s2mm_ctl_AWLEN ),
    .I_AWSIZE( m_s2mm_ctl_AWSIZE ),
    .I_AWLOCK( m_s2mm_ctl_AWLOCK ),
    .I_AWCACHE( m_s2mm_ctl_AWCACHE ),
    .I_AWQOS( m_s2mm_ctl_AWQOS ),
    .I_AWPROT( m_s2mm_ctl_AWPROT ),
    .I_AWUSER( m_s2mm_ctl_AWUSER ),
    .I_AWBURST( m_s2mm_ctl_AWBURST ),
    .I_AWREGION( m_s2mm_ctl_AWREGION ),
    .I_WVALID( m_s2mm_ctl_WVALID ),
    .I_WREADY( m_s2mm_ctl_WREADY ),
    .I_WDATA( m_s2mm_ctl_WDATA ),
    .I_WID( m_s2mm_ctl_WID ),
    .I_WUSER( m_s2mm_ctl_WUSER ),
    .I_WLAST( m_s2mm_ctl_WLAST ),
    .I_WSTRB( m_s2mm_ctl_WSTRB ),
    .I_BVALID( m_s2mm_ctl_BVALID ),
    .I_BREADY( m_s2mm_ctl_BREADY ),
    .I_BRESP( m_s2mm_ctl_BRESP ),
    .I_BID( m_s2mm_ctl_BID ),
    .I_BUSER( m_s2mm_ctl_BUSER )
);

qam_runner_fpext_32ns_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
qam_runner_fpext_32ns_64_3_U1(
    .clk( ap_clk ),
    .reset( ap_rst_n ),
    .din0( grp_fu_460_p0 ),
    .ce( grp_fu_460_ce ),
    .dout( grp_fu_460_p1 )
);

qam_runner_fpext_32ns_64_3 #(
    .ID( 2 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
qam_runner_fpext_32ns_64_3_U2(
    .clk( ap_clk ),
    .reset( ap_rst_n ),
    .din0( grp_fu_463_p0 ),
    .ce( grp_fu_463_ce ),
    .dout( grp_fu_463_p1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n == 1'b0) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_m_mm2s_ctl_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_m_mm2s_ctl_ARREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_m_mm2s_ctl_ARREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~((ap_start == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY))) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_467)) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_947)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522) & (ap_ST_st13_fsm_12 == ap_CS_fsm)))) begin
            ap_reg_ioackin_m_mm2s_ctl_ARREADY <= ap_const_logic_0;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_1 == m_mm2s_ctl_ARREADY) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_logic_1 == m_mm2s_ctl_ARREADY) & ~ap_sig_bdd_467) | (~ap_sig_bdd_522 & (ap_const_logic_1 == m_mm2s_ctl_ARREADY) & (ap_ST_st7_fsm_6 == ap_CS_fsm)) | ((ap_const_logic_1 == m_mm2s_ctl_ARREADY) & (ap_ST_st10_fsm_9 == ap_CS_fsm) & ~ap_sig_bdd_947) | (~ap_sig_bdd_522 & (ap_const_logic_1 == m_mm2s_ctl_ARREADY) & (ap_ST_st13_fsm_12 == ap_CS_fsm)))) begin
            ap_reg_ioackin_m_mm2s_ctl_ARREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_m_mm2s_ctl_AWREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_m_mm2s_ctl_AWREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_m_mm2s_ctl_AWREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st6_fsm_5 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st12_fsm_11 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st15_fsm_14 == ap_CS_fsm)))) begin
            ap_reg_ioackin_m_mm2s_ctl_AWREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == m_mm2s_ctl_AWREADY) & (ap_ST_st3_fsm_2 == ap_CS_fsm)) | ((ap_const_logic_1 == m_mm2s_ctl_AWREADY) & (ap_ST_st6_fsm_5 == ap_CS_fsm)) | ((ap_const_logic_1 == m_mm2s_ctl_AWREADY) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | ((ap_const_logic_1 == m_mm2s_ctl_AWREADY) & (ap_ST_st12_fsm_11 == ap_CS_fsm)) | ((ap_const_logic_1 == m_mm2s_ctl_AWREADY) & (ap_ST_st15_fsm_14 == ap_CS_fsm)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_1 == m_mm2s_ctl_AWREADY)) | ((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_1 == m_mm2s_ctl_AWREADY)))) begin
            ap_reg_ioackin_m_mm2s_ctl_AWREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_m_mm2s_ctl_WREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_m_mm2s_ctl_WREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_m_mm2s_ctl_WREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st6_fsm_5 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st12_fsm_11 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st15_fsm_14 == ap_CS_fsm)))) begin
            ap_reg_ioackin_m_mm2s_ctl_WREADY <= ap_const_logic_0;
        end else if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == m_mm2s_ctl_WREADY)) | ((ap_const_logic_1 == m_mm2s_ctl_WREADY) & (ap_ST_st6_fsm_5 == ap_CS_fsm)) | ((ap_const_logic_1 == m_mm2s_ctl_WREADY) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | ((ap_const_logic_1 == m_mm2s_ctl_WREADY) & (ap_ST_st12_fsm_11 == ap_CS_fsm)) | ((ap_const_logic_1 == m_mm2s_ctl_WREADY) & (ap_ST_st15_fsm_14 == ap_CS_fsm)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_1 == m_mm2s_ctl_WREADY)) | ((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_1 == m_mm2s_ctl_WREADY)))) begin
            ap_reg_ioackin_m_mm2s_ctl_WREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_m_s2mm_ctl_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_m_s2mm_ctl_ARREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_m_s2mm_ctl_ARREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~((ap_start == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY))) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_467)) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_947)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522) & (ap_ST_st13_fsm_12 == ap_CS_fsm)))) begin
            ap_reg_ioackin_m_s2mm_ctl_ARREADY <= ap_const_logic_0;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (ap_const_logic_1 == m_s2mm_ctl_ARREADY)) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~ap_sig_bdd_467 & (ap_const_logic_1 == m_s2mm_ctl_ARREADY)) | (~ap_sig_bdd_522 & (ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_ARREADY)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~ap_sig_bdd_947 & (ap_const_logic_1 == m_s2mm_ctl_ARREADY)) | (~ap_sig_bdd_522 & (ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_ARREADY)))) begin
            ap_reg_ioackin_m_s2mm_ctl_ARREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_m_s2mm_ctl_AWREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_m_s2mm_ctl_AWREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_m_s2mm_ctl_AWREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st6_fsm_5 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st12_fsm_11 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st15_fsm_14 == ap_CS_fsm)))) begin
            ap_reg_ioackin_m_s2mm_ctl_AWREADY <= ap_const_logic_0;
        end else if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_AWREADY)) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_AWREADY)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_AWREADY)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_AWREADY)) | ((ap_ST_st15_fsm_14 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_AWREADY)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_1 == m_s2mm_ctl_AWREADY)) | ((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_1 == m_s2mm_ctl_AWREADY)))) begin
            ap_reg_ioackin_m_s2mm_ctl_AWREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_m_s2mm_ctl_WREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_m_s2mm_ctl_WREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_m_s2mm_ctl_WREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st6_fsm_5 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st12_fsm_11 == ap_CS_fsm)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st15_fsm_14 == ap_CS_fsm)))) begin
            ap_reg_ioackin_m_s2mm_ctl_WREADY <= ap_const_logic_0;
        end else if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_WREADY)) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_WREADY)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_WREADY)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_WREADY)) | ((ap_ST_st15_fsm_14 == ap_CS_fsm) & (ap_const_logic_1 == m_s2mm_ctl_WREADY)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_1 == m_s2mm_ctl_WREADY)) | ((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_1 == m_s2mm_ctl_WREADY)))) begin
            ap_reg_ioackin_m_s2mm_ctl_WREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_s_out_V_V_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_s_out_V_V_TREADY
    if (ap_rst_n == 1'b0) begin
        ap_reg_ioackin_s_out_V_V_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st38_fsm_37 == ap_CS_fsm)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_s_out_V_V_TREADY)) begin
                ap_reg_ioackin_s_out_V_V_TREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == s_out_V_V_TREADY)) begin
                ap_reg_ioackin_s_out_V_V_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// control_in_lf_i_ap_vld_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_lf_i_ap_vld_preg
    if (ap_rst_n == 1'b0) begin
        control_in_lf_i_ap_vld_preg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
            control_in_lf_i_ap_vld_preg <= ap_const_logic_0;
        end else if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_lf_i_ap_vld))) begin
            control_in_lf_i_ap_vld_preg <= control_in_lf_i_ap_vld;
        end
    end
end

/// control_in_lf_i_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_lf_i_preg
    if (ap_rst_n == 1'b0) begin
        control_in_lf_i_preg <= ap_const_lv8_0;
    end else begin
        if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_lf_i_ap_vld))) begin
            control_in_lf_i_preg <= control_in_lf_i;
        end
    end
end

/// control_in_lf_out_gain_ap_vld_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_lf_out_gain_ap_vld_preg
    if (ap_rst_n == 1'b0) begin
        control_in_lf_out_gain_ap_vld_preg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
            control_in_lf_out_gain_ap_vld_preg <= ap_const_logic_0;
        end else if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_lf_out_gain_ap_vld))) begin
            control_in_lf_out_gain_ap_vld_preg <= control_in_lf_out_gain_ap_vld;
        end
    end
end

/// control_in_lf_out_gain_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_lf_out_gain_preg
    if (ap_rst_n == 1'b0) begin
        control_in_lf_out_gain_preg <= ap_const_lv8_0;
    end else begin
        if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_lf_out_gain_ap_vld))) begin
            control_in_lf_out_gain_preg <= control_in_lf_out_gain;
        end
    end
end

/// control_in_lf_p_ap_vld_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_lf_p_ap_vld_preg
    if (ap_rst_n == 1'b0) begin
        control_in_lf_p_ap_vld_preg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
            control_in_lf_p_ap_vld_preg <= ap_const_logic_0;
        end else if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_lf_p_ap_vld))) begin
            control_in_lf_p_ap_vld_preg <= control_in_lf_p_ap_vld;
        end
    end
end

/// control_in_lf_p_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_lf_p_preg
    if (ap_rst_n == 1'b0) begin
        control_in_lf_p_preg <= ap_const_lv8_0;
    end else begin
        if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_lf_p_ap_vld))) begin
            control_in_lf_p_preg <= control_in_lf_p;
        end
    end
end

/// control_in_reg_clr_ap_vld_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_reg_clr_ap_vld_preg
    if (ap_rst_n == 1'b0) begin
        control_in_reg_clr_ap_vld_preg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
            control_in_reg_clr_ap_vld_preg <= ap_const_logic_0;
        end else if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_reg_clr_ap_vld))) begin
            control_in_reg_clr_ap_vld_preg <= control_in_reg_clr_ap_vld;
        end
    end
end

/// control_in_reg_clr_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_reg_clr_preg
    if (ap_rst_n == 1'b0) begin
        control_in_reg_clr_preg <= ap_const_logic_0;
    end else begin
        if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_reg_clr_ap_vld))) begin
            control_in_reg_clr_preg <= control_in_reg_clr;
        end
    end
end

/// control_in_reg_init_ap_vld_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_reg_init_ap_vld_preg
    if (ap_rst_n == 1'b0) begin
        control_in_reg_init_ap_vld_preg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
            control_in_reg_init_ap_vld_preg <= ap_const_logic_0;
        end else if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_reg_init_ap_vld))) begin
            control_in_reg_init_ap_vld_preg <= control_in_reg_init_ap_vld;
        end
    end
end

/// control_in_reg_init_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_control_in_reg_init_preg
    if (ap_rst_n == 1'b0) begin
        control_in_reg_init_preg <= ap_const_lv32_0;
    end else begin
        if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == control_in_reg_init_ap_vld))) begin
            control_in_reg_init_preg <= control_in_reg_init;
        end
    end
end

/// destinationAddress_ap_vld_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_destinationAddress_ap_vld_preg
    if (ap_rst_n == 1'b0) begin
        destinationAddress_ap_vld_preg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
            destinationAddress_ap_vld_preg <= ap_const_logic_0;
        end else if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == destinationAddress_ap_vld))) begin
            destinationAddress_ap_vld_preg <= destinationAddress_ap_vld;
        end
    end
end

/// destinationAddress_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_destinationAddress_preg
    if (ap_rst_n == 1'b0) begin
        destinationAddress_preg <= ap_const_lv32_0;
    end else begin
        if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == destinationAddress_ap_vld))) begin
            destinationAddress_preg <= destinationAddress;
        end
    end
end

/// iterations_ap_vld_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_iterations_ap_vld_preg
    if (ap_rst_n == 1'b0) begin
        iterations_ap_vld_preg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
            iterations_ap_vld_preg <= ap_const_logic_0;
        end else if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == iterations_ap_vld))) begin
            iterations_ap_vld_preg <= iterations_ap_vld;
        end
    end
end

/// iterations_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_iterations_preg
    if (ap_rst_n == 1'b0) begin
        iterations_preg <= ap_const_lv32_0;
    end else begin
        if ((~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)) & (ap_const_logic_1 == iterations_ap_vld))) begin
            iterations_preg <= iterations;
        end
    end
end

/// sourceAddress_ap_vld_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_sourceAddress_ap_vld_preg
    if (ap_rst_n == 1'b0) begin
        sourceAddress_ap_vld_preg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
            sourceAddress_ap_vld_preg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == sourceAddress_ap_vld) & ~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)))) begin
            sourceAddress_ap_vld_preg <= sourceAddress_ap_vld;
        end
    end
end

/// sourceAddress_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_sourceAddress_preg
    if (ap_rst_n == 1'b0) begin
        sourceAddress_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == sourceAddress_ap_vld) & ~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)))) begin
            sourceAddress_preg <= sourceAddress;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st38_fsm_37 == ap_CS_fsm) & ~(ap_const_logic_0 == ap_sig_ioackin_s_out_V_V_TREADY))) begin
        i_reg_448 <= i_1_reg_3930;
    end else if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522)) begin
        i_reg_448 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st21_fsm_20 == ap_CS_fsm)) begin
        F2_1_reg_4105 <= F2_1_fu_1242_p2;
        F2_reg_4080 <= F2_fu_1196_p2;
        isneg_1_reg_4088 <= ireg_V_1_fu_1202_p1[ap_const_lv32_3F];
        isneg_reg_4063 <= ireg_V_fu_1156_p1[ap_const_lv32_3F];
        tmp_112_reg_4094 <= tmp_112_fu_1232_p1;
        tmp_24_reg_4099 <= tmp_24_fu_1236_p2;
        tmp_62_reg_4069 <= tmp_62_fu_1186_p1;
        tmp_8_reg_4074 <= tmp_8_fu_1190_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(control_in_reg_clr_read_read_fu_359_p2 == ap_const_lv1_0) & (ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
        F2_2_reg_3960 <= F2_2_fu_863_p2;
        isneg_12_reg_3945 <= ireg_V_2_reg_3869[ap_const_lv32_3F];
        man_V_17_reg_3952 <= man_V_17_fu_855_p3;
        sh_amt_2_reg_3972 <= sh_amt_2_fu_887_p3;
        tmp_119_reg_3985 <= tmp_119_fu_901_p1;
        tmp_40_reg_3967 <= tmp_40_fu_869_p2;
        tmp_43_reg_3979 <= tmp_43_fu_895_p2;
        tmp_57_reg_3991 <= tmp_57_fu_905_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(control_in_reg_clr_read_read_fu_359_p2 == ap_const_lv1_0) & (ap_ST_st20_fsm_19 == ap_CS_fsm))) begin
        Range1_all_ones_1_reg_4019 <= Range1_all_ones_1_fu_1068_p2;
        Range1_all_zeros_1_reg_4047 <= Range1_all_zeros_1_fu_1121_p2;
        Range2_all_ones_reg_4037 <= Range2_all_ones_fu_1103_p2;
        rev_reg_4014 <= rev_fu_1043_p2;
        sel_tmp25_reg_3997 <= sel_tmp25_fu_991_p3;
        sel_tmp27_reg_4002 <= sel_tmp27_fu_1005_p2;
        tmp2_reg_4052 <= tmp2_fu_1132_p2;
        tmp3_reg_4058 <= tmp3_fu_1150_p2;
        tmp_127_reg_4026 <= pos2_fu_1020_p2[ap_const_lv32_B];
        tmp_58_reg_4007 <= tmp_58_fu_1029_p2;
        tmp_61_reg_4031 <= tmp_61_fu_1082_p2;
        tmp_64_reg_4042 <= tmp_64_fu_1109_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st25_fsm_24 == ap_CS_fsm)) begin
        brmerge39_i1_i_reg_4281 <= brmerge39_i1_i_fu_2092_p2;
        brmerge39_i_i_reg_4306 <= brmerge39_i_i_fu_2158_p2;
        brmerge_i1_i_reg_4276 <= brmerge_i1_i_fu_2074_p2;
        brmerge_i_i1_reg_4301 <= brmerge_i_i1_fu_2140_p2;
        isneg_13_reg_4261 <= p_Val2_7_fu_1986_p2[ap_const_lv32_1A];
        isneg_14_reg_4286 <= p_Val2_10_fu_2016_p2[ap_const_lv32_1A];
        p_Val2_12_reg_4270 <= {{p_Val2_7_fu_1986_p2[ap_const_lv32_18 : ap_const_lv32_14]}};
        p_Val2_14_reg_4295 <= {{p_Val2_10_fu_2016_p2[ap_const_lv32_18 : ap_const_lv32_14]}};
        p_Val2_61_reg_4247 <= {{p_Val2_7_fu_1986_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
        p_Val2_63_reg_4254 <= {{p_Val2_10_fu_2016_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(control_in_reg_clr_read_read_fu_359_p2 == ap_const_lv1_0) & (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        brmerge92_demorgan_i_reg_4132 <= brmerge92_demorgan_i_fu_1381_p2;
        neg_src_reg_4120 <= neg_src_fu_1353_p2;
        overflow_reg_4126 <= overflow_fu_1375_p2;
        p_Val2_4_reg_4113 <= p_Val2_4_fu_1255_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~ap_sig_bdd_590)) begin
        i_1_reg_3930 <= i_1_fu_772_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st31_fsm_30 == ap_CS_fsm)) begin
        i_reg_V <= p_Val2_47_fu_2676_p3;
        p_Val2_42_reg_4384 <= p_Val2_42_fu_2670_p2;
        p_Val2_43_reg_4379 <= p_Val2_43_fu_2637_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522 & ~(control_in_reg_clr_read_read_fu_359_p2 == ap_const_lv1_0))) begin
        ireg_V_2_reg_3869 <= ireg_V_2_fu_652_p1;
        p_this_assign_reg_3882[27] <= p_this_assign_fu_666_p3[27];
        sel_tmp34_reg_3887 <= sel_tmp34_fu_674_p2;
        tmp_39_reg_3876 <= tmp_39_fu_660_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522)) begin
        isNeg_1_reg_3902 <= sh_assign_1_fu_707_p2[ap_const_lv32_8];
        sh_assign_3_i_cast1_reg_3907 <= sh_assign_3_i_cast1_fu_735_p1;
        sh_assign_3_i_cast_reg_3912 <= sh_assign_3_i_cast_fu_739_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_467))) begin
        isNeg_2_reg_3793 <= control_in_lf_out_gain_in_sig[ap_const_lv32_7];
        isNeg_reg_3787 <= control_in_lf_p_in_sig[ap_const_lv32_7];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st27_fsm_26 == ap_CS_fsm)) begin
        isneg_15_reg_4321 <= p_Val2_32_fu_2314_p2[ap_const_lv32_14];
        newsignbit_3_reg_4333 <= p_Val2_32_fu_2314_p2[ap_const_lv32_12];
        p_Result_i1_reg_4339 <= {{p_Val2_32_fu_2314_p2[ap_const_lv32_14 : ap_const_lv32_13]}};
        p_Val2_35_reg_4327 <= {{p_Val2_32_fu_2314_p2[ap_const_lv32_12 : ap_const_lv32_5]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st29_fsm_28 == ap_CS_fsm)) begin
        isneg_16_reg_4350 <= p_Val2_37_fu_2481_p2[ap_const_lv32_14];
        newsignbit_4_reg_4362 <= p_Val2_37_fu_2481_p2[ap_const_lv32_12];
        p_Val2_38_reg_4356 <= {{p_Val2_37_fu_2481_p2[ap_const_lv32_12 : ap_const_lv32_5]}};
        tmp_69_reg_4368 <= {{p_Val2_37_fu_2481_p2[ap_const_lv32_14 : ap_const_lv32_13]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st35_fsm_34 == ap_CS_fsm)) begin
        isneg_18_reg_4437 <= cos_out_V_6_fu_2971_p3[ap_const_lv32_F];
        isneg_19_reg_4444 <= sin_out_V_5_fu_3001_p3[ap_const_lv32_F];
        p_Val2_1_fu_326 <= {{sin_out_V_5_fu_3001_p3[ap_const_lv32_F : ap_const_lv32_4]}};
        p_Val2_65_reg_4425 <= {{cos_out_V_6_fu_2971_p3[ap_const_lv32_F : ap_const_lv32_4]}};
        p_Val2_67_reg_4431 <= {{sin_out_V_5_fu_3001_p3[ap_const_lv32_F : ap_const_lv32_4]}};
        p_Val2_s_fu_322 <= {{cos_out_V_6_fu_2971_p3[ap_const_lv32_F : ap_const_lv32_4]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st33_fsm_32 == ap_CS_fsm)) begin
        msb_V_reg_4395 <= {{p_Val2_52_fu_2821_p2[ap_const_lv32_1A : ap_const_lv32_19]}};
        phase_angle_V <= {{p_Val2_52_fu_2821_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
        sin_adr_V_reg_4408 <= {{p_Val2_52_fu_2821_p2[ap_const_lv32_18 : ap_const_lv32_F]}};
        tmp_144_reg_4402 <= p_Val2_52_fu_2821_p2[ap_const_lv32_19];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st23_fsm_22 == ap_CS_fsm)) begin
        newSel3_reg_4217 <= newSel3_fu_1834_p3;
        newSel7_reg_4222 <= newSel7_fu_1900_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(control_in_reg_clr_read_read_fu_359_p2 == ap_const_lv1_0) & (ap_ST_st22_fsm_21 == ap_CS_fsm))) begin
        p_5_reg_4212 <= p_5_fu_1768_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st37_fsm_36 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_91_reg_4493))) begin
        p_Result_20_reg_4570 <= p_Result_20_fu_3433_p4;
        tmp_114_cast_reg_4575 <= tmp_114_cast_fu_3458_p3;
        tmp_93_reg_4565 <= tmp_93_fu_3402_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st37_fsm_36 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_101_reg_4514))) begin
        p_Result_25_reg_4585 <= p_Result_25_fu_3502_p4;
        tmp_103_reg_4580 <= tmp_103_fu_3471_p2;
        tmp_127_cast_reg_4590 <= tmp_127_cast_fu_3527_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st37_fsm_36 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_81_reg_4472))) begin
        p_Result_8_reg_4555 <= p_Result_8_fu_3364_p4;
        tmp_101_cast_reg_4560 <= tmp_101_cast_fu_3389_p3;
        tmp_83_reg_4550 <= tmp_83_fu_3333_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st37_fsm_36 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_70_reg_4451))) begin
        p_Result_s_reg_4540 <= p_Result_s_fu_3295_p4;
        tmp_72_reg_4535 <= tmp_72_fu_3264_p2;
        tmp_88_cast_reg_4545 <= tmp_88_cast_fu_3320_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st28_fsm_27 == ap_CS_fsm)) begin
        p_Val2_36_reg_4345 <= p_Val2_36_fu_2430_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st24_fsm_23 == ap_CS_fsm)) begin
        p_Val2_6_reg_4227 <= p_Val2_6_fu_1934_p2;
        p_Val2_9_reg_4237 <= p_Val2_9_fu_1956_p2;
        tmp_111_reg_4242 <= {{p_Val2_8_fu_1950_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
        tmp_68_reg_4232 <= {{p_Val2_5_fu_1921_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st30_fsm_29 == ap_CS_fsm)) begin
        ph_est_V_reg_4374 <= ph_est_V_fu_2597_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st22_fsm_21 == ap_CS_fsm)) begin
        sel_tmp10_reg_4196 <= sel_tmp10_fu_1658_p2;
        sel_tmp12_reg_4201 <= sel_tmp12_fu_1675_p2;
        sel_tmp15_reg_4207 <= sel_tmp15_fu_1693_p2;
        sel_tmp2_reg_4159 <= sel_tmp2_fu_1502_p2;
        sel_tmp3_reg_4170 <= sel_tmp3_fu_1537_p2;
        sel_tmp7_reg_4164 <= sel_tmp7_fu_1519_p2;
        tmp_100_reg_4154 <= tmp_100_fu_1493_p1;
        tmp_113_reg_4175 <= tmp_113_fu_1599_p1;
        tmp_115_reg_4186 <= tmp_115_fu_1635_p1;
        tmp_116_reg_4191 <= tmp_116_fu_1649_p1;
        tmp_14_reg_4143 <= tmp_14_fu_1447_p2;
        tmp_30_reg_4180 <= tmp_30_fu_1603_p2;
        tmp_78_reg_4138 <= tmp_78_fu_1443_p1;
        tmp_90_reg_4149 <= tmp_90_fu_1479_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522 & (isNeg_reg_3787 == ap_const_lv1_0))) begin
        sh_assign_1_i_cast1_reg_3892[0] <= sh_assign_1_i_cast1_fu_696_p1[0];
sh_assign_1_i_cast1_reg_3892[1] <= sh_assign_1_i_cast1_fu_696_p1[1];
sh_assign_1_i_cast1_reg_3892[2] <= sh_assign_1_i_cast1_fu_696_p1[2];
sh_assign_1_i_cast1_reg_3892[3] <= sh_assign_1_i_cast1_fu_696_p1[3];
sh_assign_1_i_cast1_reg_3892[4] <= sh_assign_1_i_cast1_fu_696_p1[4];
sh_assign_1_i_cast1_reg_3892[5] <= sh_assign_1_i_cast1_fu_696_p1[5];
sh_assign_1_i_cast1_reg_3892[6] <= sh_assign_1_i_cast1_fu_696_p1[6];
sh_assign_1_i_cast1_reg_3892[7] <= sh_assign_1_i_cast1_fu_696_p1[7];
sh_assign_1_i_cast1_reg_3892[8] <= sh_assign_1_i_cast1_fu_696_p1[8];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522 & ~(isNeg_reg_3787 == ap_const_lv1_0))) begin
        sh_assign_1_i_cast_reg_3897[0] <= sh_assign_1_i_cast_fu_700_p1[0];
sh_assign_1_i_cast_reg_3897[1] <= sh_assign_1_i_cast_fu_700_p1[1];
sh_assign_1_i_cast_reg_3897[2] <= sh_assign_1_i_cast_fu_700_p1[2];
sh_assign_1_i_cast_reg_3897[3] <= sh_assign_1_i_cast_fu_700_p1[3];
sh_assign_1_i_cast_reg_3897[4] <= sh_assign_1_i_cast_fu_700_p1[4];
sh_assign_1_i_cast_reg_3897[5] <= sh_assign_1_i_cast_fu_700_p1[5];
sh_assign_1_i_cast_reg_3897[6] <= sh_assign_1_i_cast_fu_700_p1[6];
sh_assign_1_i_cast_reg_3897[7] <= sh_assign_1_i_cast_fu_700_p1[7];
sh_assign_1_i_cast_reg_3897[8] <= sh_assign_1_i_cast_fu_700_p1[8];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522 & (isNeg_2_reg_3793 == ap_const_lv1_0))) begin
        sh_assign_5_i_cast1_reg_3917[0] <= sh_assign_5_i_cast1_fu_759_p1[0];
sh_assign_5_i_cast1_reg_3917[1] <= sh_assign_5_i_cast1_fu_759_p1[1];
sh_assign_5_i_cast1_reg_3917[2] <= sh_assign_5_i_cast1_fu_759_p1[2];
sh_assign_5_i_cast1_reg_3917[3] <= sh_assign_5_i_cast1_fu_759_p1[3];
sh_assign_5_i_cast1_reg_3917[4] <= sh_assign_5_i_cast1_fu_759_p1[4];
sh_assign_5_i_cast1_reg_3917[5] <= sh_assign_5_i_cast1_fu_759_p1[5];
sh_assign_5_i_cast1_reg_3917[6] <= sh_assign_5_i_cast1_fu_759_p1[6];
sh_assign_5_i_cast1_reg_3917[7] <= sh_assign_5_i_cast1_fu_759_p1[7];
sh_assign_5_i_cast1_reg_3917[8] <= sh_assign_5_i_cast1_fu_759_p1[8];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522 & ~(isNeg_2_reg_3793 == ap_const_lv1_0))) begin
        sh_assign_5_i_cast_reg_3922[0] <= sh_assign_5_i_cast_fu_763_p1[0];
sh_assign_5_i_cast_reg_3922[1] <= sh_assign_5_i_cast_fu_763_p1[1];
sh_assign_5_i_cast_reg_3922[2] <= sh_assign_5_i_cast_fu_763_p1[2];
sh_assign_5_i_cast_reg_3922[3] <= sh_assign_5_i_cast_fu_763_p1[3];
sh_assign_5_i_cast_reg_3922[4] <= sh_assign_5_i_cast_fu_763_p1[4];
sh_assign_5_i_cast_reg_3922[5] <= sh_assign_5_i_cast_fu_763_p1[5];
sh_assign_5_i_cast_reg_3922[6] <= sh_assign_5_i_cast_fu_763_p1[6];
sh_assign_5_i_cast_reg_3922[7] <= sh_assign_5_i_cast_fu_763_p1[7];
sh_assign_5_i_cast_reg_3922[8] <= sh_assign_5_i_cast_fu_763_p1[8];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st36_fsm_35 == ap_CS_fsm)) begin
        tmp_101_reg_4514 <= tmp_101_fu_3208_p2;
        tmp_102_reg_4524 <= tmp_102_fu_3247_p3;
        tmp_145_reg_4467 <= tmp_145_fu_3102_p1;
        tmp_147_reg_4488 <= tmp_147_fu_3153_p1;
        tmp_150_reg_4509 <= tmp_150_fu_3204_p1;
        tmp_153_reg_4530 <= tmp_153_fu_3255_p1;
        tmp_70_reg_4451 <= tmp_70_fu_3055_p2;
        tmp_71_reg_4461 <= tmp_71_fu_3094_p3;
        tmp_81_reg_4472 <= tmp_81_fu_3106_p2;
        tmp_82_reg_4482 <= tmp_82_fu_3145_p3;
        tmp_91_reg_4493 <= tmp_91_fu_3157_p2;
        tmp_92_reg_4503 <= tmp_92_fu_3196_p3;
        tmp_V_15_reg_4456 <= tmp_V_15_fu_3069_p3;
        tmp_V_16_reg_4477 <= tmp_V_16_fu_3120_p3;
        tmp_V_17_reg_4498 <= tmp_V_17_fu_3171_p3;
        tmp_V_18_reg_4519 <= tmp_V_18_fu_3222_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        tmp_132_reg_4311 <= clip_i_V_fu_2210_p3[ap_const_lv32_4];
        tmp_133_reg_4316 <= clip_q_V_fu_2264_p3[ap_const_lv32_4];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~ap_sig_bdd_493)) begin
        tmp_13_reg_3799 <= {{m_mm2s_ctl_RDATA[ap_const_lv32_1F : ap_const_lv32_3]}};
        tmp_15_reg_3804 <= tmp_15_fu_499_p1;
        tmp_18_reg_3809 <= {{m_s2mm_ctl_RDATA[ap_const_lv32_1F : ap_const_lv32_3]}};
        tmp_21_reg_3814 <= tmp_21_fu_513_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st32_fsm_31 == ap_CS_fsm)) begin
        tmp_25_i_reg_4389 <= tmp_25_i_fu_2766_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~ap_sig_bdd_493 & (ap_ST_st11_fsm_10 == ap_CS_fsm))) begin
        tmp_29_reg_3819 <= {{m_mm2s_ctl_RDATA[ap_const_lv32_1F : ap_const_lv32_1]}};
        tmp_37_reg_3824 <= {{m_s2mm_ctl_RDATA[ap_const_lv32_1F : ap_const_lv32_1]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~ap_sig_bdd_493 & (ap_ST_st14_fsm_13 == ap_CS_fsm))) begin
        tmp_31_reg_3829 <= {{m_mm2s_ctl_RDATA[ap_const_lv32_1F : ap_const_lv32_D]}};
        tmp_34_reg_3834 <= tmp_34_fu_581_p1;
        tmp_44_reg_3839 <= {{m_s2mm_ctl_RDATA[ap_const_lv32_1F : ap_const_lv32_D]}};
        tmp_45_reg_3844 <= tmp_45_fu_595_p1;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or tmp_6_fu_767_p2 or ap_sig_bdd_590)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or tmp_6_fu_767_p2 or ap_sig_bdd_590)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_m_mm2s_ctl_ARREADY assign process. ///
always @ (m_mm2s_ctl_ARREADY or ap_reg_ioackin_m_mm2s_ctl_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_ARREADY)) begin
        ap_sig_ioackin_m_mm2s_ctl_ARREADY = m_mm2s_ctl_ARREADY;
    end else begin
        ap_sig_ioackin_m_mm2s_ctl_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_m_mm2s_ctl_AWREADY assign process. ///
always @ (m_mm2s_ctl_AWREADY or ap_reg_ioackin_m_mm2s_ctl_AWREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY)) begin
        ap_sig_ioackin_m_mm2s_ctl_AWREADY = m_mm2s_ctl_AWREADY;
    end else begin
        ap_sig_ioackin_m_mm2s_ctl_AWREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_m_mm2s_ctl_WREADY assign process. ///
always @ (m_mm2s_ctl_WREADY or ap_reg_ioackin_m_mm2s_ctl_WREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY)) begin
        ap_sig_ioackin_m_mm2s_ctl_WREADY = m_mm2s_ctl_WREADY;
    end else begin
        ap_sig_ioackin_m_mm2s_ctl_WREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_m_s2mm_ctl_ARREADY assign process. ///
always @ (m_s2mm_ctl_ARREADY or ap_reg_ioackin_m_s2mm_ctl_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)) begin
        ap_sig_ioackin_m_s2mm_ctl_ARREADY = m_s2mm_ctl_ARREADY;
    end else begin
        ap_sig_ioackin_m_s2mm_ctl_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_m_s2mm_ctl_AWREADY assign process. ///
always @ (m_s2mm_ctl_AWREADY or ap_reg_ioackin_m_s2mm_ctl_AWREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) begin
        ap_sig_ioackin_m_s2mm_ctl_AWREADY = m_s2mm_ctl_AWREADY;
    end else begin
        ap_sig_ioackin_m_s2mm_ctl_AWREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_m_s2mm_ctl_WREADY assign process. ///
always @ (m_s2mm_ctl_WREADY or ap_reg_ioackin_m_s2mm_ctl_WREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)) begin
        ap_sig_ioackin_m_s2mm_ctl_WREADY = m_s2mm_ctl_WREADY;
    end else begin
        ap_sig_ioackin_m_s2mm_ctl_WREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_s_out_V_V_TREADY assign process. ///
always @ (s_out_V_V_TREADY or ap_reg_ioackin_s_out_V_V_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_s_out_V_V_TREADY)) begin
        ap_sig_ioackin_s_out_V_V_TREADY = s_out_V_V_TREADY;
    end else begin
        ap_sig_ioackin_s_out_V_V_TREADY = ap_const_logic_1;
    end
end

/// control_in_lf_i_ap_vld_in_sig assign process. ///
always @ (control_in_lf_i_ap_vld or control_in_lf_i_ap_vld_preg)
begin
    if ((ap_const_logic_1 == control_in_lf_i_ap_vld)) begin
        control_in_lf_i_ap_vld_in_sig = control_in_lf_i_ap_vld;
    end else begin
        control_in_lf_i_ap_vld_in_sig = control_in_lf_i_ap_vld_preg;
    end
end

/// control_in_lf_i_in_sig assign process. ///
always @ (control_in_lf_i or control_in_lf_i_preg or control_in_lf_i_ap_vld)
begin
    if ((ap_const_logic_1 == control_in_lf_i_ap_vld)) begin
        control_in_lf_i_in_sig = control_in_lf_i;
    end else begin
        control_in_lf_i_in_sig = control_in_lf_i_preg;
    end
end

/// control_in_lf_out_gain_ap_vld_in_sig assign process. ///
always @ (control_in_lf_out_gain_ap_vld or control_in_lf_out_gain_ap_vld_preg)
begin
    if ((ap_const_logic_1 == control_in_lf_out_gain_ap_vld)) begin
        control_in_lf_out_gain_ap_vld_in_sig = control_in_lf_out_gain_ap_vld;
    end else begin
        control_in_lf_out_gain_ap_vld_in_sig = control_in_lf_out_gain_ap_vld_preg;
    end
end

/// control_in_lf_out_gain_in_sig assign process. ///
always @ (control_in_lf_out_gain or control_in_lf_out_gain_preg or control_in_lf_out_gain_ap_vld)
begin
    if ((ap_const_logic_1 == control_in_lf_out_gain_ap_vld)) begin
        control_in_lf_out_gain_in_sig = control_in_lf_out_gain;
    end else begin
        control_in_lf_out_gain_in_sig = control_in_lf_out_gain_preg;
    end
end

/// control_in_lf_p_ap_vld_in_sig assign process. ///
always @ (control_in_lf_p_ap_vld or control_in_lf_p_ap_vld_preg)
begin
    if ((ap_const_logic_1 == control_in_lf_p_ap_vld)) begin
        control_in_lf_p_ap_vld_in_sig = control_in_lf_p_ap_vld;
    end else begin
        control_in_lf_p_ap_vld_in_sig = control_in_lf_p_ap_vld_preg;
    end
end

/// control_in_lf_p_in_sig assign process. ///
always @ (control_in_lf_p or control_in_lf_p_preg or control_in_lf_p_ap_vld)
begin
    if ((ap_const_logic_1 == control_in_lf_p_ap_vld)) begin
        control_in_lf_p_in_sig = control_in_lf_p;
    end else begin
        control_in_lf_p_in_sig = control_in_lf_p_preg;
    end
end

/// control_in_reg_clr_ap_vld_in_sig assign process. ///
always @ (control_in_reg_clr_ap_vld or control_in_reg_clr_ap_vld_preg)
begin
    if ((ap_const_logic_1 == control_in_reg_clr_ap_vld)) begin
        control_in_reg_clr_ap_vld_in_sig = control_in_reg_clr_ap_vld;
    end else begin
        control_in_reg_clr_ap_vld_in_sig = control_in_reg_clr_ap_vld_preg;
    end
end

/// control_in_reg_clr_in_sig assign process. ///
always @ (control_in_reg_clr or control_in_reg_clr_preg or control_in_reg_clr_ap_vld)
begin
    if ((ap_const_logic_1 == control_in_reg_clr_ap_vld)) begin
        control_in_reg_clr_in_sig = control_in_reg_clr;
    end else begin
        control_in_reg_clr_in_sig = control_in_reg_clr_preg;
    end
end

/// control_in_reg_init_ap_vld_in_sig assign process. ///
always @ (control_in_reg_init_ap_vld or control_in_reg_init_ap_vld_preg)
begin
    if ((ap_const_logic_1 == control_in_reg_init_ap_vld)) begin
        control_in_reg_init_ap_vld_in_sig = control_in_reg_init_ap_vld;
    end else begin
        control_in_reg_init_ap_vld_in_sig = control_in_reg_init_ap_vld_preg;
    end
end

/// control_in_reg_init_in_sig assign process. ///
always @ (control_in_reg_init or control_in_reg_init_preg or control_in_reg_init_ap_vld)
begin
    if ((ap_const_logic_1 == control_in_reg_init_ap_vld)) begin
        control_in_reg_init_in_sig = control_in_reg_init;
    end else begin
        control_in_reg_init_in_sig = control_in_reg_init_preg;
    end
end

/// cos_lut_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st34_fsm_33 == ap_CS_fsm)) begin
        cos_lut_ce0 = ap_const_logic_1;
    end else begin
        cos_lut_ce0 = ap_const_logic_0;
    end
end

/// cos_lut_ce1 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st34_fsm_33 == ap_CS_fsm)) begin
        cos_lut_ce1 = ap_const_logic_1;
    end else begin
        cos_lut_ce1 = ap_const_logic_0;
    end
end

/// destinationAddress_ap_vld_in_sig assign process. ///
always @ (destinationAddress_ap_vld or destinationAddress_ap_vld_preg)
begin
    if ((ap_const_logic_1 == destinationAddress_ap_vld)) begin
        destinationAddress_ap_vld_in_sig = destinationAddress_ap_vld;
    end else begin
        destinationAddress_ap_vld_in_sig = destinationAddress_ap_vld_preg;
    end
end

/// destinationAddress_in_sig assign process. ///
always @ (destinationAddress or destinationAddress_preg or destinationAddress_ap_vld)
begin
    if ((ap_const_logic_1 == destinationAddress_ap_vld)) begin
        destinationAddress_in_sig = destinationAddress;
    end else begin
        destinationAddress_in_sig = destinationAddress_preg;
    end
end

/// grp_fu_460_ce assign process. ///
always @ (ap_CS_fsm or control_in_reg_clr_read_read_fu_359_p2 or ap_sig_bdd_522 or ap_sig_ioackin_m_mm2s_ctl_AWREADY or ap_sig_ioackin_m_mm2s_ctl_WREADY or ap_sig_ioackin_m_s2mm_ctl_AWREADY or ap_sig_ioackin_m_s2mm_ctl_WREADY or tmp_6_fu_767_p2 or ap_sig_bdd_590)
begin
    if ((((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522 & ~(control_in_reg_clr_read_read_fu_359_p2 == ap_const_lv1_0)) | ((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & ~(control_in_reg_clr_read_read_fu_359_p2 == ap_const_lv1_0)) | (~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st17_fsm_16 == ap_CS_fsm) & ~(control_in_reg_clr_read_read_fu_359_p2 == ap_const_lv1_0)))) begin
        grp_fu_460_ce = ap_const_logic_1;
    end else begin
        grp_fu_460_ce = ap_const_logic_0;
    end
end

/// grp_fu_460_p0 assign process. ///
always @ (ap_CS_fsm or control_in_reg_init_in_sig or v_assign_fu_798_p1)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        grp_fu_460_p0 = v_assign_fu_798_p1;
    end else if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        grp_fu_460_p0 = control_in_reg_init_in_sig;
    end else begin
        grp_fu_460_p0 = 'bx;
    end
end

/// grp_fu_463_ce assign process. ///
always @ (ap_CS_fsm or tmp_6_fu_767_p2 or ap_sig_bdd_590)
begin
    if ((((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm))) begin
        grp_fu_463_ce = ap_const_logic_1;
    end else begin
        grp_fu_463_ce = ap_const_logic_0;
    end
end

/// iterations_ap_vld_in_sig assign process. ///
always @ (iterations_ap_vld or iterations_ap_vld_preg)
begin
    if ((ap_const_logic_1 == iterations_ap_vld)) begin
        iterations_ap_vld_in_sig = iterations_ap_vld;
    end else begin
        iterations_ap_vld_in_sig = iterations_ap_vld_preg;
    end
end

/// iterations_in_sig assign process. ///
always @ (iterations or iterations_preg or iterations_ap_vld)
begin
    if ((ap_const_logic_1 == iterations_ap_vld)) begin
        iterations_in_sig = iterations;
    end else begin
        iterations_in_sig = iterations_preg;
    end
end

/// m_mm2s_ctl_ARVALID assign process. ///
always @ (ap_start or ap_CS_fsm or ap_sig_bdd_467 or ap_sig_bdd_522 or ap_reg_ioackin_m_mm2s_ctl_ARREADY or ap_sig_bdd_947)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_ARREADY)) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_ARREADY) & ~ap_sig_bdd_467) | (~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_ARREADY) & (ap_ST_st7_fsm_6 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_ARREADY) & (ap_ST_st10_fsm_9 == ap_CS_fsm) & ~ap_sig_bdd_947) | (~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_ARREADY) & (ap_ST_st13_fsm_12 == ap_CS_fsm)))) begin
        m_mm2s_ctl_ARVALID = ap_const_logic_1;
    end else begin
        m_mm2s_ctl_ARVALID = ap_const_logic_0;
    end
end

/// m_mm2s_ctl_AWADDR assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_522 or ap_reg_ioackin_m_mm2s_ctl_AWREADY)
begin
    if (((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY))) begin
        m_mm2s_ctl_AWADDR = ap_const_lv64_A;
    end else if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY))) begin
        m_mm2s_ctl_AWADDR = ap_const_lv64_6;
    end else if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY) & (ap_ST_st6_fsm_5 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY) & (ap_ST_st12_fsm_11 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY) & (ap_ST_st15_fsm_14 == ap_CS_fsm)))) begin
        m_mm2s_ctl_AWADDR = ap_const_lv32_0;
    end else begin
        m_mm2s_ctl_AWADDR = 'bx;
    end
end

/// m_mm2s_ctl_AWVALID assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_522 or ap_reg_ioackin_m_mm2s_ctl_AWREADY)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY) & (ap_ST_st6_fsm_5 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY) & (ap_ST_st12_fsm_11 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY) & (ap_ST_st15_fsm_14 == ap_CS_fsm)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY)) | ((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_AWREADY)))) begin
        m_mm2s_ctl_AWVALID = ap_const_logic_1;
    end else begin
        m_mm2s_ctl_AWVALID = ap_const_logic_0;
    end
end

/// m_mm2s_ctl_BREADY assign process. ///
always @ (ap_CS_fsm or ap_sig_ioackin_m_mm2s_ctl_ARREADY or ap_sig_ioackin_m_s2mm_ctl_ARREADY or ap_sig_bdd_467 or ap_sig_bdd_522 or ap_sig_ioackin_m_mm2s_ctl_AWREADY or ap_sig_ioackin_m_mm2s_ctl_WREADY or ap_sig_ioackin_m_s2mm_ctl_AWREADY or ap_sig_ioackin_m_s2mm_ctl_WREADY or ap_sig_bdd_947)
begin
    if ((((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_467)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | ((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_947)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522) & (ap_ST_st13_fsm_12 == ap_CS_fsm)))) begin
        m_mm2s_ctl_BREADY = ap_const_logic_1;
    end else begin
        m_mm2s_ctl_BREADY = ap_const_logic_0;
    end
end

/// m_mm2s_ctl_RREADY assign process. ///
always @ (ap_CS_fsm or ap_sig_ioackin_m_mm2s_ctl_ARREADY or ap_sig_ioackin_m_s2mm_ctl_ARREADY or ap_sig_bdd_467 or ap_sig_bdd_493 or ap_sig_bdd_947)
begin
    if ((((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_467)) | ((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~ap_sig_bdd_493) | (~ap_sig_bdd_493 & (ap_ST_st11_fsm_10 == ap_CS_fsm)) | (~ap_sig_bdd_493 & (ap_ST_st14_fsm_13 == ap_CS_fsm)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_947)))) begin
        m_mm2s_ctl_RREADY = ap_const_logic_1;
    end else begin
        m_mm2s_ctl_RREADY = ap_const_logic_0;
    end
end

/// m_mm2s_ctl_WDATA assign process. ///
always @ (ap_CS_fsm or sourceAddress_in_sig or ap_sig_bdd_522 or ap_reg_ioackin_m_mm2s_ctl_WREADY or m_mm2s_ctl_assign_fu_517_p4 or tmp_1_fu_555_p3 or tmp_2_fu_599_p4 or read_length_fu_631_p2)
begin
    if (((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY))) begin
        m_mm2s_ctl_WDATA = read_length_fu_631_p2;
    end else if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY))) begin
        m_mm2s_ctl_WDATA = sourceAddress_in_sig;
    end else if (((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY) & (ap_ST_st15_fsm_14 == ap_CS_fsm))) begin
        m_mm2s_ctl_WDATA = tmp_2_fu_599_p4;
    end else if (((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY) & (ap_ST_st12_fsm_11 == ap_CS_fsm))) begin
        m_mm2s_ctl_WDATA = tmp_1_fu_555_p3;
    end else if (((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY) & (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        m_mm2s_ctl_WDATA = m_mm2s_ctl_assign_fu_517_p4;
    end else if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY) & (ap_ST_st9_fsm_8 == ap_CS_fsm)))) begin
        m_mm2s_ctl_WDATA = ap_const_lv32_0;
    end else begin
        m_mm2s_ctl_WDATA = 'bx;
    end
end

/// m_mm2s_ctl_WVALID assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_522 or ap_reg_ioackin_m_mm2s_ctl_WREADY)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY) & (ap_ST_st6_fsm_5 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY) & (ap_ST_st9_fsm_8 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY) & (ap_ST_st12_fsm_11 == ap_CS_fsm)) | ((ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY) & (ap_ST_st15_fsm_14 == ap_CS_fsm)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY)) | ((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_mm2s_ctl_WREADY)))) begin
        m_mm2s_ctl_WVALID = ap_const_logic_1;
    end else begin
        m_mm2s_ctl_WVALID = ap_const_logic_0;
    end
end

/// m_s2mm_ctl_ARADDR assign process. ///
always @ (ap_start or ap_CS_fsm or m_s2mm_ctl_addr_reg_3740 or ap_sig_bdd_467 or ap_sig_bdd_522 or ap_sig_bdd_947 or ap_reg_ioackin_m_s2mm_ctl_ARREADY)
begin
    if ((((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~ap_sig_bdd_467 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)) | (~ap_sig_bdd_522 & (ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~ap_sig_bdd_947 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)) | (~ap_sig_bdd_522 & (ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)))) begin
        m_s2mm_ctl_ARADDR = m_s2mm_ctl_addr_reg_3740;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY))) begin
        m_s2mm_ctl_ARADDR = ap_const_lv64_C;
    end else begin
        m_s2mm_ctl_ARADDR = 'bx;
    end
end

/// m_s2mm_ctl_ARVALID assign process. ///
always @ (ap_start or ap_CS_fsm or ap_sig_bdd_467 or ap_sig_bdd_522 or ap_sig_bdd_947 or ap_reg_ioackin_m_s2mm_ctl_ARREADY)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~ap_sig_bdd_467 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)) | (~ap_sig_bdd_522 & (ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~ap_sig_bdd_947 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)) | (~ap_sig_bdd_522 & (ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_ARREADY)))) begin
        m_s2mm_ctl_ARVALID = ap_const_logic_1;
    end else begin
        m_s2mm_ctl_ARVALID = ap_const_logic_0;
    end
end

/// m_s2mm_ctl_AWADDR assign process. ///
always @ (ap_CS_fsm or m_s2mm_ctl_addr_reg_3740 or ap_sig_bdd_522 or ap_reg_ioackin_m_s2mm_ctl_AWREADY)
begin
    if (((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY))) begin
        m_s2mm_ctl_AWADDR = ap_const_lv64_16;
    end else if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY))) begin
        m_s2mm_ctl_AWADDR = ap_const_lv64_12;
    end else if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st15_fsm_14 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)))) begin
        m_s2mm_ctl_AWADDR = m_s2mm_ctl_addr_reg_3740;
    end else begin
        m_s2mm_ctl_AWADDR = 'bx;
    end
end

/// m_s2mm_ctl_AWVALID assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_522 or ap_reg_ioackin_m_s2mm_ctl_AWREADY)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st15_fsm_14 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)) | ((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_AWREADY)))) begin
        m_s2mm_ctl_AWVALID = ap_const_logic_1;
    end else begin
        m_s2mm_ctl_AWVALID = ap_const_logic_0;
    end
end

/// m_s2mm_ctl_BREADY assign process. ///
always @ (ap_CS_fsm or ap_sig_ioackin_m_mm2s_ctl_ARREADY or ap_sig_ioackin_m_s2mm_ctl_ARREADY or ap_sig_bdd_467 or ap_sig_bdd_522 or ap_sig_ioackin_m_mm2s_ctl_AWREADY or ap_sig_ioackin_m_mm2s_ctl_WREADY or ap_sig_ioackin_m_s2mm_ctl_AWREADY or ap_sig_ioackin_m_s2mm_ctl_WREADY or ap_sig_bdd_947)
begin
    if ((((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_467)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) | (~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY)) & (ap_ST_st17_fsm_16 == ap_CS_fsm)) | ((ap_ST_st18_fsm_17 == ap_CS_fsm) & ~ap_sig_bdd_522) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_947)) | (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522) & (ap_ST_st13_fsm_12 == ap_CS_fsm)))) begin
        m_s2mm_ctl_BREADY = ap_const_logic_1;
    end else begin
        m_s2mm_ctl_BREADY = ap_const_logic_0;
    end
end

/// m_s2mm_ctl_RREADY assign process. ///
always @ (ap_CS_fsm or ap_sig_ioackin_m_mm2s_ctl_ARREADY or ap_sig_ioackin_m_s2mm_ctl_ARREADY or ap_sig_bdd_467 or ap_sig_bdd_493 or ap_sig_bdd_947)
begin
    if ((((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_467)) | ((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~ap_sig_bdd_493) | (~ap_sig_bdd_493 & (ap_ST_st11_fsm_10 == ap_CS_fsm)) | (~ap_sig_bdd_493 & (ap_ST_st14_fsm_13 == ap_CS_fsm)) | ((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_947)))) begin
        m_s2mm_ctl_RREADY = ap_const_logic_1;
    end else begin
        m_s2mm_ctl_RREADY = ap_const_logic_0;
    end
end

/// m_s2mm_ctl_WDATA assign process. ///
always @ (ap_CS_fsm or destinationAddress_in_sig or ap_sig_bdd_522 or read_length_fu_631_p2 or ap_reg_ioackin_m_s2mm_ctl_WREADY or tmp_fu_526_p4 or tmp_4_fu_563_p3 or tmp_5_fu_608_p4)
begin
    if (((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY))) begin
        m_s2mm_ctl_WDATA = read_length_fu_631_p2;
    end else if (((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY))) begin
        m_s2mm_ctl_WDATA = destinationAddress_in_sig;
    end else if (((ap_ST_st15_fsm_14 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY))) begin
        m_s2mm_ctl_WDATA = tmp_5_fu_608_p4;
    end else if (((ap_ST_st12_fsm_11 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY))) begin
        m_s2mm_ctl_WDATA = tmp_4_fu_563_p3;
    end else if (((ap_ST_st6_fsm_5 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY))) begin
        m_s2mm_ctl_WDATA = tmp_fu_526_p4;
    end else if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)))) begin
        m_s2mm_ctl_WDATA = ap_const_lv32_0;
    end else begin
        m_s2mm_ctl_WDATA = 'bx;
    end
end

/// m_s2mm_ctl_WVALID assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_522 or ap_reg_ioackin_m_s2mm_ctl_WREADY)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)) | ((ap_ST_st12_fsm_11 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)) | ((ap_ST_st15_fsm_14 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)) | ((ap_ST_st16_fsm_15 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)) | ((ap_ST_st17_fsm_16 == ap_CS_fsm) & ~ap_sig_bdd_522 & (ap_const_logic_0 == ap_reg_ioackin_m_s2mm_ctl_WREADY)))) begin
        m_s2mm_ctl_WVALID = ap_const_logic_1;
    end else begin
        m_s2mm_ctl_WVALID = ap_const_logic_0;
    end
end

/// s_in_V_V_TREADY assign process. ///
always @ (ap_CS_fsm or tmp_6_fu_767_p2 or ap_sig_bdd_590)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
        s_in_V_V_TREADY = ap_const_logic_1;
    end else begin
        s_in_V_V_TREADY = ap_const_logic_0;
    end
end

/// s_out_V_V_TVALID assign process. ///
always @ (ap_CS_fsm or ap_reg_ioackin_s_out_V_V_TREADY)
begin
    if (((ap_ST_st38_fsm_37 == ap_CS_fsm) & (ap_const_logic_0 == ap_reg_ioackin_s_out_V_V_TREADY))) begin
        s_out_V_V_TVALID = ap_const_logic_1;
    end else begin
        s_out_V_V_TVALID = ap_const_logic_0;
    end
end

/// sourceAddress_ap_vld_in_sig assign process. ///
always @ (sourceAddress_ap_vld or sourceAddress_ap_vld_preg)
begin
    if ((ap_const_logic_1 == sourceAddress_ap_vld)) begin
        sourceAddress_ap_vld_in_sig = sourceAddress_ap_vld;
    end else begin
        sourceAddress_ap_vld_in_sig = sourceAddress_ap_vld_preg;
    end
end

/// sourceAddress_in_sig assign process. ///
always @ (sourceAddress or sourceAddress_preg or sourceAddress_ap_vld)
begin
    if ((ap_const_logic_1 == sourceAddress_ap_vld)) begin
        sourceAddress_in_sig = sourceAddress;
    end else begin
        sourceAddress_in_sig = sourceAddress_preg;
    end
end
always @ (ap_start or ap_CS_fsm or ap_sig_ioackin_m_mm2s_ctl_ARREADY or ap_sig_ioackin_m_s2mm_ctl_ARREADY or ap_sig_bdd_467 or ap_sig_bdd_493 or ap_sig_bdd_522 or ap_sig_ioackin_m_mm2s_ctl_AWREADY or ap_sig_ioackin_m_mm2s_ctl_WREADY or ap_sig_ioackin_m_s2mm_ctl_AWREADY or ap_sig_ioackin_m_s2mm_ctl_WREADY or tmp_6_fu_767_p2 or ap_sig_bdd_590 or ap_sig_ioackin_s_out_V_V_TREADY or ap_sig_bdd_947)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~((ap_start == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            if (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        ap_ST_st4_fsm_3 : 
            if (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_467)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st5_fsm_4 : 
            if (~ap_sig_bdd_493) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        ap_ST_st6_fsm_5 : 
            if (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        ap_ST_st7_fsm_6 : 
            if (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            if (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        ap_ST_st10_fsm_9 : 
            if (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_947)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        ap_ST_st11_fsm_10 : 
            if (~ap_sig_bdd_493) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        ap_ST_st12_fsm_11 : 
            if (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        ap_ST_st13_fsm_12 : 
            if (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_ARREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_ARREADY) | ap_sig_bdd_522)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        ap_ST_st14_fsm_13 : 
            if (~ap_sig_bdd_493) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        ap_ST_st15_fsm_14 : 
            if (~((ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        ap_ST_st16_fsm_15 : 
            if (~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        ap_ST_st17_fsm_16 : 
            if (~(ap_sig_bdd_522 | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_mm2s_ctl_WREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_AWREADY) | (ap_const_logic_0 == ap_sig_ioackin_m_s2mm_ctl_WREADY))) begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        ap_ST_st18_fsm_17 : 
            if (~ap_sig_bdd_522) begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end
        ap_ST_st19_fsm_18 : 
            if (((ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if ((~(ap_const_lv1_0 == tmp_6_fu_767_p2) & ~ap_sig_bdd_590)) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end
        ap_ST_st20_fsm_19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
        ap_ST_st21_fsm_20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
        ap_ST_st22_fsm_21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
        ap_ST_st23_fsm_22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
        ap_ST_st24_fsm_23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
        ap_ST_st25_fsm_24 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
        ap_ST_st26_fsm_25 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
        ap_ST_st27_fsm_26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
        ap_ST_st28_fsm_27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
        ap_ST_st29_fsm_28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
        ap_ST_st30_fsm_29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
        ap_ST_st31_fsm_30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
        ap_ST_st32_fsm_31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
        ap_ST_st33_fsm_32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
        ap_ST_st34_fsm_33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
        ap_ST_st35_fsm_34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
        ap_ST_st36_fsm_35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
        ap_ST_st37_fsm_36 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
        ap_ST_st38_fsm_37 : 
            if (~(ap_const_logic_0 == ap_sig_ioackin_s_out_V_V_TREADY)) begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end else begin
                ap_NS_fsm = ap_ST_st38_fsm_37;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign F2_1_fu_1242_p2 = (ap_const_lv12_433 - tmp_22_fu_1228_p1);
assign F2_2_fu_863_p2 = (ap_const_lv12_433 - tmp_s_fu_824_p1);
assign F2_fu_1196_p2 = (ap_const_lv12_433 - tmp_3_fu_1182_p1);
assign OP1_V_1_fu_1927_p1 = $signed(newSel7_reg_4222);
assign OP1_V_fu_1914_p1 = $signed(newSel3_reg_4217);
assign OP2_V_1_fu_1930_p1 = $signed(p_Val2_1_fu_326);
assign OP2_V_fu_1917_p1 = $signed(p_Val2_s_fu_322);
assign Range1_all_ones_1_fu_1068_p2 = (tmp1_fu_1062_p2 & tmp_58_fu_1029_p2);
assign Range1_all_ones_fu_1290_p2 = (Range2_all_ones_1_i_fu_1279_p3 & Range1_all_ones_1_reg_4019);
assign Range1_all_zeros_1_fu_1121_p2 = (man_V_17_reg_3952 == ap_const_lv54_0? 1'b1: 1'b0);
assign Range1_all_zeros_fu_1295_p2 = (Range1_all_ones_1_reg_4019 ^ ap_const_lv1_1);
assign Range2_V_1_fu_1092_p2 = man_V_17_reg_3952 >> tmp_63_fu_1088_p1;
assign Range2_all_ones_1_i_fu_1279_p3 = ((or_cond88_i_fu_1274_p2)? Range2_all_ones_reg_4037: rev1_fu_1269_p2);
assign Range2_all_ones_fu_1103_p2 = (Range2_V_1_fu_1092_p2 == r_V_fu_1097_p2? 1'b1: 1'b0);
assign ap_return = ap_const_lv1_1;

/// ap_sig_bdd_467 assign process. ///
always @ (sourceAddress_ap_vld_in_sig or destinationAddress_ap_vld_in_sig or iterations_ap_vld_in_sig or control_in_lf_p_ap_vld_in_sig or control_in_lf_i_ap_vld_in_sig or control_in_lf_out_gain_ap_vld_in_sig or control_in_reg_clr_ap_vld_in_sig or control_in_reg_init_ap_vld_in_sig or m_mm2s_ctl_RVALID or m_mm2s_ctl_BVALID or m_s2mm_ctl_RVALID or m_s2mm_ctl_BVALID)
begin
    ap_sig_bdd_467 = ((control_in_reg_init_ap_vld_in_sig == ap_const_logic_0) | (control_in_reg_clr_ap_vld_in_sig == ap_const_logic_0) | (control_in_lf_out_gain_ap_vld_in_sig == ap_const_logic_0) | (control_in_lf_i_ap_vld_in_sig == ap_const_logic_0) | (control_in_lf_p_ap_vld_in_sig == ap_const_logic_0) | (iterations_ap_vld_in_sig == ap_const_logic_0) | (destinationAddress_ap_vld_in_sig == ap_const_logic_0) | (sourceAddress_ap_vld_in_sig == ap_const_logic_0) | (m_mm2s_ctl_RVALID == ap_const_logic_0) | (m_mm2s_ctl_BVALID == ap_const_logic_0) | (m_s2mm_ctl_RVALID == ap_const_logic_0) | (m_s2mm_ctl_BVALID == ap_const_logic_0));
end

/// ap_sig_bdd_493 assign process. ///
always @ (m_mm2s_ctl_RVALID or m_s2mm_ctl_RVALID)
begin
    ap_sig_bdd_493 = ((m_mm2s_ctl_RVALID == ap_const_logic_0) | (m_s2mm_ctl_RVALID == ap_const_logic_0));
end

/// ap_sig_bdd_522 assign process. ///
always @ (m_mm2s_ctl_BVALID or m_s2mm_ctl_BVALID)
begin
    ap_sig_bdd_522 = ((m_mm2s_ctl_BVALID == ap_const_logic_0) | (m_s2mm_ctl_BVALID == ap_const_logic_0));
end

/// ap_sig_bdd_590 assign process. ///
always @ (s_in_V_V_TVALID or tmp_6_fu_767_p2)
begin
    ap_sig_bdd_590 = ((s_in_V_V_TVALID == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_6_fu_767_p2));
end

/// ap_sig_bdd_947 assign process. ///
always @ (m_mm2s_ctl_RVALID or m_mm2s_ctl_BVALID or m_s2mm_ctl_RVALID or m_s2mm_ctl_BVALID)
begin
    ap_sig_bdd_947 = ((m_mm2s_ctl_RVALID == ap_const_logic_0) | (m_mm2s_ctl_BVALID == ap_const_logic_0) | (m_s2mm_ctl_RVALID == ap_const_logic_0) | (m_s2mm_ctl_BVALID == ap_const_logic_0));
end
assign brmerge1_i_fu_2577_p2 = (overflow_4_fu_2538_p2 | underflow_4_not_i_fu_2571_p2);
assign brmerge39_i1_i_fu_2092_p2 = (p_not38_i1_i_fu_2086_p2 | newsignbit_0_not_i1_i_fu_2080_p2);
assign brmerge39_i_i1_fu_2387_p2 = (p_not38_i_i1_fu_2382_p2 | newsignbit_0_not_i_i1_fu_2377_p2);
assign brmerge39_i_i_fu_2158_p2 = (p_not38_i_i_fu_2152_p2 | newsignbit_0_not_i_i_fu_2146_p2);
assign brmerge39_i_i_i_fu_2554_p2 = (p_not38_i_i_i_fu_2549_p2 | newsignbit_0_not_i_i_i_fu_2544_p2);
assign brmerge8_i_fu_2190_p2 = (overflow_1_fu_2169_p2 | underflow_not_i_fu_2184_p2);
assign brmerge92_demorgan_i_fu_1381_p2 = (newsignbit_fu_1261_p3 & deleted_ones_0_i_fu_1340_p3);
assign brmerge92_i_fu_1699_p2 = (brmerge92_demorgan_i_reg_4132 ^ ap_const_lv1_1);
assign brmerge9_i_fu_2244_p2 = (overflow_2_fu_2223_p2 | underflow_1_not_i_fu_2238_p2);
assign brmerge_fu_1724_p2 = (tmp4_fu_1719_p2 | brmerge92_demorgan_i_reg_4132);
assign brmerge_i1_fu_2410_p2 = (overflow_3_fu_2371_p2 | underflow_not_i1_fu_2404_p2);
assign brmerge_i1_i_fu_2074_p2 = (newsignbit_1_fu_2050_p3 | p_not_i1_i_fu_2068_p2);
assign brmerge_i2_fu_2744_p2 = (newsignbit_5_fu_2712_p3 | isneg_not_i_fu_2738_p2);
assign brmerge_i_fu_1364_p2 = (newsignbit_fu_1261_p3 | deleted_zeros_0_not_i_fu_1358_p2);
assign brmerge_i_i1_fu_2140_p2 = (newsignbit_2_fu_2116_p3 | p_not_i_i_fu_2134_p2);
assign brmerge_i_i1_i_fu_2178_p2 = (underflow_1_fu_2174_p2 | overflow_1_fu_2169_p2);
assign brmerge_i_i2_fu_2361_p2 = (newsignbit_3_reg_4333 | p_not_i_i1_fu_2356_p2);
assign brmerge_i_i4_i_fu_2528_p2 = (newsignbit_4_reg_4362 | p_not_i_i_i_fu_2523_p2);
assign brmerge_i_i_fu_1709_p2 = (underflow_fu_1704_p2 | overflow_reg_4126);
assign brmerge_i_i_i1_fu_2398_p2 = (underflow_3_fu_2393_p2 | overflow_3_fu_2371_p2);
assign brmerge_i_i_i2_fu_2732_p2 = (isneg_17_fu_2700_p3 ^ newsignbit_5_fu_2712_p3);
assign brmerge_i_i_i_fu_2232_p2 = (underflow_2_fu_2228_p2 | overflow_2_fu_2223_p2);
assign brmerge_i_i_i_i_fu_2565_p2 = (underflow_4_fu_2560_p2 | overflow_4_fu_2538_p2);
assign clip_i_V_fu_2210_p3 = ((brmerge8_i_fu_2190_p2)? p_Val2_34_mux_i_fu_2196_p3: p_Val2_i_fu_2203_p3);
assign clip_q_V_fu_2264_p3 = ((brmerge9_i_fu_2244_p2)? p_Val2_36_mux_i_fu_2250_p3: p_Val2_1_i_fu_2257_p3);
assign control_in_reg_clr_read_read_fu_359_p2 = control_in_reg_clr_in_sig;
assign cos_adr_V_3_fu_2871_p2 = (sin_adr_V_reg_4408 ^ ap_const_lv10_3FF);
assign cos_adr_V_fu_2876_p3 = ((tmp_144_reg_4402)? cos_adr_V_3_fu_2871_p2: sin_adr_V_reg_4408);
assign cos_lut_address0 = tmp_34_i_fu_2888_p1;
assign cos_lut_address1 = tmp_35_i_fu_2893_p1;
assign cos_out_V_1_fu_2951_p3 = ((sel_tmp4_i_fu_2945_p2)? cos_out_V_4_i_cast_fu_2898_p1: cos_out_V_fu_2927_p2);
assign cos_out_V_4_i_cast_fu_2898_p1 = $unsigned(cos_lut_q0);
assign cos_out_V_6_fu_2971_p3 = ((sel_tmp7_i_fu_2965_p2)? cos_out_V_4_i_cast_fu_2898_p1: cos_out_V_1_fu_2951_p3);
assign cos_out_V_fu_2927_p2 = (ap_const_lv16_0 - cos_out_V_4_i_cast_fu_2898_p1);
assign deleted_ones_0_i_fu_1340_p3 = ((sel_tmp33_fu_1321_p2)? Range1_all_ones_fu_1290_p2: sel_tmp35_fu_1334_p3);
assign deleted_zeros_0_i_fu_1326_p3 = ((sel_tmp33_fu_1321_p2)? p_93_i_fu_1300_p2: sel_tmp32_fu_1313_p3);
assign deleted_zeros_0_not_i_fu_1358_p2 = (deleted_zeros_0_i_fu_1326_p3 ^ ap_const_lv1_1);
assign exp_V_fu_828_p2 = (tmp_s_fu_824_p1 + ap_const_lv12_C01);
assign exp_tmp_V_1_fu_1218_p4 = {{ireg_V_1_fu_1202_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign exp_tmp_V_2_fu_815_p4 = {{ireg_V_2_reg_3869[ap_const_lv32_3E : ap_const_lv32_34]}};
assign exp_tmp_V_fu_1172_p4 = {{ireg_V_fu_1156_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign first_r_V_fu_778_p4 = {{s_in_V_V_TDATA[ap_const_lv32_7F : ap_const_lv32_60]}};
assign grp_fu_463_p0 = second_r_V_fu_788_p4;
assign i_1_fu_772_p2 = (i_reg_448 + ap_const_lv32_1);
assign icmp1_fu_1619_p2 = (tmp_114_fu_1609_p4 == ap_const_lv8_0? 1'b1: 1'b0);
assign icmp_fu_1463_p2 = (tmp_80_fu_1453_p4 == ap_const_lv8_0? 1'b1: 1'b0);
assign ireg_V_1_fu_1202_p1 = grp_fu_463_p1;
assign ireg_V_2_fu_652_p1 = grp_fu_460_p1;
assign ireg_V_fu_1156_p1 = grp_fu_460_p1;
assign isNeg_1_fu_713_p3 = sh_assign_1_fu_707_p2[ap_const_lv32_8];
assign isneg_12_fu_808_p3 = ireg_V_2_reg_3869[ap_const_lv32_3F];
assign isneg_17_fu_2700_p3 = p_Val2_44_fu_2694_p2[ap_const_lv32_1C];
assign isneg_not_i_fu_2738_p2 = (isneg_17_fu_2700_p3 ^ ap_const_lv1_1);
assign j_1_fu_3328_p2 = (ap_const_lv32_10 - tmp_82_reg_4482);
assign j_2_fu_3397_p2 = (ap_const_lv32_C - tmp_92_reg_4503);
assign j_3_fu_3466_p2 = (ap_const_lv32_C - tmp_102_reg_4524);
assign j_fu_3259_p2 = (ap_const_lv32_10 - tmp_71_reg_4461);
assign lD_fu_1058_p1 = tmp_60_fu_1053_p2[0:0];
assign m_mm2s_ctl_ARADDR = ap_const_lv32_0;
assign m_mm2s_ctl_ARBURST = ap_const_lv2_0;
assign m_mm2s_ctl_ARCACHE = ap_const_lv4_0;
assign m_mm2s_ctl_ARID = ap_const_lv1_0;
assign m_mm2s_ctl_ARLEN = ap_const_lv32_1;
assign m_mm2s_ctl_ARLOCK = ap_const_lv2_0;
assign m_mm2s_ctl_ARPROT = ap_const_lv3_0;
assign m_mm2s_ctl_ARQOS = ap_const_lv4_0;
assign m_mm2s_ctl_ARREGION = ap_const_lv4_0;
assign m_mm2s_ctl_ARSIZE = ap_const_lv3_0;
assign m_mm2s_ctl_ARUSER = ap_const_lv1_0;
assign m_mm2s_ctl_AWBURST = ap_const_lv2_0;
assign m_mm2s_ctl_AWCACHE = ap_const_lv4_0;
assign m_mm2s_ctl_AWID = ap_const_lv1_0;
assign m_mm2s_ctl_AWLEN = ap_const_lv32_1;
assign m_mm2s_ctl_AWLOCK = ap_const_lv2_0;
assign m_mm2s_ctl_AWPROT = ap_const_lv3_0;
assign m_mm2s_ctl_AWQOS = ap_const_lv4_0;
assign m_mm2s_ctl_AWREGION = ap_const_lv4_0;
assign m_mm2s_ctl_AWSIZE = ap_const_lv3_0;
assign m_mm2s_ctl_AWUSER = ap_const_lv1_0;
assign m_mm2s_ctl_WID = ap_const_lv1_0;
assign m_mm2s_ctl_WLAST = ap_const_logic_0;
assign m_mm2s_ctl_WSTRB = ap_const_lv4_F;
assign m_mm2s_ctl_WUSER = ap_const_lv1_0;
assign m_mm2s_ctl_assign_fu_517_p4 = {{{tmp_13_reg_3799}, {ap_const_lv1_1}}, {tmp_15_reg_3804}};
assign m_s2mm_ctl_ARBURST = ap_const_lv2_0;
assign m_s2mm_ctl_ARCACHE = ap_const_lv4_0;
assign m_s2mm_ctl_ARID = ap_const_lv1_0;
assign m_s2mm_ctl_ARLEN = ap_const_lv32_1;
assign m_s2mm_ctl_ARLOCK = ap_const_lv2_0;
assign m_s2mm_ctl_ARPROT = ap_const_lv3_0;
assign m_s2mm_ctl_ARQOS = ap_const_lv4_0;
assign m_s2mm_ctl_ARREGION = ap_const_lv4_0;
assign m_s2mm_ctl_ARSIZE = ap_const_lv3_0;
assign m_s2mm_ctl_ARUSER = ap_const_lv1_0;
assign m_s2mm_ctl_AWBURST = ap_const_lv2_0;
assign m_s2mm_ctl_AWCACHE = ap_const_lv4_0;
assign m_s2mm_ctl_AWID = ap_const_lv1_0;
assign m_s2mm_ctl_AWLEN = ap_const_lv32_1;
assign m_s2mm_ctl_AWLOCK = ap_const_lv2_0;
assign m_s2mm_ctl_AWPROT = ap_const_lv3_0;
assign m_s2mm_ctl_AWQOS = ap_const_lv4_0;
assign m_s2mm_ctl_AWREGION = ap_const_lv4_0;
assign m_s2mm_ctl_AWSIZE = ap_const_lv3_0;
assign m_s2mm_ctl_AWUSER = ap_const_lv1_0;
assign m_s2mm_ctl_WID = ap_const_lv1_0;
assign m_s2mm_ctl_WLAST = ap_const_logic_0;
assign m_s2mm_ctl_WSTRB = ap_const_lv4_F;
assign m_s2mm_ctl_WUSER = ap_const_lv1_0;
assign m_s2mm_ctl_addr_fu_466_p2 = ap_const_lv64_C;
assign man_V_17_fu_855_p3 = ((isneg_12_fu_808_p3)? man_V_7_fu_849_p2: p_Result_30_fu_845_p1);
assign man_V_18_fu_3552_p0 = $signed(p_Result_s_reg_4540);
assign man_V_18_fu_3552_p2 = man_V_18_fu_3552_p0 << tmp_88_cast_reg_4545;
assign man_V_19_fu_3590_p0 = $signed(p_Result_8_reg_4555);
assign man_V_19_fu_3590_p2 = man_V_19_fu_3590_p0 << tmp_101_cast_reg_4560;
assign man_V_1_fu_1398_p2 = (ap_const_lv54_0 - p_Result_28_fu_1394_p1);
assign man_V_20_fu_3628_p0 = $signed(p_Result_20_reg_4570);
assign man_V_20_fu_3628_p2 = man_V_20_fu_3628_p0 << tmp_114_cast_reg_4575;
assign man_V_21_fu_3666_p0 = $signed(p_Result_25_reg_4585);
assign man_V_21_fu_3666_p2 = man_V_21_fu_3666_p0 << tmp_127_cast_reg_4590;
assign man_V_2_fu_1404_p3 = ((isneg_reg_4063)? man_V_1_fu_1398_p2: p_Result_28_fu_1394_p1);
assign man_V_4_fu_1554_p2 = (ap_const_lv54_0 - p_Result_29_fu_1550_p1);
assign man_V_5_fu_1560_p3 = ((isneg_1_reg_4088)? man_V_4_fu_1554_p2: p_Result_29_fu_1550_p1);
assign man_V_7_fu_849_p2 = (ap_const_lv54_0 - p_Result_30_fu_845_p1);
assign neg_src_fu_1353_p2 = (isneg_12_reg_3945 & sel_tmp36_fu_1348_p2);
assign newSel1_fu_1809_p3 = ((sel_tmp8_fu_1783_p2)? tmp_90_reg_4149: tmp_78_reg_4138);
assign newSel2_fu_1820_p3 = ((or_cond_fu_1804_p2)? newSel_fu_1797_p3: newSel1_fu_1809_p3);
assign newSel3_fu_1834_p3 = ((or_cond2_fu_1828_p2)? newSel2_fu_1820_p3: ap_const_lv16_0);
assign newSel4_fu_1863_p3 = ((sel_tmp17_fu_1858_p2)? p_1_fu_1842_p3: tmp_116_reg_4191);
assign newSel5_fu_1875_p3 = ((sel_tmp13_fu_1849_p2)? tmp_115_reg_4186: tmp_113_reg_4175);
assign newSel6_fu_1886_p3 = ((or_cond3_fu_1870_p2)? newSel4_fu_1863_p3: newSel5_fu_1875_p3);
assign newSel7_fu_1900_p3 = ((or_cond5_fu_1894_p2)? newSel6_fu_1886_p3: ap_const_lv16_0);
assign newSel8_fu_2979_p3 = ((sel_tmp7_i_fu_2965_p2)? sin_out_V_4_i_cast_fu_2902_p1: sin_out_V_fu_2921_p2);
assign newSel9_fu_2993_p3 = ((tmp_36_i_fu_2906_p2)? sin_out_V_4_i_cast_fu_2902_p1: sin_out_V_fu_2921_p2);
assign newSel_fu_1797_p3 = ((sel_tmp5_fu_1792_p2)? p_s_fu_1776_p3: tmp_100_reg_4154);
assign newsignbit_0_not_i1_i_fu_2080_p2 = (newsignbit_1_fu_2050_p3 ^ ap_const_lv1_1);
assign newsignbit_0_not_i_i1_fu_2377_p2 = (newsignbit_3_reg_4333 ^ ap_const_lv1_1);
assign newsignbit_0_not_i_i_fu_2146_p2 = (newsignbit_2_fu_2116_p3 ^ ap_const_lv1_1);
assign newsignbit_0_not_i_i_i_fu_2544_p2 = (newsignbit_4_reg_4362 ^ ap_const_lv1_1);
assign newsignbit_1_fu_2050_p3 = p_Val2_7_fu_1986_p2[ap_const_lv32_18];
assign newsignbit_2_fu_2116_p3 = p_Val2_10_fu_2016_p2[ap_const_lv32_18];
assign newsignbit_5_fu_2712_p3 = p_Val2_44_fu_2694_p2[ap_const_lv32_1B];
assign newsignbit_fu_1261_p3 = p_Val2_4_fu_1255_p3[ap_const_lv32_1B];
assign or_cond1_fu_1815_p2 = (sel_tmp8_fu_1783_p2 | sel_tmp2_reg_4159);
assign or_cond2_fu_1828_p2 = (or_cond_fu_1804_p2 | or_cond1_fu_1815_p2);
assign or_cond3_fu_1870_p2 = (sel_tmp17_fu_1858_p2 | sel_tmp15_reg_4207);
assign or_cond4_fu_1881_p2 = (sel_tmp13_fu_1849_p2 | sel_tmp10_reg_4196);
assign or_cond5_fu_1894_p2 = (or_cond3_fu_1870_p2 | or_cond4_fu_1881_p2);
assign or_cond6_fu_2987_p2 = (sel_tmp7_i_fu_2965_p2 | sel_tmp4_i_fu_2945_p2);
assign or_cond88_i_fu_1274_p2 = (tmp_61_reg_4031 & rev1_fu_1269_p2);
assign or_cond89_i_fu_1286_p2 = (tmp_61_reg_4031 & rev_reg_4014);
assign or_cond_fu_1804_p2 = (sel_tmp5_fu_1792_p2 | sel_tmp3_reg_4170);
assign overflow_1_fu_2169_p2 = (brmerge_i1_i_reg_4276 & tmp_9_i_fu_2164_p2);
assign overflow_2_fu_2223_p2 = (brmerge_i_i1_reg_4301 & tmp_3_i_fu_2218_p2);
assign overflow_3_fu_2371_p2 = (brmerge_i_i2_fu_2361_p2 & tmp_4_i_fu_2366_p2);
assign overflow_4_fu_2538_p2 = (brmerge_i_i4_i_fu_2528_p2 & tmp_9_i1_fu_2533_p2);
assign overflow_fu_1375_p2 = (brmerge_i_fu_1364_p2 & tmp_67_fu_1370_p2);
assign p_1_fu_1842_p3 = ((isneg_1_reg_4088)? ap_const_lv16_FFFF: ap_const_lv16_0);
assign p_2_fu_1248_p3 = ((isneg_12_reg_3945)? ap_const_lv28_FFFFFFF: ap_const_lv28_0);
assign p_5_fu_1768_p3 = ((sel_tmp39_fu_1763_p2)? this_assign_mux_fu_1729_p3: sel_tmp38_fu_1751_p3);
assign p_93_i_fu_1300_p2 = (tmp_64_reg_4042 & Range1_all_zeros_fu_1295_p2);
assign p_Repl2_10_fu_3694_p3 = ((tmp_81_reg_4472)? ap_const_lv32_0: res_V_5_fu_3604_p3);
assign p_Repl2_10_trunc_fu_3611_p2 = (ap_const_lv8_80 - tmp_150_reg_4509);
assign p_Repl2_11_fu_3687_p3 = ((tmp_70_reg_4451)? ap_const_lv32_0: res_V_fu_3566_p3);
assign p_Repl2_14_trunc_fu_3649_p2 = (ap_const_lv8_80 - tmp_153_reg_4530);
assign p_Repl2_2_trunc_fu_3535_p2 = (ap_const_lv8_82 - tmp_145_reg_4467);
assign p_Repl2_6_trunc_fu_3573_p2 = (ap_const_lv8_82 - tmp_147_reg_4488);
assign p_Repl2_8_fu_3708_p3 = ((tmp_101_reg_4514)? ap_const_lv32_0: res_V_11_fu_3680_p3);
assign p_Repl2_9_fu_3701_p3 = ((tmp_91_reg_4493)? ap_const_lv32_0: res_V_8_fu_3642_p3);
wire [4-1:0] p_Result_20_fu_3433_p4_vh_buf;
wire [4-1:0] p_Result_20_fu_3433_p4_vl_buf;
wire [13-1:0] p_Result_20_fu_3433_p4_vi_buf;
wire [13-1:0] p_Result_20_fu_3433_p4_vo_buf;
wire [13-1:0] p_Result_20_fu_3433_p4_vi_r;
wire [4:0] p_Result_20_fu_3433_p4_length;
wire [13-1:0] p_Result_20_fu_3433_p4_mask;

genvar ap_tvar_int_0;
generate
    for (ap_tvar_int_0 = 0; ap_tvar_int_0 < 13; ap_tvar_int_0 = ap_tvar_int_0 + 1) begin :p_Result_20_fu_3433_p4_label0
        assign p_Result_20_fu_3433_p4_vi_r[ap_tvar_int_0] = tmp_V_17_reg_4498[13-1-ap_tvar_int_0];
    end
endgenerate

assign p_Result_20_fu_3433_p4_vh_buf = (tmp_97_fu_3427_p2 >= tmp_96_fu_3419_p3)? tmp_97_fu_3427_p2 : (13 -1- tmp_97_fu_3427_p2);
assign p_Result_20_fu_3433_p4_vl_buf = (tmp_97_fu_3427_p2 >= tmp_96_fu_3419_p3)? tmp_96_fu_3419_p3 : (13 -1-tmp_96_fu_3419_p3);
assign p_Result_20_fu_3433_p4_vi_buf = (tmp_97_fu_3427_p2 >= tmp_96_fu_3419_p3)? tmp_V_17_reg_4498 : p_Result_20_fu_3433_p4_vi_r;
assign p_Result_20_fu_3433_p4_length = p_Result_20_fu_3433_p4_vh_buf - p_Result_20_fu_3433_p4_vl_buf + 1'b1;
assign p_Result_20_fu_3433_p4_mask = ~({13{1'b1}} << p_Result_20_fu_3433_p4_length);
assign p_Result_20_fu_3433_p4 = (p_Result_20_fu_3433_p4_vi_buf >> p_Result_20_fu_3433_p4_vl_buf) & p_Result_20_fu_3433_p4_mask;

wire [4-1:0] p_Result_25_fu_3502_p4_vh_buf;
wire [4-1:0] p_Result_25_fu_3502_p4_vl_buf;
wire [13-1:0] p_Result_25_fu_3502_p4_vi_buf;
wire [13-1:0] p_Result_25_fu_3502_p4_vo_buf;
wire [13-1:0] p_Result_25_fu_3502_p4_vi_r;
wire [4:0] p_Result_25_fu_3502_p4_length;
wire [13-1:0] p_Result_25_fu_3502_p4_mask;

genvar ap_tvar_int_1;
generate
    for (ap_tvar_int_1 = 0; ap_tvar_int_1 < 13; ap_tvar_int_1 = ap_tvar_int_1 + 1) begin :p_Result_25_fu_3502_p4_label0
        assign p_Result_25_fu_3502_p4_vi_r[ap_tvar_int_1] = tmp_V_18_reg_4519[13-1-ap_tvar_int_1];
    end
endgenerate

assign p_Result_25_fu_3502_p4_vh_buf = (tmp_107_fu_3496_p2 >= tmp_106_fu_3488_p3)? tmp_107_fu_3496_p2 : (13 -1- tmp_107_fu_3496_p2);
assign p_Result_25_fu_3502_p4_vl_buf = (tmp_107_fu_3496_p2 >= tmp_106_fu_3488_p3)? tmp_106_fu_3488_p3 : (13 -1-tmp_106_fu_3488_p3);
assign p_Result_25_fu_3502_p4_vi_buf = (tmp_107_fu_3496_p2 >= tmp_106_fu_3488_p3)? tmp_V_18_reg_4519 : p_Result_25_fu_3502_p4_vi_r;
assign p_Result_25_fu_3502_p4_length = p_Result_25_fu_3502_p4_vh_buf - p_Result_25_fu_3502_p4_vl_buf + 1'b1;
assign p_Result_25_fu_3502_p4_mask = ~({13{1'b1}} << p_Result_25_fu_3502_p4_length);
assign p_Result_25_fu_3502_p4 = (p_Result_25_fu_3502_p4_vi_buf >> p_Result_25_fu_3502_p4_vl_buf) & p_Result_25_fu_3502_p4_mask;

assign p_Result_28_fu_1394_p1 = $unsigned(tmp_7_fu_1387_p3);
assign p_Result_29_fu_1550_p1 = $unsigned(tmp_23_fu_1543_p3);
assign p_Result_30_fu_845_p1 = $unsigned(tmp_38_fu_837_p3);
assign p_Result_31_fu_2295_p5 = {{tmp_i_fu_2288_p3}, {ap_const_lv5_0[32'd2 : 32'd0]}};
assign p_Result_32_fu_2445_p5 = {{tmp_1_i_fu_2438_p3}, {ap_const_lv5_0[32'd2 : 32'd0]}};

integer ap_tvar_int_2;

always @ (tmp_V_15_fu_3069_p3) begin
    for (ap_tvar_int_2 = 17 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > ap_const_lv32_10 - ap_const_lv32_0) begin
            p_Result_33_fu_3076_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_33_fu_3076_p4[ap_tvar_int_2] = tmp_V_15_fu_3069_p3[ap_const_lv32_10 - ap_tvar_int_2];
        end
    end
end


assign p_Result_34_fu_3086_p3 = {{ap_const_lv15_7FFF}, {p_Result_33_fu_3076_p4}};
assign p_Result_35_fu_3540_p4 = {{{isneg_13_reg_4261}, {p_Repl2_2_trunc_fu_3535_p2}}, {ap_const_lv23_0}};
assign p_Result_36_fu_3557_p4 = {{{isneg_13_reg_4261}, {p_Repl2_2_trunc_fu_3535_p2}}, {man_V_18_fu_3552_p2}};

integer ap_tvar_int_3;

always @ (tmp_V_16_fu_3120_p3) begin
    for (ap_tvar_int_3 = 17 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > ap_const_lv32_10 - ap_const_lv32_0) begin
            p_Result_37_fu_3127_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_37_fu_3127_p4[ap_tvar_int_3] = tmp_V_16_fu_3120_p3[ap_const_lv32_10 - ap_tvar_int_3];
        end
    end
end


assign p_Result_38_fu_3137_p3 = {{ap_const_lv15_7FFF}, {p_Result_37_fu_3127_p4}};
assign p_Result_39_fu_3578_p4 = {{{isneg_14_reg_4286}, {p_Repl2_6_trunc_fu_3573_p2}}, {ap_const_lv23_0}};
assign p_Result_3_i_fu_2124_p4 = {{p_Val2_10_fu_2016_p2[ap_const_lv32_1A : ap_const_lv32_19]}};
assign p_Result_40_fu_3595_p4 = {{{isneg_14_reg_4286}, {p_Repl2_6_trunc_fu_3573_p2}}, {man_V_19_fu_3590_p2}};

integer ap_tvar_int_4;

always @ (tmp_V_17_fu_3171_p3) begin
    for (ap_tvar_int_4 = 13 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > ap_const_lv32_C - ap_const_lv32_0) begin
            p_Result_41_fu_3178_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_41_fu_3178_p4[ap_tvar_int_4] = tmp_V_17_fu_3171_p3[ap_const_lv32_C - ap_tvar_int_4];
        end
    end
end


assign p_Result_42_fu_3188_p3 = {{ap_const_lv19_7FFFF}, {p_Result_41_fu_3178_p4}};
assign p_Result_43_fu_3616_p4 = {{{isneg_18_reg_4437}, {p_Repl2_10_trunc_fu_3611_p2}}, {ap_const_lv23_0}};
assign p_Result_44_fu_3633_p4 = {{{isneg_18_reg_4437}, {p_Repl2_10_trunc_fu_3611_p2}}, {man_V_20_fu_3628_p2}};

integer ap_tvar_int_5;

always @ (tmp_V_18_fu_3222_p3) begin
    for (ap_tvar_int_5 = 13 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > ap_const_lv32_C - ap_const_lv32_0) begin
            p_Result_45_fu_3229_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            p_Result_45_fu_3229_p4[ap_tvar_int_5] = tmp_V_18_fu_3222_p3[ap_const_lv32_C - ap_tvar_int_5];
        end
    end
end


assign p_Result_46_fu_3239_p3 = {{ap_const_lv19_7FFFF}, {p_Result_45_fu_3229_p4}};
assign p_Result_47_fu_3654_p4 = {{{isneg_19_reg_4444}, {p_Repl2_14_trunc_fu_3649_p2}}, {ap_const_lv23_0}};
assign p_Result_48_fu_3671_p4 = {{{isneg_19_reg_4444}, {p_Repl2_14_trunc_fu_3649_p2}}, {man_V_21_fu_3666_p2}};
wire [5-1:0] p_Result_8_fu_3364_p4_vh_buf;
wire [5-1:0] p_Result_8_fu_3364_p4_vl_buf;
wire [17-1:0] p_Result_8_fu_3364_p4_vi_buf;
wire [17-1:0] p_Result_8_fu_3364_p4_vo_buf;
wire [17-1:0] p_Result_8_fu_3364_p4_vi_r;
wire [5:0] p_Result_8_fu_3364_p4_length;
wire [17-1:0] p_Result_8_fu_3364_p4_mask;

genvar ap_tvar_int_6;
generate
    for (ap_tvar_int_6 = 0; ap_tvar_int_6 < 17; ap_tvar_int_6 = ap_tvar_int_6 + 1) begin :p_Result_8_fu_3364_p4_label0
        assign p_Result_8_fu_3364_p4_vi_r[ap_tvar_int_6] = tmp_V_16_reg_4477[17-1-ap_tvar_int_6];
    end
endgenerate

assign p_Result_8_fu_3364_p4_vh_buf = (tmp_87_fu_3358_p2 >= tmp_86_fu_3350_p3)? tmp_87_fu_3358_p2 : (17 -1- tmp_87_fu_3358_p2);
assign p_Result_8_fu_3364_p4_vl_buf = (tmp_87_fu_3358_p2 >= tmp_86_fu_3350_p3)? tmp_86_fu_3350_p3 : (17 -1-tmp_86_fu_3350_p3);
assign p_Result_8_fu_3364_p4_vi_buf = (tmp_87_fu_3358_p2 >= tmp_86_fu_3350_p3)? tmp_V_16_reg_4477 : p_Result_8_fu_3364_p4_vi_r;
assign p_Result_8_fu_3364_p4_length = p_Result_8_fu_3364_p4_vh_buf - p_Result_8_fu_3364_p4_vl_buf + 1'b1;
assign p_Result_8_fu_3364_p4_mask = ~({17{1'b1}} << p_Result_8_fu_3364_p4_length);
assign p_Result_8_fu_3364_p4 = (p_Result_8_fu_3364_p4_vi_buf >> p_Result_8_fu_3364_p4_vl_buf) & p_Result_8_fu_3364_p4_mask;

assign p_Result_i_fu_2058_p4 = {{p_Val2_7_fu_1986_p2[ap_const_lv32_1A : ap_const_lv32_19]}};
wire [5-1:0] p_Result_s_fu_3295_p4_vh_buf;
wire [5-1:0] p_Result_s_fu_3295_p4_vl_buf;
wire [17-1:0] p_Result_s_fu_3295_p4_vi_buf;
wire [17-1:0] p_Result_s_fu_3295_p4_vo_buf;
wire [17-1:0] p_Result_s_fu_3295_p4_vi_r;
wire [5:0] p_Result_s_fu_3295_p4_length;
wire [17-1:0] p_Result_s_fu_3295_p4_mask;

genvar ap_tvar_int_7;
generate
    for (ap_tvar_int_7 = 0; ap_tvar_int_7 < 17; ap_tvar_int_7 = ap_tvar_int_7 + 1) begin :p_Result_s_fu_3295_p4_label0
        assign p_Result_s_fu_3295_p4_vi_r[ap_tvar_int_7] = tmp_V_15_reg_4456[17-1-ap_tvar_int_7];
    end
endgenerate

assign p_Result_s_fu_3295_p4_vh_buf = (tmp_76_fu_3289_p2 >= tmp_75_fu_3281_p3)? tmp_76_fu_3289_p2 : (17 -1- tmp_76_fu_3289_p2);
assign p_Result_s_fu_3295_p4_vl_buf = (tmp_76_fu_3289_p2 >= tmp_75_fu_3281_p3)? tmp_75_fu_3281_p3 : (17 -1-tmp_75_fu_3281_p3);
assign p_Result_s_fu_3295_p4_vi_buf = (tmp_76_fu_3289_p2 >= tmp_75_fu_3281_p3)? tmp_V_15_reg_4456 : p_Result_s_fu_3295_p4_vi_r;
assign p_Result_s_fu_3295_p4_length = p_Result_s_fu_3295_p4_vh_buf - p_Result_s_fu_3295_p4_vl_buf + 1'b1;
assign p_Result_s_fu_3295_p4_mask = ~({17{1'b1}} << p_Result_s_fu_3295_p4_length);
assign p_Result_s_fu_3295_p4 = (p_Result_s_fu_3295_p4_vi_buf >> p_Result_s_fu_3295_p4_vl_buf) & p_Result_s_fu_3295_p4_mask;

assign p_Val2_0_i_i121_in_i_fu_2630_p3 = ((isNeg_reg_3787)? tmp_12_i_fu_2616_p2: tmp_14_i_cast_fu_2626_p1);
assign p_Val2_0_i_i129_in_i_fu_2790_p3 = ((isNeg_2_reg_3793)? tmp_28_i_fu_2777_p2: tmp_30_i_cast_fu_2786_p1);
assign p_Val2_10_fu_2016_p0 = $signed(tmp_6_i_i_fu_2002_p3);
assign p_Val2_10_fu_2016_p2 = (p_Val2_10_fu_2016_p0 + tmp_7_i_i_fu_2013_p1);
assign p_Val2_11_fu_2464_p0 = p_Val2_61_reg_4247;
assign p_Val2_11_fu_2464_p1 = p_Result_32_fu_2445_p5;
assign p_Val2_11_fu_2464_p2 = ($signed(p_Val2_11_fu_2464_p0) * $signed(p_Val2_11_fu_2464_p1));
assign p_Val2_1_i_fu_2257_p3 = ((underflow_2_fu_2228_p2)? ap_const_lv5_10: p_Val2_14_reg_4295);
assign p_Val2_2_i_fu_2590_p3 = ((underflow_4_fu_2560_p2)? ap_const_lv14_2000: p_Val2_38_reg_4356);
assign p_Val2_32_fu_2314_p0 = p_Val2_63_reg_4254;
assign p_Val2_32_fu_2314_p1 = p_Result_31_fu_2295_p5;
assign p_Val2_32_fu_2314_p2 = ($signed(p_Val2_32_fu_2314_p0) * $signed(p_Val2_32_fu_2314_p1));
assign p_Val2_34_mux_i_fu_2196_p3 = ((brmerge_i_i1_i_fu_2178_p2)? ap_const_lv5_F: p_Val2_12_reg_4270);
assign p_Val2_36_fu_2430_p3 = ((brmerge_i1_fu_2410_p2)? p_Val2_47_mux_i_fu_2416_p3: p_Val2_i1_fu_2423_p3);
assign p_Val2_36_mux_i_fu_2250_p3 = ((brmerge_i_i_i_fu_2232_p2)? ap_const_lv5_F: p_Val2_14_reg_4295);
assign p_Val2_37_fu_2481_p0 = $signed(tmp_6_i_fu_2470_p3);
assign p_Val2_37_fu_2481_p2 = (p_Val2_37_fu_2481_p0 - p_Val2_11_fu_2464_p2);
assign p_Val2_40_fu_2662_p1 = p_in_i_fu_2655_p3[27:0];
assign p_Val2_42_fu_2670_p2 = (i_reg_V + p_Val2_40_fu_2662_p1);
assign p_Val2_43_fu_2637_p1 = p_Val2_0_i_i121_in_i_fu_2630_p3[27:0];
assign p_Val2_44_fu_2694_p0 = $signed(p_Val2_43_reg_4379);
assign p_Val2_44_fu_2694_p1 = $signed(p_Val2_42_reg_4384);
assign p_Val2_44_fu_2694_p2 = (p_Val2_44_fu_2694_p0 + p_Val2_44_fu_2694_p1);
assign p_Val2_45_fu_2708_p1 = p_Val2_44_fu_2694_p2[27:0];
assign p_Val2_47_fu_2676_p0 = control_in_reg_clr_in_sig;
assign p_Val2_47_fu_2676_p3 = ((p_Val2_47_fu_2676_p0)? p_5_reg_4212: p_Val2_42_fu_2670_p2);
assign p_Val2_47_mux_i_fu_2416_p3 = ((brmerge_i_i_i1_fu_2398_p2)? ap_const_lv14_1FFF: p_Val2_35_reg_4327);
assign p_Val2_4_fu_1255_p3 = ((sel_tmp27_reg_4002)? p_2_fu_1248_p3: sel_tmp25_reg_3997);
assign p_Val2_51_fu_2797_p1 = p_Val2_0_i_i129_in_i_fu_2790_p3[27:0];
assign p_Val2_52_fu_2821_p0 = $signed(tmp_31_i_fu_2805_p3);
assign p_Val2_52_fu_2821_p2 = (p_Val2_52_fu_2821_p0 - tmp_32_i_fu_2817_p1);
assign p_Val2_54_mux_i_fu_2750_p3 = ((brmerge_i_i_i2_fu_2732_p2)? ap_const_lv28_7FFFFFF: p_Val2_45_fu_2708_p1);
assign p_Val2_5_fu_1921_p0 = OP1_V_fu_1914_p1;
assign p_Val2_5_fu_1921_p1 = OP2_V_fu_1917_p1;
assign p_Val2_5_fu_1921_p2 = ($signed(p_Val2_5_fu_1921_p0) * $signed(p_Val2_5_fu_1921_p1));
assign p_Val2_6_fu_1934_p0 = OP1_V_1_fu_1927_p1;
assign p_Val2_6_fu_1934_p1 = OP2_V_1_fu_1930_p1;
assign p_Val2_6_fu_1934_p2 = ($signed(p_Val2_6_fu_1934_p0) * $signed(p_Val2_6_fu_1934_p1));
assign p_Val2_7_fu_1986_p0 = $signed(tmp_1_i_i_fu_1972_p3);
assign p_Val2_7_fu_1986_p2 = (p_Val2_7_fu_1986_p0 - tmp_2_i_i_fu_1983_p1);
assign p_Val2_8_fu_1950_p0 = OP1_V_fu_1914_p1;
assign p_Val2_8_fu_1950_p1 = OP2_V_1_fu_1930_p1;
assign p_Val2_8_fu_1950_p2 = ($signed(p_Val2_8_fu_1950_p0) * $signed(p_Val2_8_fu_1950_p1));
assign p_Val2_9_fu_1956_p0 = OP1_V_1_fu_1927_p1;
assign p_Val2_9_fu_1956_p1 = OP2_V_fu_1917_p1;
assign p_Val2_9_fu_1956_p2 = ($signed(p_Val2_9_fu_1956_p0) * $signed(p_Val2_9_fu_1956_p1));
assign p_Val2_i1_fu_2423_p3 = ((underflow_3_fu_2393_p2)? ap_const_lv14_2000: p_Val2_35_reg_4327);
assign p_Val2_i2_fu_2758_p3 = ((underflow_5_fu_2726_p2)? ap_const_lv28_8000000: p_Val2_45_fu_2708_p1);
assign p_Val2_i_fu_2203_p3 = ((underflow_1_fu_2174_p2)? ap_const_lv5_10: p_Val2_12_reg_4270);
assign p_in_i_fu_2655_p3 = ((isNeg_1_reg_3902)? tmp_18_i_fu_2641_p2: tmp_20_i_cast_fu_2651_p1);
assign p_not38_i1_i_fu_2086_p2 = (p_Result_i_fu_2058_p4 != ap_const_lv2_3? 1'b1: 1'b0);
assign p_not38_i_i1_fu_2382_p2 = (p_Result_i1_reg_4339 != ap_const_lv2_3? 1'b1: 1'b0);
assign p_not38_i_i_fu_2152_p2 = (p_Result_3_i_fu_2124_p4 != ap_const_lv2_3? 1'b1: 1'b0);
assign p_not38_i_i_i_fu_2549_p2 = (tmp_69_reg_4368 != ap_const_lv2_3? 1'b1: 1'b0);
assign p_not_i1_i_fu_2068_p2 = (p_Result_i_fu_2058_p4 != ap_const_lv2_0? 1'b1: 1'b0);
assign p_not_i_i1_fu_2356_p2 = (p_Result_i1_reg_4339 != ap_const_lv2_0? 1'b1: 1'b0);
assign p_not_i_i_fu_2134_p2 = (p_Result_3_i_fu_2124_p4 != ap_const_lv2_0? 1'b1: 1'b0);
assign p_not_i_i_i_fu_2523_p2 = (tmp_69_reg_4368 != ap_const_lv2_0? 1'b1: 1'b0);
assign p_s_fu_1776_p3 = ((isneg_reg_4063)? ap_const_lv16_FFFF: ap_const_lv16_0);
assign p_this_assign_fu_666_p3 = ((tmp_39_fu_660_p2)? ap_const_lv28_0: ap_const_lv28_8000000);
assign ph_est_V_fu_2597_p3 = ((brmerge1_i_fu_2577_p2)? ssdm_int_14_1024_0_true_V_write_assign_fu_2583_p3: p_Val2_2_i_fu_2590_p3);
assign pos1_fu_1011_p2 = (F2_2_reg_3960 + ap_const_lv12_2);
assign pos2_fu_1020_p2 = (F2_2_reg_3960 + ap_const_lv12_3);
assign r_V_fu_1097_p2 = ap_const_lv54_3FFFFFFFFFFFFF >> tmp_63_fu_1088_p1;
assign read_length_fu_631_p2 = iterations_in_sig << ap_const_lv32_4;
assign res_V_11_fu_3680_p3 = ((tmp_103_reg_4580)? p_Result_47_fu_3654_p4: p_Result_48_fu_3671_p4);
assign res_V_5_fu_3604_p3 = ((tmp_83_reg_4550)? p_Result_39_fu_3578_p4: p_Result_40_fu_3595_p4);
assign res_V_8_fu_3642_p3 = ((tmp_93_reg_4565)? p_Result_43_fu_3616_p4: p_Result_44_fu_3633_p4);
assign res_V_fu_3566_p3 = ((tmp_72_reg_4535)? p_Result_35_fu_3540_p4: p_Result_36_fu_3557_p4);
assign rev1_fu_1269_p2 = (tmp_127_reg_4026 ^ ap_const_lv1_1);
assign rev_fu_1043_p2 = (tmp_125_fu_1035_p3 ^ ap_const_lv1_1);
assign s_out_V_V_TDATA = {{{{p_Repl2_11_fu_3687_p3}, {p_Repl2_10_fu_3694_p3}}, {p_Repl2_9_fu_3701_p3}}, {p_Repl2_8_fu_3708_p3}};
assign second_r_V_fu_788_p4 = {{s_in_V_V_TDATA[ap_const_lv32_5F : ap_const_lv32_40]}};
assign sel_tmp10_fu_1658_p2 = (tmp_28_fu_1594_p2 & sel_tmp9_fu_1653_p2);
assign sel_tmp11_fu_1669_p2 = (sel_tmp30_demorgan_fu_1664_p2 ^ ap_const_lv1_1);
assign sel_tmp12_fu_1675_p2 = (tmp_25_fu_1567_p2 & sel_tmp11_fu_1669_p2);
assign sel_tmp13_fu_1849_p2 = (sel_tmp12_reg_4201 & tmp_30_reg_4180);
assign sel_tmp14_demorgan_fu_1525_p2 = (sel_tmp6_demorgan_fu_1508_p2 | tmp_9_fu_1411_p2);
assign sel_tmp14_fu_1687_p2 = (sel_tmp38_demorgan_fu_1681_p2 ^ ap_const_lv1_1);
assign sel_tmp15_fu_1693_p2 = (icmp1_fu_1619_p2 & sel_tmp14_fu_1687_p2);
assign sel_tmp16_fu_1853_p2 = (tmp_30_reg_4180 ^ ap_const_lv1_1);
assign sel_tmp17_fu_1858_p2 = (sel_tmp12_reg_4201 & sel_tmp16_fu_1853_p2);
assign sel_tmp18_fu_950_p3 = ((tmp_43_reg_3979)? tmp_119_reg_3985: ap_const_lv28_0);
assign sel_tmp19_fu_956_p2 = (tmp_43_reg_3979 ^ ap_const_lv1_1);
assign sel_tmp1_fu_1497_p2 = (tmp_8_reg_4074 ^ ap_const_lv1_1);
assign sel_tmp20_fu_961_p2 = (tmp_40_reg_3967 & sel_tmp19_fu_956_p2);
assign sel_tmp21_fu_966_p2 = (sel_tmp20_fu_961_p2 & tmp_49_fu_914_p2);
assign sel_tmp22_fu_972_p3 = ((sel_tmp21_fu_966_p2)? tmp_120_fu_933_p1: sel_tmp18_fu_950_p3);
assign sel_tmp23_fu_980_p2 = ($signed(F2_2_reg_3960) < $signed(12'b11010)? 1'b1: 1'b0);
assign sel_tmp24_fu_985_p2 = (sel_tmp23_fu_980_p2 & tmp_50_fu_919_p2);
assign sel_tmp25_fu_991_p3 = ((sel_tmp24_fu_985_p2)? tmp_123_fu_946_p1: sel_tmp22_fu_972_p3);
assign sel_tmp26_fu_999_p2 = (tmp_49_fu_914_p2 ^ ap_const_lv1_1);
assign sel_tmp27_fu_1005_p2 = (sel_tmp20_fu_961_p2 & sel_tmp26_fu_999_p2);
assign sel_tmp28_fu_1126_p2 = (tmp_58_fu_1029_p2 ^ ap_const_lv1_1);
assign sel_tmp29_fu_1305_p2 = (tmp2_reg_4052 | Range1_all_zeros_1_reg_4047);
assign sel_tmp2_fu_1502_p2 = (tmp_12_fu_1438_p2 & sel_tmp1_fu_1497_p2);
assign sel_tmp30_demorgan_fu_1664_p2 = (tmp_24_reg_4099 | tmp_28_fu_1594_p2);
assign sel_tmp30_fu_1144_p2 = (tmp_125_fu_1035_p3 | tmp_63_not_fu_1138_p2);
assign sel_tmp31_fu_1309_p2 = (tmp3_reg_4058 & tmp_58_reg_4007);
assign sel_tmp32_fu_1313_p3 = ((sel_tmp31_fu_1309_p2)? Range1_all_zeros_fu_1295_p2: sel_tmp29_fu_1305_p2);
assign sel_tmp33_fu_1321_p2 = (tmp_58_reg_4007 & or_cond89_i_fu_1286_p2);
assign sel_tmp34_fu_674_p2 = (tmp_39_fu_660_p2 ^ ap_const_lv1_1);
assign sel_tmp35_fu_1334_p3 = ((sel_tmp31_fu_1309_p2)? Range1_all_ones_1_reg_4019: tmp2_reg_4052);
assign sel_tmp36_fu_1348_p2 = (tmp_58_reg_4007 | newsignbit_fu_1261_p3);
assign sel_tmp37_fu_1741_p3 = ((tmp_66_fu_1736_p2)? p_this_assign_reg_3882: p_Val2_4_reg_4113);
assign sel_tmp38_demorgan_fu_1681_p2 = (sel_tmp30_demorgan_fu_1664_p2 | tmp_25_fu_1567_p2);
assign sel_tmp38_fu_1751_p3 = ((sel_tmp93_demorgan_fu_1747_p2)? sel_tmp37_fu_1741_p3: p_Val2_4_reg_4113);
assign sel_tmp39_fu_1763_p2 = (tmp67_fu_1758_p2 & tmp_57_reg_3991);
assign sel_tmp3_demorgan_i_fu_2933_p2 = (tmp_36_i_fu_2906_p2 | tmp_37_i_fu_2911_p2);
assign sel_tmp3_fu_1537_p2 = (icmp_fu_1463_p2 & sel_tmp_fu_1531_p2);
assign sel_tmp3_i_fu_2939_p2 = (sel_tmp3_demorgan_i_fu_2933_p2 ^ ap_const_lv1_1);
assign sel_tmp4_fu_1787_p2 = (tmp_14_reg_4143 ^ ap_const_lv1_1);
assign sel_tmp4_i_fu_2945_p2 = (tmp_38_i_fu_2916_p2 & sel_tmp3_i_fu_2939_p2);
assign sel_tmp5_fu_1792_p2 = (sel_tmp7_reg_4164 & sel_tmp4_fu_1787_p2);
assign sel_tmp6_demorgan_fu_1508_p2 = (tmp_8_reg_4074 | tmp_12_fu_1438_p2);
assign sel_tmp6_fu_1513_p2 = (sel_tmp6_demorgan_fu_1508_p2 ^ ap_const_lv1_1);
assign sel_tmp6_i_fu_2959_p2 = (tmp_36_i_fu_2906_p2 ^ ap_const_lv1_1);
assign sel_tmp7_fu_1519_p2 = (tmp_9_fu_1411_p2 & sel_tmp6_fu_1513_p2);
assign sel_tmp7_i_fu_2965_p2 = (tmp_37_i_fu_2911_p2 & sel_tmp6_i_fu_2959_p2);
assign sel_tmp8_fu_1783_p2 = (sel_tmp7_reg_4164 & tmp_14_reg_4143);
assign sel_tmp93_demorgan_fu_1747_p2 = (tmp_39_reg_3876 | tmp_57_reg_3991);
assign sel_tmp9_fu_1653_p2 = (tmp_24_reg_4099 ^ ap_const_lv1_1);
assign sel_tmp_fu_1531_p2 = (sel_tmp14_demorgan_fu_1525_p2 ^ ap_const_lv1_1);
assign sh_1_i_cast_fu_743_p1 = $signed(control_in_lf_out_gain_in_sig);
assign sh_amt_1_cast_fu_1590_p1 = $signed(sh_amt_1_fu_1582_p3);
assign sh_amt_1_fu_1582_p3 = ((tmp_25_fu_1567_p2)? tmp_26_fu_1572_p2: tmp_27_fu_1577_p2);
assign sh_amt_2_cast_fu_911_p1 = $signed(sh_amt_2_reg_3972);
assign sh_amt_2_fu_887_p3 = ((tmp_40_fu_869_p2)? tmp_41_fu_875_p2: tmp_42_fu_881_p2);
assign sh_amt_cast_fu_1434_p1 = $signed(sh_amt_fu_1426_p3);
assign sh_amt_fu_1426_p3 = ((tmp_9_fu_1411_p2)? tmp_10_fu_1416_p2: tmp_11_fu_1421_p2);
assign sh_assign_1_fu_707_p0 = tmp_15_i_cast_fu_704_p1;
assign sh_assign_1_fu_707_p2 = (sh_assign_1_fu_707_p0 + ap_const_lv9_9);
assign sh_assign_1_i_cast1_fu_696_p1 = $unsigned(sh_assign_fu_689_p3);
assign sh_assign_1_i_cast_fu_700_p1 = $unsigned(sh_assign_fu_689_p3);
assign sh_assign_2_fu_727_p3 = ((isNeg_1_fu_713_p3)? tmp_16_i_fu_721_p2: sh_assign_1_fu_707_p2);
assign sh_assign_3_fu_752_p2 = sh_1_i_cast_fu_743_p1;
assign sh_assign_3_fu_752_p3 = ((isNeg_2_reg_3793)? tmp_26_i_fu_746_p2: sh_assign_3_fu_752_p2);
assign sh_assign_3_i_cast1_fu_735_p1 = $signed(sh_assign_2_fu_727_p3);
assign sh_assign_3_i_cast_fu_739_p1 = $signed(sh_assign_2_fu_727_p3);
assign sh_assign_5_i_cast1_fu_759_p1 = $unsigned(sh_assign_3_fu_752_p3);
assign sh_assign_5_i_cast_fu_763_p1 = $unsigned(sh_assign_3_fu_752_p3);
assign sh_assign_fu_689_p2 = sh_i_cast_fu_680_p1;
assign sh_assign_fu_689_p3 = ((isNeg_reg_3787)? tmp_10_i_fu_683_p2: sh_assign_fu_689_p2);
assign sh_i_cast_fu_680_p1 = $signed(control_in_lf_p_in_sig);
assign sign_assign_not_fu_1714_p2 = (neg_src_reg_4120 ^ ap_const_lv1_1);
assign sin_adr_V_1_fu_2882_p3 = ((tmp_144_reg_4402)? sin_adr_V_reg_4408: cos_adr_V_3_fu_2871_p2);
assign sin_out_V_4_i_cast_fu_2902_p1 = $unsigned(cos_lut_q1);
assign sin_out_V_5_fu_3001_p3 = ((or_cond6_fu_2987_p2)? newSel8_fu_2979_p3: newSel9_fu_2993_p3);
assign sin_out_V_fu_2921_p2 = (ap_const_lv16_0 - sin_out_V_4_i_cast_fu_2902_p1);
assign ssdm_int_14_1024_0_true_V_write_assign_fu_2583_p3 = ((brmerge_i_i_i_i_fu_2565_p2)? ap_const_lv14_1FFF: p_Val2_38_reg_4356);
assign this_assign_mux_fu_1729_p3 = ((brmerge_i_i_fu_1709_p2)? ap_const_lv28_7FFFFFF: p_Val2_4_reg_4113);
assign tmp1_fu_1062_p2 = (lD_fu_1058_p1 & rev_fu_1043_p2);
assign tmp2_fu_1132_p2 = (rev_fu_1043_p2 | sel_tmp28_fu_1126_p2);
assign tmp3_fu_1150_p2 = (tmp_65_fu_1115_p2 & sel_tmp30_fu_1144_p2);
assign tmp4_fu_1719_p2 = (overflow_reg_4126 | sign_assign_not_fu_1714_p2);
assign tmp67_fu_1758_p2 = (brmerge_fu_1724_p2 & sel_tmp34_reg_3887);
assign tmp_100_fu_1493_p1 = tmp_20_fu_1487_p2[15:0];
assign tmp_101_cast_fu_3389_p3 = ((tmp_88_fu_3373_p2)? tmp_89_fu_3383_p2: ap_const_lv23_0);
assign tmp_101_fu_3208_p2 = (p_Val2_67_reg_4431 == ap_const_lv12_0? 1'b1: 1'b0);

always @ (p_Result_46_fu_3239_p3) begin
    if (p_Result_46_fu_3239_p3[0] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd0;
    end else if (p_Result_46_fu_3239_p3[1] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd1;
    end else if (p_Result_46_fu_3239_p3[2] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd2;
    end else if (p_Result_46_fu_3239_p3[3] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd3;
    end else if (p_Result_46_fu_3239_p3[4] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd4;
    end else if (p_Result_46_fu_3239_p3[5] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd5;
    end else if (p_Result_46_fu_3239_p3[6] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd6;
    end else if (p_Result_46_fu_3239_p3[7] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd7;
    end else if (p_Result_46_fu_3239_p3[8] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd8;
    end else if (p_Result_46_fu_3239_p3[9] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd9;
    end else if (p_Result_46_fu_3239_p3[10] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd10;
    end else if (p_Result_46_fu_3239_p3[11] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd11;
    end else if (p_Result_46_fu_3239_p3[12] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd12;
    end else if (p_Result_46_fu_3239_p3[13] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd13;
    end else if (p_Result_46_fu_3239_p3[14] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd14;
    end else if (p_Result_46_fu_3239_p3[15] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd15;
    end else if (p_Result_46_fu_3239_p3[16] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd16;
    end else if (p_Result_46_fu_3239_p3[17] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd17;
    end else if (p_Result_46_fu_3239_p3[18] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd18;
    end else if (p_Result_46_fu_3239_p3[19] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd19;
    end else if (p_Result_46_fu_3239_p3[20] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd20;
    end else if (p_Result_46_fu_3239_p3[21] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd21;
    end else if (p_Result_46_fu_3239_p3[22] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd22;
    end else if (p_Result_46_fu_3239_p3[23] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd23;
    end else if (p_Result_46_fu_3239_p3[24] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd24;
    end else if (p_Result_46_fu_3239_p3[25] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd25;
    end else if (p_Result_46_fu_3239_p3[26] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd26;
    end else if (p_Result_46_fu_3239_p3[27] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd27;
    end else if (p_Result_46_fu_3239_p3[28] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd28;
    end else if (p_Result_46_fu_3239_p3[29] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd29;
    end else if (p_Result_46_fu_3239_p3[30] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd30;
    end else if (p_Result_46_fu_3239_p3[31] == 1'b1) begin
        tmp_102_fu_3247_p3 = 32'd31;
    end else begin
        tmp_102_fu_3247_p3 = 32'd32;
    end
end


assign tmp_103_fu_3471_p2 = (tmp_102_reg_4524 == ap_const_lv32_C? 1'b1: 1'b0);
assign tmp_104_fu_3476_p2 = ($signed(j_3_fu_3466_p2) > $signed(32'b10111)? 1'b1: 1'b0);
assign tmp_105_fu_3482_p2 = (j_3_fu_3466_p2 + ap_const_lv32_FFFFFFE9);
assign tmp_106_fu_3488_p3 = ((tmp_104_fu_3476_p2)? tmp_105_fu_3482_p2: ap_const_lv32_0);
assign tmp_107_fu_3496_p2 = (j_3_fu_3466_p2 + ap_const_lv32_FFFFFFFF);
assign tmp_108_fu_3511_p2 = ($signed(j_3_fu_3466_p2) < $signed(32'b10111)? 1'b1: 1'b0);
assign tmp_109_fu_3521_p2 = (ap_const_lv23_17 - tmp_154_fu_3517_p1);
assign tmp_10_fu_1416_p2 = (F2_reg_4080 + ap_const_lv12_FF3);
assign tmp_10_i_fu_683_p1 = sh_i_cast_fu_680_p1;
assign tmp_10_i_fu_683_p2 = (ap_const_lv9_0 - tmp_10_i_fu_683_p1);
assign tmp_110_fu_1206_p1 = ireg_V_1_fu_1202_p1[62:0];
assign tmp_112_fu_1232_p1 = ireg_V_1_fu_1202_p1[51:0];
assign tmp_113_fu_1599_p1 = man_V_5_fu_1560_p3[15:0];
assign tmp_114_cast_fu_3458_p3 = ((tmp_98_fu_3442_p2)? tmp_99_fu_3452_p2: ap_const_lv23_0);
assign tmp_114_fu_1609_p4 = {{sh_amt_1_fu_1582_p3[ap_const_lv32_B : ap_const_lv32_4]}};
assign tmp_115_fu_1635_p1 = tmp_33_fu_1629_p2[15:0];
assign tmp_116_fu_1649_p1 = tmp_36_fu_1643_p2[15:0];
assign tmp_118_fu_834_p1 = ireg_V_2_reg_3869[51:0];
assign tmp_119_fu_901_p1 = man_V_17_fu_855_p3[27:0];
assign tmp_11_fu_1421_p2 = (ap_const_lv12_D - F2_reg_4080);
assign tmp_11_i_fu_2612_p1 = $signed(tmp_i2_fu_2605_p3);
assign tmp_120_fu_933_p1 = tmp_52_fu_928_p2[27:0];
assign tmp_123_fu_946_p1 = tmp_55_fu_940_p2[27:0];
assign tmp_125_fu_1035_p3 = pos1_fu_1011_p2[ap_const_lv32_B];
assign tmp_127_cast_fu_3527_p3 = ((tmp_108_fu_3511_p2)? tmp_109_fu_3521_p2: ap_const_lv23_0);
assign tmp_12_fu_1438_p2 = (F2_reg_4080 == ap_const_lv12_D? 1'b1: 1'b0);
assign tmp_12_i_fu_2616_p0 = tmp_11_i_fu_2612_p1;
assign tmp_12_i_fu_2616_p2 = tmp_12_i_fu_2616_p0 << sh_assign_1_i_cast_reg_3897;
assign tmp_145_fu_3102_p1 = tmp_71_fu_3094_p3[7:0];
assign tmp_146_fu_3310_p1 = j_fu_3259_p2[22:0];
assign tmp_147_fu_3153_p1 = tmp_82_fu_3145_p3[7:0];
assign tmp_148_fu_3379_p1 = j_1_fu_3328_p2[22:0];
assign tmp_14_fu_1447_p2 = (sh_amt_fu_1426_p3 < ap_const_lv12_36? 1'b1: 1'b0);
assign tmp_14_i_cast_fu_2626_p1 = $unsigned(tmp_14_i_fu_2621_p2);
assign tmp_14_i_fu_2621_p2 = $signed(tmp_i2_fu_2605_p3) >>> sh_assign_1_i_cast1_reg_3892;
assign tmp_150_fu_3204_p1 = tmp_92_fu_3196_p3[7:0];
assign tmp_151_fu_3448_p1 = j_2_fu_3397_p2[22:0];
assign tmp_153_fu_3255_p1 = tmp_102_fu_3247_p3[7:0];
assign tmp_154_fu_3517_p1 = j_3_fu_3466_p2[22:0];
assign tmp_15_fu_499_p1 = m_mm2s_ctl_RDATA[1:0];
assign tmp_15_i_cast_fu_704_p1 = $signed(control_in_lf_i_in_sig);
assign tmp_16_fu_1469_p0 = sh_amt_cast_fu_1434_p1;
assign tmp_16_fu_1469_p1 = $unsigned(tmp_16_fu_1469_p0);
assign tmp_16_i_fu_721_p1 = tmp_15_i_cast_fu_704_p1;
assign tmp_16_i_fu_721_p2 = (ap_const_lv9_1F7 - tmp_16_i_fu_721_p1);
assign tmp_17_fu_1473_p2 = $signed(man_V_2_fu_1404_p3) >>> tmp_16_fu_1469_p1;
assign tmp_18_i_fu_2641_p0 = tmp_11_i_fu_2612_p1;
assign tmp_18_i_fu_2641_p2 = tmp_18_i_fu_2641_p0 << sh_assign_3_i_cast_reg_3912;
assign tmp_1_fu_555_p3 = {{tmp_29_reg_3819}, {ap_const_lv1_1}};
assign tmp_1_i_fu_2438_p3 = {{tmp_133_reg_4316}, {ap_const_lv1_1}};
assign tmp_1_i_i_fu_1972_p3 = {{tmp_68_reg_4232}, {ap_const_lv11_0}};
assign tmp_20_fu_1487_p0 = $signed(tmp_78_fu_1443_p1);
assign tmp_20_fu_1487_p1 = sh_amt_cast_fu_1434_p1;
assign tmp_20_fu_1487_p2 = tmp_20_fu_1487_p0 << tmp_20_fu_1487_p1;
assign tmp_20_i_cast_fu_2651_p1 = $unsigned(tmp_20_i_fu_2646_p2);
assign tmp_20_i_fu_2646_p2 = $signed(tmp_i2_fu_2605_p3) >>> sh_assign_3_i_cast1_reg_3907;
assign tmp_21_fu_513_p1 = m_s2mm_ctl_RDATA[1:0];
assign tmp_22_fu_1228_p1 = $unsigned(exp_tmp_V_1_fu_1218_p4);
assign tmp_23_fu_1543_p3 = {{ap_const_lv1_1}, {tmp_112_reg_4094}};
assign tmp_24_fu_1236_p2 = (tmp_110_fu_1206_p1 == ap_const_lv63_0? 1'b1: 1'b0);
assign tmp_24_i_fu_2720_p2 = (newsignbit_5_fu_2712_p3 ^ ap_const_lv1_1);
assign tmp_25_fu_1567_p2 = ($signed(F2_1_reg_4105) > $signed(12'b1101)? 1'b1: 1'b0);
assign tmp_25_i_fu_2766_p3 = ((brmerge_i2_fu_2744_p2)? p_Val2_54_mux_i_fu_2750_p3: p_Val2_i2_fu_2758_p3);
assign tmp_26_fu_1572_p2 = (F2_1_reg_4105 + ap_const_lv12_FF3);
assign tmp_26_i_fu_746_p1 = sh_1_i_cast_fu_743_p1;
assign tmp_26_i_fu_746_p2 = (ap_const_lv9_0 - tmp_26_i_fu_746_p1);
assign tmp_27_fu_1577_p2 = (ap_const_lv12_D - F2_1_reg_4105);
assign tmp_28_fu_1594_p2 = (F2_1_reg_4105 == ap_const_lv12_D? 1'b1: 1'b0);
assign tmp_28_i_fu_2777_p0 = $signed(tmp_25_i_reg_4389);
assign tmp_28_i_fu_2777_p2 = tmp_28_i_fu_2777_p0 << sh_assign_5_i_cast_reg_3922;
assign tmp_2_fu_599_p4 = {{{tmp_31_reg_3829}, {ap_const_lv1_1}}, {tmp_34_reg_3834}};
assign tmp_2_i_i_fu_1983_p1 = $unsigned(p_Val2_6_reg_4227);
assign tmp_30_fu_1603_p2 = (sh_amt_1_fu_1582_p3 < ap_const_lv12_36? 1'b1: 1'b0);
assign tmp_30_i_cast_fu_2786_p1 = $unsigned(tmp_30_i_fu_2782_p2);
assign tmp_30_i_fu_2782_p2 = $signed(tmp_25_i_reg_4389) >>> sh_assign_5_i_cast1_reg_3917;
assign tmp_31_i_fu_2805_p3 = {{phase_angle_V}, {ap_const_lv11_0}};
assign tmp_32_fu_1625_p0 = sh_amt_1_cast_fu_1590_p1;
assign tmp_32_fu_1625_p1 = $unsigned(tmp_32_fu_1625_p0);
assign tmp_32_i_fu_2817_p1 = $unsigned(p_Val2_51_fu_2797_p1);
assign tmp_33_fu_1629_p2 = $signed(man_V_5_fu_1560_p3) >>> tmp_32_fu_1625_p1;
assign tmp_34_fu_581_p1 = m_mm2s_ctl_RDATA[11:0];
assign tmp_34_i_fu_2888_p1 = $unsigned(cos_adr_V_fu_2876_p3);
assign tmp_35_i_fu_2893_p1 = $unsigned(sin_adr_V_1_fu_2882_p3);
assign tmp_36_fu_1643_p0 = $signed(tmp_113_fu_1599_p1);
assign tmp_36_fu_1643_p1 = sh_amt_1_cast_fu_1590_p1;
assign tmp_36_fu_1643_p2 = tmp_36_fu_1643_p0 << tmp_36_fu_1643_p1;
assign tmp_36_i_fu_2906_p2 = (msb_V_reg_4395 == ap_const_lv2_1? 1'b1: 1'b0);
assign tmp_37_i_fu_2911_p2 = (msb_V_reg_4395 == ap_const_lv2_0? 1'b1: 1'b0);
assign tmp_38_fu_837_p3 = {{ap_const_lv1_1}, {tmp_118_fu_834_p1}};
assign tmp_38_i_fu_2916_p2 = (msb_V_reg_4395 == ap_const_lv2_3? 1'b1: 1'b0);
assign tmp_39_fu_660_p2 = (tmp_46_fu_656_p1 == ap_const_lv63_0? 1'b1: 1'b0);
assign tmp_3_fu_1182_p1 = $unsigned(exp_tmp_V_fu_1172_p4);
assign tmp_3_i_fu_2218_p2 = (isneg_14_reg_4286 ^ ap_const_lv1_1);
assign tmp_40_fu_869_p2 = ($signed(F2_2_fu_863_p2) > $signed(12'b11010)? 1'b1: 1'b0);
assign tmp_41_fu_875_p2 = (F2_2_fu_863_p2 + ap_const_lv12_FE6);
assign tmp_42_fu_881_p2 = (ap_const_lv12_1A - F2_2_fu_863_p2);
assign tmp_43_fu_895_p2 = (F2_2_fu_863_p2 == ap_const_lv12_1A? 1'b1: 1'b0);
assign tmp_45_fu_595_p1 = m_s2mm_ctl_RDATA[11:0];
assign tmp_46_fu_656_p1 = ireg_V_2_fu_652_p1[62:0];
assign tmp_49_fu_914_p2 = (sh_amt_2_reg_3972 < ap_const_lv12_36? 1'b1: 1'b0);
assign tmp_4_fu_563_p3 = {{tmp_37_reg_3824}, {ap_const_lv1_1}};
assign tmp_4_i_fu_2366_p2 = (isneg_15_reg_4321 ^ ap_const_lv1_1);
assign tmp_50_fu_919_p2 = (sh_amt_2_reg_3972 < ap_const_lv12_1C? 1'b1: 1'b0);
assign tmp_51_fu_924_p0 = sh_amt_2_cast_fu_911_p1;
assign tmp_51_fu_924_p1 = $unsigned(tmp_51_fu_924_p0);
assign tmp_52_fu_928_p2 = $signed(man_V_17_reg_3952) >>> tmp_51_fu_924_p1;
assign tmp_55_fu_940_p0 = $signed(tmp_119_reg_3985);
assign tmp_55_fu_940_p1 = sh_amt_2_cast_fu_911_p1;
assign tmp_55_fu_940_p2 = tmp_55_fu_940_p0 << tmp_55_fu_940_p1;
assign tmp_56_fu_1160_p1 = ireg_V_fu_1156_p1[62:0];
assign tmp_57_fu_905_p2 = ($signed(exp_V_fu_828_p2) > $signed(12'b000000000000)? 1'b1: 1'b0);
assign tmp_58_fu_1029_p2 = ($signed(pos1_fu_1011_p2) < $signed(12'b110110)? 1'b1: 1'b0);
assign tmp_59_fu_1049_p0 = $signed(pos1_fu_1011_p2);
assign tmp_59_fu_1049_p1 = $unsigned(tmp_59_fu_1049_p0);
assign tmp_5_fu_608_p4 = {{{tmp_44_reg_3839}, {ap_const_lv1_1}}, {tmp_45_reg_3844}};
assign tmp_60_fu_1053_p2 = $signed(man_V_17_reg_3952) >>> tmp_59_fu_1049_p1;
assign tmp_61_fu_1082_p2 = ($signed(pos2_fu_1020_p2) < $signed(12'b110110)? 1'b1: 1'b0);
assign tmp_62_fu_1186_p1 = ireg_V_fu_1156_p1[51:0];
assign tmp_63_fu_1088_p0 = $signed(pos2_fu_1020_p2);
assign tmp_63_fu_1088_p1 = $unsigned(tmp_63_fu_1088_p0);
assign tmp_63_not_fu_1138_p2 = (tmp_61_fu_1082_p2 ^ ap_const_lv1_1);
assign tmp_64_fu_1109_p2 = (Range2_V_1_fu_1092_p2 == ap_const_lv54_0? 1'b1: 1'b0);
assign tmp_65_fu_1115_p2 = (pos2_fu_1020_p2 == ap_const_lv12_36? 1'b1: 1'b0);
assign tmp_66_fu_1736_p2 = (tmp_39_reg_3876 | underflow_fu_1704_p2);
assign tmp_67_fu_1370_p2 = (isneg_12_reg_3945 ^ ap_const_lv1_1);
assign tmp_6_fu_767_p2 = ($signed(i_reg_448) < $signed(iterations_in_sig)? 1'b1: 1'b0);
assign tmp_6_i_fu_2470_p3 = {{p_Val2_36_reg_4345}, {ap_const_lv5_0}};
assign tmp_6_i_i_fu_2002_p3 = {{tmp_111_reg_4242}, {ap_const_lv11_0}};
assign tmp_70_fu_3055_p2 = (p_Val2_61_reg_4247 == ap_const_lv16_0? 1'b1: 1'b0);

always @ (p_Result_34_fu_3086_p3) begin
    if (p_Result_34_fu_3086_p3[0] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd0;
    end else if (p_Result_34_fu_3086_p3[1] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd1;
    end else if (p_Result_34_fu_3086_p3[2] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd2;
    end else if (p_Result_34_fu_3086_p3[3] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd3;
    end else if (p_Result_34_fu_3086_p3[4] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd4;
    end else if (p_Result_34_fu_3086_p3[5] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd5;
    end else if (p_Result_34_fu_3086_p3[6] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd6;
    end else if (p_Result_34_fu_3086_p3[7] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd7;
    end else if (p_Result_34_fu_3086_p3[8] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd8;
    end else if (p_Result_34_fu_3086_p3[9] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd9;
    end else if (p_Result_34_fu_3086_p3[10] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd10;
    end else if (p_Result_34_fu_3086_p3[11] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd11;
    end else if (p_Result_34_fu_3086_p3[12] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd12;
    end else if (p_Result_34_fu_3086_p3[13] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd13;
    end else if (p_Result_34_fu_3086_p3[14] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd14;
    end else if (p_Result_34_fu_3086_p3[15] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd15;
    end else if (p_Result_34_fu_3086_p3[16] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd16;
    end else if (p_Result_34_fu_3086_p3[17] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd17;
    end else if (p_Result_34_fu_3086_p3[18] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd18;
    end else if (p_Result_34_fu_3086_p3[19] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd19;
    end else if (p_Result_34_fu_3086_p3[20] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd20;
    end else if (p_Result_34_fu_3086_p3[21] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd21;
    end else if (p_Result_34_fu_3086_p3[22] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd22;
    end else if (p_Result_34_fu_3086_p3[23] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd23;
    end else if (p_Result_34_fu_3086_p3[24] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd24;
    end else if (p_Result_34_fu_3086_p3[25] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd25;
    end else if (p_Result_34_fu_3086_p3[26] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd26;
    end else if (p_Result_34_fu_3086_p3[27] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd27;
    end else if (p_Result_34_fu_3086_p3[28] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd28;
    end else if (p_Result_34_fu_3086_p3[29] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd29;
    end else if (p_Result_34_fu_3086_p3[30] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd30;
    end else if (p_Result_34_fu_3086_p3[31] == 1'b1) begin
        tmp_71_fu_3094_p3 = 32'd31;
    end else begin
        tmp_71_fu_3094_p3 = 32'd32;
    end
end


assign tmp_72_fu_3264_p2 = (tmp_71_reg_4461 == ap_const_lv32_10? 1'b1: 1'b0);
assign tmp_73_fu_3269_p2 = ($signed(j_fu_3259_p2) > $signed(32'b10111)? 1'b1: 1'b0);
assign tmp_74_fu_3275_p2 = (j_fu_3259_p2 + ap_const_lv32_FFFFFFE9);
assign tmp_75_fu_3281_p3 = ((tmp_73_fu_3269_p2)? tmp_74_fu_3275_p2: ap_const_lv32_0);
assign tmp_76_fu_3289_p2 = (j_fu_3259_p2 + ap_const_lv32_FFFFFFFF);
assign tmp_77_fu_3304_p2 = ($signed(j_fu_3259_p2) < $signed(32'b10111)? 1'b1: 1'b0);
assign tmp_78_fu_1443_p1 = man_V_2_fu_1404_p3[15:0];
assign tmp_79_fu_3314_p2 = (ap_const_lv23_17 - tmp_146_fu_3310_p1);
assign tmp_7_fu_1387_p3 = {{ap_const_lv1_1}, {tmp_62_reg_4069}};
assign tmp_7_i_i_fu_2013_p1 = $unsigned(p_Val2_9_reg_4237);
assign tmp_80_fu_1453_p4 = {{sh_amt_fu_1426_p3[ap_const_lv32_B : ap_const_lv32_4]}};
assign tmp_81_fu_3106_p2 = (p_Val2_63_reg_4254 == ap_const_lv16_0? 1'b1: 1'b0);

always @ (p_Result_38_fu_3137_p3) begin
    if (p_Result_38_fu_3137_p3[0] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd0;
    end else if (p_Result_38_fu_3137_p3[1] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd1;
    end else if (p_Result_38_fu_3137_p3[2] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd2;
    end else if (p_Result_38_fu_3137_p3[3] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd3;
    end else if (p_Result_38_fu_3137_p3[4] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd4;
    end else if (p_Result_38_fu_3137_p3[5] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd5;
    end else if (p_Result_38_fu_3137_p3[6] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd6;
    end else if (p_Result_38_fu_3137_p3[7] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd7;
    end else if (p_Result_38_fu_3137_p3[8] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd8;
    end else if (p_Result_38_fu_3137_p3[9] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd9;
    end else if (p_Result_38_fu_3137_p3[10] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd10;
    end else if (p_Result_38_fu_3137_p3[11] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd11;
    end else if (p_Result_38_fu_3137_p3[12] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd12;
    end else if (p_Result_38_fu_3137_p3[13] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd13;
    end else if (p_Result_38_fu_3137_p3[14] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd14;
    end else if (p_Result_38_fu_3137_p3[15] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd15;
    end else if (p_Result_38_fu_3137_p3[16] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd16;
    end else if (p_Result_38_fu_3137_p3[17] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd17;
    end else if (p_Result_38_fu_3137_p3[18] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd18;
    end else if (p_Result_38_fu_3137_p3[19] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd19;
    end else if (p_Result_38_fu_3137_p3[20] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd20;
    end else if (p_Result_38_fu_3137_p3[21] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd21;
    end else if (p_Result_38_fu_3137_p3[22] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd22;
    end else if (p_Result_38_fu_3137_p3[23] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd23;
    end else if (p_Result_38_fu_3137_p3[24] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd24;
    end else if (p_Result_38_fu_3137_p3[25] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd25;
    end else if (p_Result_38_fu_3137_p3[26] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd26;
    end else if (p_Result_38_fu_3137_p3[27] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd27;
    end else if (p_Result_38_fu_3137_p3[28] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd28;
    end else if (p_Result_38_fu_3137_p3[29] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd29;
    end else if (p_Result_38_fu_3137_p3[30] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd30;
    end else if (p_Result_38_fu_3137_p3[31] == 1'b1) begin
        tmp_82_fu_3145_p3 = 32'd31;
    end else begin
        tmp_82_fu_3145_p3 = 32'd32;
    end
end


assign tmp_83_fu_3333_p2 = (tmp_82_reg_4482 == ap_const_lv32_10? 1'b1: 1'b0);
assign tmp_84_fu_3338_p2 = ($signed(j_1_fu_3328_p2) > $signed(32'b10111)? 1'b1: 1'b0);
assign tmp_85_fu_3344_p2 = (j_1_fu_3328_p2 + ap_const_lv32_FFFFFFE9);
assign tmp_86_fu_3350_p3 = ((tmp_84_fu_3338_p2)? tmp_85_fu_3344_p2: ap_const_lv32_0);
assign tmp_87_fu_3358_p2 = (j_1_fu_3328_p2 + ap_const_lv32_FFFFFFFF);
assign tmp_88_cast_fu_3320_p3 = ((tmp_77_fu_3304_p2)? tmp_79_fu_3314_p2: ap_const_lv23_0);
assign tmp_88_fu_3373_p2 = ($signed(j_1_fu_3328_p2) < $signed(32'b10111)? 1'b1: 1'b0);
assign tmp_89_fu_3383_p2 = (ap_const_lv23_17 - tmp_148_fu_3379_p1);
assign tmp_8_fu_1190_p2 = (tmp_56_fu_1160_p1 == ap_const_lv63_0? 1'b1: 1'b0);
assign tmp_90_fu_1479_p1 = tmp_17_fu_1473_p2[15:0];
assign tmp_91_fu_3157_p2 = (p_Val2_65_reg_4425 == ap_const_lv12_0? 1'b1: 1'b0);

always @ (p_Result_42_fu_3188_p3) begin
    if (p_Result_42_fu_3188_p3[0] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd0;
    end else if (p_Result_42_fu_3188_p3[1] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd1;
    end else if (p_Result_42_fu_3188_p3[2] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd2;
    end else if (p_Result_42_fu_3188_p3[3] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd3;
    end else if (p_Result_42_fu_3188_p3[4] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd4;
    end else if (p_Result_42_fu_3188_p3[5] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd5;
    end else if (p_Result_42_fu_3188_p3[6] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd6;
    end else if (p_Result_42_fu_3188_p3[7] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd7;
    end else if (p_Result_42_fu_3188_p3[8] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd8;
    end else if (p_Result_42_fu_3188_p3[9] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd9;
    end else if (p_Result_42_fu_3188_p3[10] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd10;
    end else if (p_Result_42_fu_3188_p3[11] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd11;
    end else if (p_Result_42_fu_3188_p3[12] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd12;
    end else if (p_Result_42_fu_3188_p3[13] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd13;
    end else if (p_Result_42_fu_3188_p3[14] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd14;
    end else if (p_Result_42_fu_3188_p3[15] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd15;
    end else if (p_Result_42_fu_3188_p3[16] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd16;
    end else if (p_Result_42_fu_3188_p3[17] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd17;
    end else if (p_Result_42_fu_3188_p3[18] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd18;
    end else if (p_Result_42_fu_3188_p3[19] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd19;
    end else if (p_Result_42_fu_3188_p3[20] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd20;
    end else if (p_Result_42_fu_3188_p3[21] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd21;
    end else if (p_Result_42_fu_3188_p3[22] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd22;
    end else if (p_Result_42_fu_3188_p3[23] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd23;
    end else if (p_Result_42_fu_3188_p3[24] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd24;
    end else if (p_Result_42_fu_3188_p3[25] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd25;
    end else if (p_Result_42_fu_3188_p3[26] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd26;
    end else if (p_Result_42_fu_3188_p3[27] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd27;
    end else if (p_Result_42_fu_3188_p3[28] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd28;
    end else if (p_Result_42_fu_3188_p3[29] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd29;
    end else if (p_Result_42_fu_3188_p3[30] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd30;
    end else if (p_Result_42_fu_3188_p3[31] == 1'b1) begin
        tmp_92_fu_3196_p3 = 32'd31;
    end else begin
        tmp_92_fu_3196_p3 = 32'd32;
    end
end


assign tmp_93_fu_3402_p2 = (tmp_92_reg_4503 == ap_const_lv32_C? 1'b1: 1'b0);
assign tmp_94_fu_3407_p2 = ($signed(j_2_fu_3397_p2) > $signed(32'b10111)? 1'b1: 1'b0);
assign tmp_95_fu_3413_p2 = (j_2_fu_3397_p2 + ap_const_lv32_FFFFFFE9);
assign tmp_96_fu_3419_p3 = ((tmp_94_fu_3407_p2)? tmp_95_fu_3413_p2: ap_const_lv32_0);
assign tmp_97_fu_3427_p2 = (j_2_fu_3397_p2 + ap_const_lv32_FFFFFFFF);
assign tmp_98_fu_3442_p2 = ($signed(j_2_fu_3397_p2) < $signed(32'b10111)? 1'b1: 1'b0);
assign tmp_99_fu_3452_p2 = (ap_const_lv23_17 - tmp_151_fu_3448_p1);
assign tmp_9_fu_1411_p2 = ($signed(F2_reg_4080) > $signed(12'b1101)? 1'b1: 1'b0);
assign tmp_9_i1_fu_2533_p2 = (isneg_16_reg_4350 ^ ap_const_lv1_1);
assign tmp_9_i_fu_2164_p2 = (isneg_13_reg_4261 ^ ap_const_lv1_1);
assign tmp_V_15_fu_3069_p2 = tmp_V_fu_3060_p1;
assign tmp_V_15_fu_3069_p3 = ((isneg_13_reg_4261)? tmp_V_1_fu_3063_p2: tmp_V_15_fu_3069_p2);
assign tmp_V_16_fu_3120_p2 = tmp_V_2_fu_3111_p1;
assign tmp_V_16_fu_3120_p3 = ((isneg_14_reg_4286)? tmp_V_3_fu_3114_p2: tmp_V_16_fu_3120_p2);
assign tmp_V_17_fu_3171_p2 = tmp_V_4_fu_3162_p1;
assign tmp_V_17_fu_3171_p3 = ((isneg_18_reg_4437)? tmp_V_5_fu_3165_p2: tmp_V_17_fu_3171_p2);
assign tmp_V_18_fu_3222_p2 = tmp_V_6_fu_3213_p1;
assign tmp_V_18_fu_3222_p3 = ((isneg_19_reg_4444)? tmp_V_7_fu_3216_p2: tmp_V_18_fu_3222_p2);
assign tmp_V_1_fu_3063_p1 = tmp_V_fu_3060_p1;
assign tmp_V_1_fu_3063_p2 = (ap_const_lv17_0 - tmp_V_1_fu_3063_p1);
assign tmp_V_2_fu_3111_p1 = $signed(p_Val2_63_reg_4254);
assign tmp_V_3_fu_3114_p1 = tmp_V_2_fu_3111_p1;
assign tmp_V_3_fu_3114_p2 = (ap_const_lv17_0 - tmp_V_3_fu_3114_p1);
assign tmp_V_4_fu_3162_p1 = $signed(p_Val2_65_reg_4425);
assign tmp_V_5_fu_3165_p1 = tmp_V_4_fu_3162_p1;
assign tmp_V_5_fu_3165_p2 = (ap_const_lv13_0 - tmp_V_5_fu_3165_p1);
assign tmp_V_6_fu_3213_p1 = $signed(p_Val2_67_reg_4431);
assign tmp_V_7_fu_3216_p1 = tmp_V_6_fu_3213_p1;
assign tmp_V_7_fu_3216_p2 = (ap_const_lv13_0 - tmp_V_7_fu_3216_p1);
assign tmp_V_fu_3060_p1 = $signed(p_Val2_61_reg_4247);
assign tmp_fu_526_p4 = {{{tmp_18_reg_3809}, {ap_const_lv1_1}}, {tmp_21_reg_3814}};
assign tmp_i2_fu_2605_p3 = {{ph_est_V_reg_4374}, {ap_const_lv14_0}};
assign tmp_i_fu_2288_p3 = {{tmp_132_reg_4311}, {ap_const_lv1_1}};
assign tmp_s_fu_824_p1 = $unsigned(exp_tmp_V_2_fu_815_p4);
assign underflow_1_fu_2174_p2 = (brmerge39_i1_i_reg_4281 & isneg_13_reg_4261);
assign underflow_1_not_i_fu_2238_p2 = (underflow_2_fu_2228_p2 ^ ap_const_lv1_1);
assign underflow_2_fu_2228_p2 = (brmerge39_i_i_reg_4306 & isneg_14_reg_4286);
assign underflow_3_fu_2393_p2 = (brmerge39_i_i1_fu_2387_p2 & isneg_15_reg_4321);
assign underflow_4_fu_2560_p2 = (brmerge39_i_i_i_fu_2554_p2 & isneg_16_reg_4350);
assign underflow_4_not_i_fu_2571_p2 = (underflow_4_fu_2560_p2 ^ ap_const_lv1_1);
assign underflow_5_fu_2726_p2 = (isneg_17_fu_2700_p3 & tmp_24_i_fu_2720_p2);
assign underflow_fu_1704_p2 = (neg_src_reg_4120 & brmerge92_i_fu_1699_p2);
assign underflow_not_i1_fu_2404_p2 = (underflow_3_fu_2393_p2 ^ ap_const_lv1_1);
assign underflow_not_i_fu_2184_p2 = (underflow_1_fu_2174_p2 ^ ap_const_lv1_1);
assign v_assign_fu_798_p1 = first_r_V_fu_778_p4;
always @ (posedge ap_clk)
begin
    m_s2mm_ctl_addr_reg_3740[31:0] <= 32'b00000000000000000000000000001100;
    p_this_assign_reg_3882[26:0] <= 27'b000000000000000000000000000;
    sh_assign_1_i_cast1_reg_3892[27:9] <= 19'b0000000000000000000;
    sh_assign_1_i_cast_reg_3897[31:9] <= 23'b00000000000000000000000;
    sh_assign_5_i_cast1_reg_3917[27:9] <= 19'b0000000000000000000;
    sh_assign_5_i_cast_reg_3922[31:9] <= 23'b00000000000000000000000;
end



endmodule //qam_runner

