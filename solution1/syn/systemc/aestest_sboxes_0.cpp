// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ==============================================================

#include "aestest_sboxes_0.h"

using namespace std;
using namespace sc_core;
using namespace sc_dt;

void aestest_sboxes_0::proc_mem_q()
{
    sc_lv<10 * DataWidth> tmp = mem_q.read();
    sc_lv<DataWidth> tmp0 = tmp(10 * DataWidth - 1, 9 * DataWidth);
    q0.write(tmp0);

    sc_lv<DataWidth> tmp1 = tmp(9 * DataWidth - 1, 8 * DataWidth);
    q1.write(tmp1);

    sc_lv<DataWidth> tmp2 = tmp(8 * DataWidth - 1, 7 * DataWidth);
    q2.write(tmp2);

    sc_lv<DataWidth> tmp3 = tmp(7 * DataWidth - 1, 6 * DataWidth);
    q3.write(tmp3);

    sc_lv<DataWidth> tmp4 = tmp(6 * DataWidth - 1, 5 * DataWidth);
    q4.write(tmp4);

    sc_lv<DataWidth> tmp5 = tmp(5 * DataWidth - 1, 4 * DataWidth);
    q5.write(tmp5);

    sc_lv<DataWidth> tmp6 = tmp(4 * DataWidth - 1, 3 * DataWidth);
    q6.write(tmp6);

    sc_lv<DataWidth> tmp7 = tmp(3 * DataWidth - 1, 2 * DataWidth);
    q7.write(tmp7);

    sc_lv<DataWidth> tmp8 = tmp(2 * DataWidth - 1, 1 * DataWidth);
    q8.write(tmp8);

    sc_lv<DataWidth> tmp9 = tmp(1 * DataWidth - 1, 0 * DataWidth);
    q9.write(tmp9);

}


void aestest_sboxes_0::proc_mem_ra()
{
    sc_lv<10 * AddressWidth> tmp;
    tmp = (address0.read(), address1.read(), address2.read(), address3.read(), address4.read(), address5.read(), address6.read(), address7.read(), address8.read(), address9.read());
    mem_ra.write(tmp);
}


void aestest_sboxes_0::proc_mem_ce()
{
    sc_lv<10> tmp;
    tmp[9] = ce0.read();
    tmp[8] = ce1.read();
    tmp[7] = ce2.read();
    tmp[6] = ce3.read();
    tmp[5] = ce4.read();
    tmp[4] = ce5.read();
    tmp[3] = ce6.read();
    tmp[2] = ce7.read();
    tmp[1] = ce8.read();
    tmp[0] = ce9.read();
    mem_ce.write(tmp);
}


