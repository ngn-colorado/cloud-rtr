// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _aes_HH_
#define _aes_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aestest.h"
#include "aes_AXILiteS_s_axi.h"
#include "aes_ddr_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DDR_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DDR_ID_WIDTH = 1,
         unsigned int C_M_AXI_DDR_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DDR_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DDR_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DDR_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DDR_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DDR_BUSER_WIDTH = 1>
struct aes : public sc_module {
    // Port declarations 65
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_ddr_AWVALID;
    sc_in< sc_logic > m_axi_ddr_AWREADY;
    sc_out< sc_uint<C_M_AXI_DDR_ADDR_WIDTH> > m_axi_ddr_AWADDR;
    sc_out< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_AWID;
    sc_out< sc_lv<8> > m_axi_ddr_AWLEN;
    sc_out< sc_lv<3> > m_axi_ddr_AWSIZE;
    sc_out< sc_lv<2> > m_axi_ddr_AWBURST;
    sc_out< sc_lv<2> > m_axi_ddr_AWLOCK;
    sc_out< sc_lv<4> > m_axi_ddr_AWCACHE;
    sc_out< sc_lv<3> > m_axi_ddr_AWPROT;
    sc_out< sc_lv<4> > m_axi_ddr_AWQOS;
    sc_out< sc_lv<4> > m_axi_ddr_AWREGION;
    sc_out< sc_uint<C_M_AXI_DDR_AWUSER_WIDTH> > m_axi_ddr_AWUSER;
    sc_out< sc_logic > m_axi_ddr_WVALID;
    sc_in< sc_logic > m_axi_ddr_WREADY;
    sc_out< sc_uint<C_M_AXI_DDR_DATA_WIDTH> > m_axi_ddr_WDATA;
    sc_out< sc_uint<C_M_AXI_DDR_DATA_WIDTH/8> > m_axi_ddr_WSTRB;
    sc_out< sc_logic > m_axi_ddr_WLAST;
    sc_out< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_WID;
    sc_out< sc_uint<C_M_AXI_DDR_WUSER_WIDTH> > m_axi_ddr_WUSER;
    sc_out< sc_logic > m_axi_ddr_ARVALID;
    sc_in< sc_logic > m_axi_ddr_ARREADY;
    sc_out< sc_uint<C_M_AXI_DDR_ADDR_WIDTH> > m_axi_ddr_ARADDR;
    sc_out< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_ARID;
    sc_out< sc_lv<8> > m_axi_ddr_ARLEN;
    sc_out< sc_lv<3> > m_axi_ddr_ARSIZE;
    sc_out< sc_lv<2> > m_axi_ddr_ARBURST;
    sc_out< sc_lv<2> > m_axi_ddr_ARLOCK;
    sc_out< sc_lv<4> > m_axi_ddr_ARCACHE;
    sc_out< sc_lv<3> > m_axi_ddr_ARPROT;
    sc_out< sc_lv<4> > m_axi_ddr_ARQOS;
    sc_out< sc_lv<4> > m_axi_ddr_ARREGION;
    sc_out< sc_uint<C_M_AXI_DDR_ARUSER_WIDTH> > m_axi_ddr_ARUSER;
    sc_in< sc_logic > m_axi_ddr_RVALID;
    sc_out< sc_logic > m_axi_ddr_RREADY;
    sc_in< sc_uint<C_M_AXI_DDR_DATA_WIDTH> > m_axi_ddr_RDATA;
    sc_in< sc_logic > m_axi_ddr_RLAST;
    sc_in< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_RID;
    sc_in< sc_uint<C_M_AXI_DDR_RUSER_WIDTH> > m_axi_ddr_RUSER;
    sc_in< sc_lv<2> > m_axi_ddr_RRESP;
    sc_in< sc_logic > m_axi_ddr_BVALID;
    sc_out< sc_logic > m_axi_ddr_BREADY;
    sc_in< sc_lv<2> > m_axi_ddr_BRESP;
    sc_in< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_BID;
    sc_in< sc_uint<C_M_AXI_DDR_BUSER_WIDTH> > m_axi_ddr_BUSER;
    sc_out< sc_logic > interrupt;


    // Module declarations
    aes(sc_module_name name);
    SC_HAS_PROCESS(aes);

    ~aes();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    aes_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* aes_AXILiteS_s_axi_U;
    aes_ddr_m_axi<8,32,2,C_M_AXI_DDR_ID_WIDTH,C_M_AXI_DDR_ADDR_WIDTH,C_M_AXI_DDR_DATA_WIDTH,C_M_AXI_DDR_AWUSER_WIDTH,C_M_AXI_DDR_ARUSER_WIDTH,C_M_AXI_DDR_WUSER_WIDTH,C_M_AXI_DDR_RUSER_WIDTH,C_M_AXI_DDR_BUSER_WIDTH,C_M_AXI_DDR_TARGET_ADDR,C_M_AXI_DDR_USER_VALUE,C_M_AXI_DDR_PROT_VALUE,C_M_AXI_DDR_CACHE_VALUE>* aes_ddr_m_axi_U;
    aestest* grp_aestest_fu_284;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > sourceAddress;
    sc_signal< sc_lv<32> > sourceAddress_in_sig;
    sc_signal< sc_lv<32> > sourceAddress_preg;
    sc_signal< sc_logic > sourceAddress_ap_vld;
    sc_signal< sc_logic > sourceAddress_ap_vld_in_sig;
    sc_signal< sc_logic > sourceAddress_ap_vld_preg;
    sc_signal< sc_lv<128> > key_in_V;
    sc_signal< sc_lv<128> > key_in_V_in_sig;
    sc_signal< sc_lv<128> > key_in_V_preg;
    sc_signal< sc_logic > key_in_V_ap_vld;
    sc_signal< sc_logic > key_in_V_ap_vld_in_sig;
    sc_signal< sc_logic > key_in_V_ap_vld_preg;
    sc_signal< sc_lv<32> > destinationAddress;
    sc_signal< sc_lv<32> > destinationAddress_in_sig;
    sc_signal< sc_lv<32> > destinationAddress_preg;
    sc_signal< sc_logic > destinationAddress_ap_vld;
    sc_signal< sc_logic > destinationAddress_ap_vld_in_sig;
    sc_signal< sc_logic > destinationAddress_ap_vld_preg;
    sc_signal< sc_lv<32> > length_r;
    sc_signal< sc_lv<32> > length_r_in_sig;
    sc_signal< sc_lv<32> > length_r_preg;
    sc_signal< sc_logic > length_r_ap_vld;
    sc_signal< sc_logic > length_r_ap_vld_in_sig;
    sc_signal< sc_logic > length_r_ap_vld_preg;
    sc_signal< sc_lv<1> > ap_return;
    sc_signal< sc_logic > ddr_AWVALID;
    sc_signal< sc_logic > ddr_AWREADY;
    sc_signal< sc_lv<32> > ddr_AWADDR;
    sc_signal< sc_lv<1> > ddr_AWID;
    sc_signal< sc_lv<32> > ddr_AWLEN;
    sc_signal< sc_lv<3> > ddr_AWSIZE;
    sc_signal< sc_lv<2> > ddr_AWBURST;
    sc_signal< sc_lv<2> > ddr_AWLOCK;
    sc_signal< sc_lv<4> > ddr_AWCACHE;
    sc_signal< sc_lv<3> > ddr_AWPROT;
    sc_signal< sc_lv<4> > ddr_AWQOS;
    sc_signal< sc_lv<4> > ddr_AWREGION;
    sc_signal< sc_lv<1> > ddr_AWUSER;
    sc_signal< sc_logic > ddr_WVALID;
    sc_signal< sc_logic > ddr_WREADY;
    sc_signal< sc_lv<8> > ddr_WDATA;
    sc_signal< sc_lv<1> > ddr_WSTRB;
    sc_signal< sc_logic > ddr_WLAST;
    sc_signal< sc_lv<1> > ddr_WID;
    sc_signal< sc_lv<1> > ddr_WUSER;
    sc_signal< sc_logic > ddr_ARVALID;
    sc_signal< sc_logic > ddr_ARREADY;
    sc_signal< sc_lv<32> > ddr_ARADDR;
    sc_signal< sc_lv<1> > ddr_ARID;
    sc_signal< sc_lv<32> > ddr_ARLEN;
    sc_signal< sc_lv<3> > ddr_ARSIZE;
    sc_signal< sc_lv<2> > ddr_ARBURST;
    sc_signal< sc_lv<2> > ddr_ARLOCK;
    sc_signal< sc_lv<4> > ddr_ARCACHE;
    sc_signal< sc_lv<3> > ddr_ARPROT;
    sc_signal< sc_lv<4> > ddr_ARQOS;
    sc_signal< sc_lv<4> > ddr_ARREGION;
    sc_signal< sc_lv<1> > ddr_ARUSER;
    sc_signal< sc_logic > ddr_RVALID;
    sc_signal< sc_logic > ddr_RREADY;
    sc_signal< sc_lv<8> > ddr_RDATA;
    sc_signal< sc_logic > ddr_RLAST;
    sc_signal< sc_lv<1> > ddr_RID;
    sc_signal< sc_lv<1> > ddr_RUSER;
    sc_signal< sc_lv<2> > ddr_RRESP;
    sc_signal< sc_logic > ddr_BVALID;
    sc_signal< sc_logic > ddr_BREADY;
    sc_signal< sc_lv<2> > ddr_BRESP;
    sc_signal< sc_lv<1> > ddr_BID;
    sc_signal< sc_lv<1> > ddr_BUSER;
    sc_signal< bool > ap_sig_bdd_254;
    sc_signal< sc_lv<32> > iterations_1_fu_352_p2;
    sc_signal< sc_lv<32> > iterations_1_reg_601;
    sc_signal< sc_lv<5> > i_3_fu_368_p2;
    sc_signal< sc_lv<5> > i_3_reg_609;
    sc_signal< sc_lv<32> > ddr_addr_reg_614;
    sc_signal< sc_lv<1> > exitcond3_fu_362_p2;
    sc_signal< sc_lv<7> > tmp_28_fu_402_p2;
    sc_signal< sc_lv<7> > tmp_28_reg_620;
    sc_signal< sc_lv<4> > j_1_fu_418_p2;
    sc_signal< sc_lv<4> > j_1_reg_628;
    sc_signal< sc_lv<1> > exitcond4_fu_412_p2;
    sc_signal< sc_logic > ap_sig_ioackin_ddr_ARREADY;
    sc_signal< sc_lv<7> > i_assign_fu_424_p2;
    sc_signal< sc_lv<7> > i_assign_reg_633;
    sc_signal< sc_lv<8> > ddr_addr_read_reg_638;
    sc_signal< sc_lv<128> > data_V_2_fu_455_p3;
    sc_signal< sc_lv<8> > mask_2_fu_473_p1;
    sc_signal< sc_lv<128> > grp_aestest_fu_284_ap_return;
    sc_signal< sc_lv<128> > encrypted_data_V_reg_653;
    sc_signal< sc_lv<5> > i_2_fu_487_p2;
    sc_signal< sc_lv<5> > i_2_reg_661;
    sc_signal< sc_lv<8> > current_fu_534_p1;
    sc_signal< sc_lv<8> > current_reg_666;
    sc_signal< sc_lv<1> > exitcond_fu_481_p2;
    sc_signal< sc_lv<32> > ddr_addr_1_reg_671;
    sc_signal< sc_lv<32> > sourceAddressLocal_1_fu_554_p2;
    sc_signal< sc_lv<32> > destinationAddressLocal_1_fu_560_p2;
    sc_signal< sc_logic > grp_aestest_fu_284_ap_rst;
    sc_signal< sc_logic > grp_aestest_fu_284_ap_start;
    sc_signal< sc_logic > grp_aestest_fu_284_ap_done;
    sc_signal< sc_logic > grp_aestest_fu_284_ap_idle;
    sc_signal< sc_logic > grp_aestest_fu_284_ap_ready;
    sc_signal< sc_logic > grp_aestest_fu_284_ap_ce;
    sc_signal< sc_lv<128> > grp_aestest_fu_284_inptext_V_read;
    sc_signal< sc_lv<128> > grp_aestest_fu_284_key_V_read;
    sc_signal< sc_lv<32> > iterations_reg_183;
    sc_signal< sc_lv<32> > sourceAddressLocal1_reg_194;
    sc_signal< sc_lv<32> > destinationAddressLocal1_reg_204;
    sc_signal< sc_lv<128> > data_V_reg_214;
    sc_signal< sc_lv<1> > exitcond8_fu_347_p2;
    sc_signal< sc_lv<5> > i_reg_226;
    sc_signal< sc_lv<128> > p_Val2_1_reg_237;
    sc_signal< sc_lv<4> > j_reg_249;
    sc_signal< sc_lv<8> > mask_reg_260;
    sc_signal< sc_lv<5> > i_1_reg_272;
    sc_signal< sc_logic > grp_aestest_fu_284_ap_start_ap_start_reg;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_lv<64> > tmp_26_fu_380_p1;
    sc_signal< sc_lv<64> > tmp_31_fu_544_p1;
    sc_signal< sc_logic > ap_reg_ioackin_ddr_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_ddr_AWREADY;
    sc_signal< sc_logic > ap_sig_ioackin_ddr_AWREADY;
    sc_signal< sc_logic > ap_sig_ioackin_ddr_WREADY;
    sc_signal< sc_logic > ap_reg_ioackin_ddr_WREADY;
    sc_signal< sc_lv<32> > sourceAddress_assign_fu_136;
    sc_signal< sc_lv<32> > destinationAddress_assign_fu_140;
    sc_signal< sc_lv<32> > i_cast5_fu_358_p1;
    sc_signal< sc_lv<32> > tmp_s_fu_374_p2;
    sc_signal< sc_lv<4> > tmp_fu_390_p1;
    sc_signal< sc_lv<7> > tmp_27_fu_394_p3;
    sc_signal< sc_lv<7> > j_cast3_fu_408_p1;
    sc_signal< sc_lv<8> > tmp_32_fu_429_p2;
    sc_signal< sc_lv<32> > i_assign_cast_fu_440_p1;
    sc_signal< sc_lv<1> > tmp_33_fu_434_p2;
    sc_signal< sc_lv<128> > p_Result_2_fu_443_p5;
    sc_signal< sc_lv<7> > mask_1_fu_463_p4;
    sc_signal< sc_lv<4> > tmp_325_fu_493_p1;
    sc_signal< sc_lv<7> > tmp_29_fu_497_p3;
    sc_signal< sc_lv<7> > Hi_assign_fu_505_p2;
    sc_signal< sc_lv<7> > Lo_assign_fu_515_p2;
    sc_signal< sc_lv<32> > Lo_assign_cast_fu_521_p1;
    sc_signal< sc_lv<32> > Hi_assign_cast_fu_511_p1;
    sc_signal< sc_lv<128> > p_Result_s_fu_525_p4;
    sc_signal< sc_lv<32> > i_1_cast2_fu_477_p1;
    sc_signal< sc_lv<32> > tmp_30_fu_538_p2;
    sc_signal< bool > ap_sig_bdd_1830;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_st8_fsm_7;
    static const sc_lv<5> ap_ST_st9_fsm_8;
    static const sc_lv<5> ap_ST_st10_fsm_9;
    static const sc_lv<5> ap_ST_st11_fsm_10;
    static const sc_lv<5> ap_ST_st12_fsm_11;
    static const sc_lv<5> ap_ST_st13_fsm_12;
    static const sc_lv<5> ap_ST_st14_fsm_13;
    static const sc_lv<5> ap_ST_st15_fsm_14;
    static const sc_lv<5> ap_ST_st16_fsm_15;
    static const sc_lv<5> ap_ST_st17_fsm_16;
    static const sc_lv<5> ap_ST_st18_fsm_17;
    static const sc_lv<5> ap_ST_st19_fsm_18;
    static const sc_lv<5> ap_ST_st20_fsm_19;
    static const sc_lv<5> ap_ST_st21_fsm_20;
    static const sc_lv<5> ap_ST_st22_fsm_21;
    static const sc_lv<5> ap_ST_st23_fsm_22;
    static const sc_lv<5> ap_ST_st24_fsm_23;
    static const sc_lv<5> ap_ST_st25_fsm_24;
    static const sc_lv<5> ap_ST_st26_fsm_25;
    static const sc_lv<5> ap_ST_st27_fsm_26;
    static const sc_lv<5> ap_ST_st28_fsm_27;
    static const sc_lv<5> ap_ST_st29_fsm_28;
    static const sc_lv<5> ap_ST_st30_fsm_29;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const int C_DATA_WIDTH;
    static const int C_M_AXI_DDR_TARGET_ADDR;
    static const int C_M_AXI_DDR_USER_VALUE;
    static const int C_M_AXI_DDR_PROT_VALUE;
    static const int C_M_AXI_DDR_CACHE_VALUE;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_7F;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<7> ap_const_lv7_78;
    static const sc_lv<32> ap_const_lv32_10;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Hi_assign_cast_fu_511_p1();
    void thread_Hi_assign_fu_505_p2();
    void thread_Lo_assign_cast_fu_521_p1();
    void thread_Lo_assign_fu_515_p2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_1830();
    void thread_ap_sig_bdd_254();
    void thread_ap_sig_ioackin_ddr_ARREADY();
    void thread_ap_sig_ioackin_ddr_AWREADY();
    void thread_ap_sig_ioackin_ddr_WREADY();
    void thread_current_fu_534_p1();
    void thread_data_V_2_fu_455_p3();
    void thread_ddr_ARADDR();
    void thread_ddr_ARBURST();
    void thread_ddr_ARCACHE();
    void thread_ddr_ARID();
    void thread_ddr_ARLEN();
    void thread_ddr_ARLOCK();
    void thread_ddr_ARPROT();
    void thread_ddr_ARQOS();
    void thread_ddr_ARREGION();
    void thread_ddr_ARSIZE();
    void thread_ddr_ARUSER();
    void thread_ddr_ARVALID();
    void thread_ddr_AWADDR();
    void thread_ddr_AWBURST();
    void thread_ddr_AWCACHE();
    void thread_ddr_AWID();
    void thread_ddr_AWLEN();
    void thread_ddr_AWLOCK();
    void thread_ddr_AWPROT();
    void thread_ddr_AWQOS();
    void thread_ddr_AWREGION();
    void thread_ddr_AWSIZE();
    void thread_ddr_AWUSER();
    void thread_ddr_AWVALID();
    void thread_ddr_BREADY();
    void thread_ddr_RREADY();
    void thread_ddr_WDATA();
    void thread_ddr_WID();
    void thread_ddr_WLAST();
    void thread_ddr_WSTRB();
    void thread_ddr_WUSER();
    void thread_ddr_WVALID();
    void thread_destinationAddressLocal_1_fu_560_p2();
    void thread_destinationAddress_ap_vld_in_sig();
    void thread_destinationAddress_in_sig();
    void thread_exitcond3_fu_362_p2();
    void thread_exitcond4_fu_412_p2();
    void thread_exitcond8_fu_347_p2();
    void thread_exitcond_fu_481_p2();
    void thread_grp_aestest_fu_284_ap_ce();
    void thread_grp_aestest_fu_284_ap_rst();
    void thread_grp_aestest_fu_284_ap_start();
    void thread_grp_aestest_fu_284_inptext_V_read();
    void thread_grp_aestest_fu_284_key_V_read();
    void thread_i_1_cast2_fu_477_p1();
    void thread_i_2_fu_487_p2();
    void thread_i_3_fu_368_p2();
    void thread_i_assign_cast_fu_440_p1();
    void thread_i_assign_fu_424_p2();
    void thread_i_cast5_fu_358_p1();
    void thread_iterations_1_fu_352_p2();
    void thread_j_1_fu_418_p2();
    void thread_j_cast3_fu_408_p1();
    void thread_key_in_V_ap_vld_in_sig();
    void thread_key_in_V_in_sig();
    void thread_length_r_ap_vld_in_sig();
    void thread_length_r_in_sig();
    void thread_mask_1_fu_463_p4();
    void thread_mask_2_fu_473_p1();
    void thread_p_Result_2_fu_443_p5();
    void thread_p_Result_s_fu_525_p4();
    void thread_sourceAddressLocal_1_fu_554_p2();
    void thread_sourceAddress_ap_vld_in_sig();
    void thread_sourceAddress_in_sig();
    void thread_tmp_26_fu_380_p1();
    void thread_tmp_27_fu_394_p3();
    void thread_tmp_28_fu_402_p2();
    void thread_tmp_29_fu_497_p3();
    void thread_tmp_30_fu_538_p2();
    void thread_tmp_31_fu_544_p1();
    void thread_tmp_325_fu_493_p1();
    void thread_tmp_32_fu_429_p2();
    void thread_tmp_33_fu_434_p2();
    void thread_tmp_fu_390_p1();
    void thread_tmp_s_fu_374_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
