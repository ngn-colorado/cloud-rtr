// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="reset_axi,hls_ip_2014_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.518000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module reset_axi (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_reset,
        reset_out,
        reset_out_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_true = 1'b1;

input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_reset;
output   reset_out;
output   reset_out_ap_vld;

reg reset_out_ap_vld;




/// reset_out_ap_vld assign process. ///
always @ (ap_start)
begin
    if (~(ap_start == ap_const_logic_0)) begin
        reset_out_ap_vld = ap_const_logic_1;
    end else begin
        reset_out_ap_vld = ap_const_logic_0;
    end
end
assign ap_done = ap_start;
assign ap_idle = ap_const_logic_1;
assign ap_ready = ap_start;
assign reset_out = ($signed(in_reset) < $signed(32'b1)? 1'b1: 1'b0);


endmodule //reset_axi

