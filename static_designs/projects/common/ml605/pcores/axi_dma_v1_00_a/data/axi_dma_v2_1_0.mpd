###################################################################
##
## Name     : axi_dma
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN axi_dma

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION IP_GROUP = MICROBLAZE:USER
OPTION DESC = axi_dma
OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = M_DEST_AXI, BUS_STD = AXI, BUS_TYPE = MASTER, ISVALID = (C_DMA_TYPE_DEST == 0)
BUS_INTERFACE BUS = M_SRC_AXI, BUS_STD = AXI, BUS_TYPE = MASTER, ISVALID = (C_DMA_TYPE_SRC == 0)

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_MIN_SIZE = 0x0000ffff, DT = std_logic_vector, BUS = S_AXI
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI, MIN_SIZE = 0x100
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI

PARAMETER C_M_DEST_AXI_PROTOCOL = AXI3, DT = STRING, BUS = M_DEST_AXI, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_M_DEST_AXI_DATA_WIDTH = 64, DT = INTEGER, BUS = M_DEST_AXI, TYPE = NON_HDL
PARAMETER C_M_DEST_AXI_SUPPORTS_NARROW_BURST = 0, DT = INTEGER, TYPE = NON_HDL, BUS = M_DEST_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_INTERCONNECT_M_DEST_AXI_WRITE_ISSUING = 8, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_DEST_AXI
PARAMETER C_M_DEST_AXI_SUPPORTS_READ = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_DEST_AXI
PARAMETER C_M_DEST_AXI_SUPPORTS_WRITE = 1, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_DEST_AXI
PARAMETER C_M_DEST_AXI_THREAD_ID_WIDTH = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_DEST_AXI
PARAMETER C_M_DEST_AXI_SUPPORTS_THREADS = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_DEST_AXI

PARAMETER C_M_SRC_AXI_PROTOCOL = AXI3, DT = STRING, BUS = M_SRC_AXI, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_M_SRC_AXI_DATA_WIDTH = 64, DT = INTEGER, BUS = M_SRC_AXI, TYPE = NON_HDL
PARAMETER C_M_SRC_AXI_SUPPORTS_NARROW_BURST = 0, DT = INTEGER, TYPE = NON_HDL, BUS = M_SRC_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_INTERCONNECT_M_SRC_AXI_READ_ISSUING = 8, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_SRC_AXI
PARAMETER C_M_SRC_AXI_SUPPORTS_READ = 1, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_SRC_AXI
PARAMETER C_M_SRC_AXI_SUPPORTS_WRITE = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_SRC_AXI
PARAMETER C_M_SRC_AXI_THREAD_ID_WIDTH = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_SRC_AXI
PARAMETER C_M_SRC_AXI_SUPPORTS_THREADS = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = M_SRC_AXI

## 0 = AXI MM, 1 = AXI STREAM, 2 = FIFO
PARAMETER C_DMA_TYPE_DEST = 0, DT = INTEGER, RANGE = (0,1,2), VALUES = (0 = Memory mapped AXI, 1 = Streaming AXI, 2 = FIFO), DESC = DMA data destination interface type
PARAMETER C_DMA_TYPE_SRC = 0, DT = INTEGER, RANGE = (0,1,2), VALUES = (0 = Memory mapped AXI, 1 = Streaming AXI, 2 = FIFO), DESC = DMA data source interface type
PARAMETER C_DMA_DATA_WIDTH_DEST = 64, DT = INTEGER, RANGE = (8,16,32,64,128,256,512), DESC = DMA data destination bus width
PARAMETER C_DMA_DATA_WIDTH_SRC = 64, DT = INTEGER, RANGE = (8,16,32,64,128,256,512), DESC = DMA data source bus width

## AXI Passthrough
PORT axil_aclk = "", DIR = O, SIGIS = CLK
PORT axil_aresetn = "", DIR = O, SIGIS = RST
PORT axil_awvalid = "", DIR = O
PORT axil_awaddr = "", DIR = O, VEC = [31:0]
PORT axil_awready = "", DIR = I
PORT axil_wvalid = "", DIR = O
PORT axil_wdata = "", DIR = O, VEC = [31:0]
PORT axil_wstrb = "", DIR = O, VEC = [3:0]
PORT axil_wready = "", DIR = I
PORT axil_bvalid = "", DIR = I
PORT axil_bresp = "", DIR = I, VEC = [1:0]
PORT axil_bready = "", DIR = O
PORT axil_arvalid = "", DIR = O
PORT axil_araddr = "", DIR = O, VEC = [31:0]
PORT axil_arready = "", DIR = I
PORT axil_rvalid = "", DIR = I
PORT axil_rdata = "", DIR = I, VEC = [31:0]
PORT axil_rresp = "", DIR = I, VEC = [1:0]
PORT axil_rready = "", DIR = O

## AXI Interface
PORT s_axi_aclk = ACLK, DIR = I, SIGIS = CLK, BUS = S_AXI
PORT s_axi_aresetn = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT s_axi_awvalid = AWVALID, DIR = I, BUS = S_AXI
PORT s_axi_awaddr = AWADDR, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_awready = AWREADY, DIR = O, BUS = S_AXI
PORT s_axi_wvalid = WVALID, DIR = I, BUS = S_AXI
PORT s_axi_wdata = WDATA, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_wstrb = WSTRB, DIR = I, VEC = [3:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_wready = WREADY, DIR = O, BUS = S_AXI
PORT s_axi_bvalid = BVALID, DIR = O, BUS = S_AXI
PORT s_axi_bresp = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT s_axi_bready = BREADY, DIR = I, BUS = S_AXI
PORT s_axi_arvalid = ARVALID, DIR = I, BUS = S_AXI
PORT s_axi_araddr = ARADDR, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_arready = ARREADY, DIR = O, BUS = S_AXI
PORT s_axi_rvalid = RVALID, DIR = O, BUS = S_AXI
PORT s_axi_rdata = RDATA, DIR = O, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_rresp = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT s_axi_rready = RREADY, DIR = I, BUS = S_AXI

## AXIM (dest) Passthrough
PORT axim_d_aclk = "", DIR = O, SIGIS = CLK
PORT axim_d_aresetn = "", DIR = O, SIGIS = RST
PORT axim_d_awaddr = "", DIR = I, VEC = [31:0], ENDIAN = LITTLE
PORT axim_d_awlen = "", DIR = I, VEC = [7:0]
PORT axim_d_awsize = "", DIR = I, VEC = [2:0]
PORT axim_d_awburst = "", DIR = I, VEC = [1:0]
PORT axim_d_awprot = "", DIR = I, VEC = [2:0]
PORT axim_d_awcache = "", DIR = I, VEC = [3:0]
PORT axim_d_awvalid = "", DIR = I
PORT axim_d_awready = "", DIR = O
PORT axim_d_wdata = "", DIR = I, VEC = [C_DMA_DATA_WIDTH_DEST-1:0], ENDIAN = LITTLE
PORT axim_d_wstrb = "", DIR = I, VEC = [7:0], ENDIAN = LITTLE
PORT axim_d_wready = "", DIR = O
PORT axim_d_wvalid = "", DIR = I
PORT axim_d_wlast = "", DIR = I
PORT axim_d_bready = "", DIR = I
PORT axim_d_bresp = "", DIR = O, VEC = [1:0]
PORT axim_d_bvalid = "", DIR = O

## AXIM (dest) Interface
PORT m_dest_axi_aclk = ACLK, DIR = I, SIGIS = CLK, BUS = M_DEST_AXI
PORT m_dest_axi_aresetn = ARESETN, DIR = I, SIGIS = RST, BUS = M_DEST_AXI
PORT m_dest_axi_awaddr = AWADDR, DIR = O, VEC = [31:0], ENDIAN = LITTLE, BUS = M_DEST_AXI
PORT m_dest_axi_awlen = AWLEN, DIR = O, VEC = [7:0], BUS = M_DEST_AXI
PORT m_dest_axi_awsize = AWSIZE, DIR = O, VEC = [2:0], BUS = M_DEST_AXI
PORT m_dest_axi_awburst = AWBURST, DIR = O, VEC = [1:0], BUS = M_DEST_AXI
PORT m_dest_axi_awprot = AWPROT, DIR = O, VEC = [2:0], BUS = M_DEST_AXI
PORT m_dest_axi_awcache = AWCACHE, DIR = O, VEC = [3:0], BUS = M_DEST_AXI
PORT m_dest_axi_awvalid = AWVALID, DIR = O, BUS = M_DEST_AXI
PORT m_dest_axi_awready = AWREADY, DIR = I, BUS = M_DEST_AXI
PORT m_dest_axi_wdata = WDATA, DIR = O, VEC = [C_DMA_DATA_WIDTH_DEST-1:0], ENDIAN = LITTLE, BUS = M_DEST_AXI
PORT m_dest_axi_wstrb = WSTRB, DIR = O, VEC = [7:0], ENDIAN = LITTLE, BUS = M_DEST_AXI
PORT m_dest_axi_wready = WREADY, DIR = I, BUS = M_DEST_AXI
PORT m_dest_axi_wvalid = WVALID, DIR = O, BUS = M_DEST_AXI
PORT m_dest_axi_wlast = WLAST, DIR = O, BUS = M_DEST_AXI
PORT m_dest_axi_bready = BREADY, DIR = O, BUS = M_DEST_AXI
PORT m_dest_axi_bresp = BRESP, DIR = I, VEC = [1:0], BUS = M_DEST_AXI
PORT m_dest_axi_bvalid = BVALID, DIR = I, BUS = M_DEST_AXI

## AXIM (src) Passthrough
PORT axim_s_aclk = "", DIR = O, SIGIS = CLK
PORT axim_s_aresetn = "", DIR = O, SIGIS = RST
PORT axim_s_araddr = "", DIR = I, VEC = [31:0], ENDIAN = LITTLE
PORT axim_s_arlen = "", DIR = I, VEC = [7:0]
PORT axim_s_arsize = "", DIR = I, VEC = [2:0]
PORT axim_s_arburst = "", DIR = I, VEC = [1:0]
PORT axim_s_arprot = "", DIR = I, VEC = [2:0]
PORT axim_s_arcache = "", DIR = I, VEC = [3:0]
PORT axim_s_arready = "", DIR = O
PORT axim_s_arvalid = "", DIR = I
PORT axim_s_rresp = "", DIR = O, VEC = [1:0]
PORT axim_s_rdata = "", DIR = O, VEC = [C_DMA_DATA_WIDTH_SRC-1:0], ENDIAN = LITTLE
PORT axim_s_rready = "", DIR = I
PORT axim_s_rvalid = "", DIR = O

## AXIM (src) Interface
PORT m_src_axi_aclk = ACLK, DIR = I, SIGIS = CLK, BUS = M_SRC_AXI
PORT m_src_axi_aresetn = ARESETN, DIR = I, SIGIS = RST, BUS = M_SRC_AXI
PORT m_src_axi_araddr = ARADDR, DIR = O, VEC = [31:0], ENDIAN = LITTLE, BUS = M_SRC_AXI
PORT m_src_axi_arlen = ARLEN, DIR = O, VEC = [7:0], BUS = M_SRC_AXI
PORT m_src_axi_arsize = ARSIZE, DIR = O, VEC = [2:0], BUS = M_SRC_AXI
PORT m_src_axi_arburst = ARBURST, DIR = O, VEC = [1:0], BUS = M_SRC_AXI
PORT m_src_axi_arprot = ARPROT, DIR = O, VEC = [2:0], BUS = M_SRC_AXI
PORT m_src_axi_arcache = ARCACHE, DIR = O, VEC = [3:0], BUS = M_SRC_AXI
PORT m_src_axi_arready = ARREADY, DIR = I, BUS = M_SRC_AXI
PORT m_src_axi_arvalid = ARVALID, DIR = O, BUS = M_SRC_AXI
PORT m_src_axi_rresp = RRESP, DIR = I, VEC = [1:0], BUS = M_SRC_AXI
PORT m_src_axi_rdata = RDATA, DIR = I, VEC = [C_DMA_DATA_WIDTH_SRC-1:0], ENDIAN = LITTLE, BUS = M_SRC_AXI
PORT m_src_axi_rready = RREADY, DIR = O, BUS = M_SRC_AXI
PORT m_src_axi_rvalid = RVALID, DIR = I, BUS = M_SRC_AXI

## Interrupt
PORT irq = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH

## Interrupt Passthrough
PORT axim_irq = "", DIR = I

END
