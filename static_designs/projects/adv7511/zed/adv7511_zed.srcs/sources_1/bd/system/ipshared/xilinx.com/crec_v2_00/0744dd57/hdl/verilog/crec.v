// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="crec,hls_ip_2014_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.870000,HLS_SYN_LAT=8,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module crec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        din_i_V,
        din_q_V,
        dout_mix_i_V,
        dout_mix_i_V_ap_vld,
        dout_mix_q_V,
        dout_mix_q_V_ap_vld,
        ph_in_i_V,
        ph_in_q_V,
        ph_out_i_V,
        ph_out_i_V_ap_vld,
        ph_out_q_V,
        ph_out_q_V_ap_vld,
        loop_integ_V,
        loop_integ_V_ap_vld,
        control_qam_V,
        control_lf_p,
        control_lf_i,
        control_lf_out_gain,
        control_reg_clr,
        control_reg_init_V
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b0000;
parameter    ap_ST_st2_fsm_1 = 4'b1;
parameter    ap_ST_st3_fsm_2 = 4'b10;
parameter    ap_ST_st4_fsm_3 = 4'b11;
parameter    ap_ST_st5_fsm_4 = 4'b100;
parameter    ap_ST_st6_fsm_5 = 4'b101;
parameter    ap_ST_st7_fsm_6 = 4'b110;
parameter    ap_ST_st8_fsm_7 = 4'b111;
parameter    ap_ST_st9_fsm_8 = 4'b1000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv5_F = 5'b1111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv14_1FFF = 14'b1111111111111;
parameter    ap_const_lv14_2000 = 14'b10000000000000;
parameter    ap_const_lv9_9 = 9'b1001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv9_1F7 = 9'b111110111;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv28_7FFFFFF = 28'b111111111111111111111111111;
parameter    ap_const_lv28_8000000 = 28'b1000000000000000000000000000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] din_i_V;
input  [15:0] din_q_V;
output  [15:0] dout_mix_i_V;
output   dout_mix_i_V_ap_vld;
output  [15:0] dout_mix_q_V;
output   dout_mix_q_V_ap_vld;
input  [11:0] ph_in_i_V;
input  [11:0] ph_in_q_V;
output  [11:0] ph_out_i_V;
output   ph_out_i_V_ap_vld;
output  [11:0] ph_out_q_V;
output   ph_out_q_V_ap_vld;
output  [27:0] loop_integ_V;
output   loop_integ_V_ap_vld;
input  [1:0] control_qam_V;
input  [7:0] control_lf_p;
input  [7:0] control_lf_i;
input  [7:0] control_lf_out_gain;
input   control_reg_clr;
input  [27:0] control_reg_init_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dout_mix_i_V_ap_vld;
reg dout_mix_q_V_ap_vld;
reg ph_out_i_V_ap_vld;
reg ph_out_q_V_ap_vld;
reg loop_integ_V_ap_vld;
reg   [3:0] ap_CS_fsm = 4'b0000;
reg   [27:0] i_reg_V = 28'b0000000000000000000000000000;
reg   [15:0] phase_angle_V = 16'b0000000000000000;
wire   [9:0] cos_lut_address0;
reg    cos_lut_ce0;
wire   [14:0] cos_lut_q0;
wire   [9:0] cos_lut_address1;
reg    cos_lut_ce1;
wire   [14:0] cos_lut_q1;
reg   [15:0] sd_out_i_V_reg_1516;
reg   [15:0] sd_out_q_V_reg_1522;
reg   [0:0] isneg_reg_1528;
reg   [4:0] p_Val2_7_reg_1534;
reg   [0:0] newsignbit_reg_1540;
reg   [1:0] p_Result_i_reg_1546;
reg   [0:0] isneg_1_reg_1552;
reg   [4:0] p_Val2_9_reg_1558;
reg   [0:0] newsignbit_1_reg_1564;
reg   [1:0] p_Result_1_i_reg_1570;
reg   [0:0] tmp_7_reg_1576;
reg   [0:0] tmp_8_reg_1581;
reg   [0:0] isneg_2_reg_1586;
reg   [13:0] p_Val2_24_reg_1592;
wire   [0:0] brmerge_i_i1_fu_727_p2;
reg   [0:0] brmerge_i_i1_reg_1598;
wire   [0:0] brmerge39_i_i1_fu_745_p2;
reg   [0:0] brmerge39_i_i1_reg_1603;
reg   [0:0] isneg_3_reg_1608;
reg   [13:0] p_Val2_30_reg_1614;
reg   [0:0] newsignbit_3_reg_1620;
reg   [1:0] tmp_reg_1626;
wire   [13:0] ph_est_V_fu_965_p3;
reg   [13:0] ph_est_V_reg_1632;
wire   [0:0] isNeg_1_fu_983_p3;
reg   [0:0] isNeg_1_reg_1637;
wire   [8:0] sh_assign_2_fu_997_p3;
reg   [8:0] sh_assign_2_reg_1642;
reg   [0:0] isneg_4_reg_1648;
wire   [27:0] p_Val2_38_fu_1143_p1;
reg   [27:0] p_Val2_38_reg_1655;
reg   [0:0] newsignbit_4_reg_1661;
wire   [27:0] p_Val2_42_fu_1278_p1;
reg   [27:0] p_Val2_42_reg_1668;
reg   [1:0] msb_V_reg_1673;
wire   [63:0] tmp_29_i_fu_1373_p1;
wire   [63:0] tmp_30_i_fu_1378_p1;
wire   [27:0] p_Val2_52_fu_1155_p3;
wire   [15:0] p_Val2_s_fu_285_p0;
wire   [27:0] OP1_V_fu_277_p1;
wire   [11:0] p_Val2_s_fu_285_p1;
wire   [27:0] OP2_V_fu_281_p1;
wire   [15:0] p_Val2_1_fu_299_p0;
wire   [27:0] OP1_V_1_fu_291_p1;
wire   [11:0] p_Val2_1_fu_299_p1;
wire   [27:0] OP2_V_1_fu_295_p1;
wire   [27:0] p_Val2_s_fu_285_p2;
wire   [15:0] tmp_1_fu_305_p4;
wire   [26:0] tmp_6_i_fu_315_p3;
wire   [27:0] p_Val2_1_fu_299_p2;
wire   [28:0] p_Val2_2_fu_331_p0;
wire   [28:0] tmp_i_fu_327_p1;
wire   [28:0] p_Val2_2_fu_331_p2;
wire   [15:0] p_Val2_3_fu_347_p0;
wire   [11:0] p_Val2_3_fu_347_p1;
wire   [15:0] p_Val2_4_fu_353_p0;
wire   [11:0] p_Val2_4_fu_353_p1;
wire   [27:0] p_Val2_3_fu_347_p2;
wire   [15:0] tmp_2_fu_359_p4;
wire   [26:0] tmp_3_i_fu_369_p3;
wire   [27:0] p_Val2_4_fu_353_p2;
wire   [28:0] p_Val2_5_fu_385_p0;
wire   [28:0] tmp_4_i_fu_381_p1;
wire   [28:0] p_Val2_5_fu_385_p2;
wire   [0:0] p_not_i1_i_fu_473_p2;
wire   [0:0] brmerge_i1_i_fu_478_p2;
wire   [0:0] tmp_5_i2_fu_483_p2;
wire   [0:0] p_not38_i1_i_fu_499_p2;
wire   [0:0] newsignbit_0_not_i1_i_fu_494_p2;
wire   [0:0] brmerge39_i1_i_fu_504_p2;
wire   [0:0] underflow_fu_510_p2;
wire   [0:0] overflow_fu_488_p2;
wire   [0:0] underflow_not_i_fu_521_p2;
wire   [0:0] brmerge_i_i1_i_fu_515_p2;
wire   [0:0] brmerge8_i_fu_527_p2;
wire   [4:0] p_Val2_8_mux_i_fu_533_p3;
wire   [4:0] p_Val2_8_i_fu_540_p3;
wire   [0:0] p_not_i_i_fu_555_p2;
wire   [0:0] brmerge_i_i_fu_560_p2;
wire   [0:0] tmp_7_i_fu_565_p2;
wire   [0:0] p_not38_i_i_fu_581_p2;
wire   [0:0] newsignbit_0_not_i_i_fu_576_p2;
wire   [0:0] brmerge39_i_i_fu_586_p2;
wire   [0:0] underflow_1_fu_592_p2;
wire   [0:0] overflow_1_fu_570_p2;
wire   [0:0] underflow_1_not_i_fu_603_p2;
wire   [0:0] brmerge_i_i_i_fu_597_p2;
wire   [0:0] brmerge9_i_fu_609_p2;
wire   [4:0] p_Val2_10_mux_i_fu_615_p3;
wire   [4:0] p_Val2_i_fu_622_p3;
wire   [4:0] clip_i_V_fu_547_p3;
wire   [4:0] clip_q_V_fu_629_p3;
wire   [1:0] tmp_i4_fu_653_p3;
wire   [4:0] p_Result_s_fu_660_p5;
wire   [15:0] p_Val2_23_fu_679_p0;
wire   [4:0] p_Val2_23_fu_679_p1;
wire   [20:0] p_Val2_23_fu_679_p2;
wire   [1:0] p_Result_i1_fu_711_p4;
wire   [0:0] newsignbit_2_fu_703_p3;
wire   [0:0] p_not_i_i1_fu_721_p2;
wire   [0:0] p_not38_i_i1_fu_739_p2;
wire   [0:0] newsignbit_0_not_i_i1_fu_733_p2;
wire   [1:0] tmp_1_i5_fu_751_p3;
wire   [0:0] tmp_8_i1_fu_770_p2;
wire   [0:0] underflow_2_fu_780_p2;
wire   [0:0] overflow_2_fu_775_p2;
wire   [0:0] underflow_not_i1_fu_790_p2;
wire   [0:0] brmerge_i_i_i1_fu_784_p2;
wire   [0:0] brmerge_i_fu_796_p2;
wire   [13:0] p_Val2_21_mux_i_fu_802_p3;
wire   [13:0] p_Val2_i1_fu_809_p3;
wire   [4:0] p_Result_2_fu_758_p5;
wire   [15:0] p_Val2_6_fu_831_p0;
wire   [4:0] p_Val2_6_fu_831_p1;
wire   [13:0] p_Val2_25_fu_816_p3;
wire   [18:0] tmp_1_i1_fu_837_p3;
wire   [20:0] p_Val2_27_fu_849_p0;
wire   [20:0] p_Val2_6_fu_831_p2;
wire   [20:0] p_Val2_27_fu_849_p2;
wire   [0:0] p_not_i_i_i_fu_891_p2;
wire   [0:0] brmerge_i_i4_i_fu_896_p2;
wire   [0:0] tmp_4_i1_fu_901_p2;
wire   [0:0] p_not38_i_i_i_fu_917_p2;
wire   [0:0] newsignbit_0_not_i_i_i_fu_912_p2;
wire   [0:0] brmerge39_i_i_i_fu_922_p2;
wire   [0:0] underflow_3_fu_928_p2;
wire   [0:0] overflow_3_fu_906_p2;
wire   [0:0] underflow_4_not_i_fu_939_p2;
wire   [0:0] brmerge_i_i_i_i_fu_933_p2;
wire   [0:0] brmerge1_i_fu_945_p2;
wire   [13:0] ssdm_int_14_1024_0_true_V_write_assign_fu_951_p3;
wire   [13:0] p_Val2_1_i_fu_958_p3;
wire   [8:0] sh_assign_1_fu_977_p0;
wire   [8:0] tmp_10_i_cast_fu_973_p1;
wire   [8:0] sh_assign_1_fu_977_p2;
wire   [8:0] tmp_11_i_fu_991_p1;
wire   [8:0] tmp_11_i_fu_991_p2;
wire   [8:0] tmp_5_i_fu_1024_p1;
wire   [8:0] sh_i_cast_fu_1012_p1;
wire   [0:0] isNeg_fu_1016_p3;
wire   [8:0] tmp_5_i_fu_1024_p2;
wire   [8:0] sh_assign_fu_1030_p2;
wire   [8:0] sh_assign_fu_1030_p3;
wire   [27:0] tmp_i2_fu_1005_p3;
wire   [31:0] tmp_7_i1_fu_1050_p0;
wire   [31:0] tmp_6_i2_fu_1046_p1;
wire   [31:0] sh_assign_1_i_cast_fu_1042_p1;
wire   [27:0] sh_assign_1_i_cast1_fu_1038_p1;
wire   [27:0] tmp_9_i1_fu_1056_p2;
wire   [31:0] tmp_7_i1_fu_1050_p2;
wire   [31:0] tmp_9_i32_cast_fu_1062_p1;
wire   [31:0] p_Val2_0_i_i121_in_i_fu_1066_p3;
wire   [31:0] tmp_13_i_fu_1084_p0;
wire   [31:0] tmp_13_i_fu_1084_p1;
wire   [27:0] tmp_15_i_fu_1090_p1;
wire   [27:0] tmp_15_i_fu_1090_p2;
wire   [31:0] tmp_13_i_fu_1084_p2;
wire   [31:0] tmp_15_i_cast_fu_1096_p1;
wire   [31:0] p_in_i_fu_1100_p3;
wire   [27:0] p_Val2_32_fu_1107_p1;
wire   [27:0] p_Val2_34_fu_1115_p2;
wire   [27:0] p_Val2_35_fu_1074_p1;
wire   [28:0] p_Val2_36_fu_1129_p0;
wire   [28:0] p_Val2_36_fu_1129_p1;
wire   [28:0] p_Val2_36_fu_1129_p2;
wire   [0:0] p_Val2_52_fu_1155_p0;
wire   [0:0] tmp_19_i_fu_1170_p2;
wire   [0:0] isneg_not_i_fu_1184_p2;
wire   [0:0] brmerge_i_i_i2_fu_1180_p2;
wire   [0:0] underflow_4_fu_1175_p2;
wire   [0:0] brmerge_i1_fu_1189_p2;
wire   [27:0] p_Val2_28_mux_i_fu_1194_p3;
wire   [27:0] p_Val2_i2_fu_1201_p3;
wire   [8:0] tmp_21_i_fu_1228_p1;
wire   [8:0] sh_1_i_cast_fu_1216_p1;
wire   [0:0] isNeg_2_fu_1220_p3;
wire   [8:0] tmp_21_i_fu_1228_p2;
wire   [8:0] sh_assign_3_fu_1234_p2;
wire   [8:0] sh_assign_3_fu_1234_p3;
wire   [27:0] tmp_20_i_fu_1208_p3;
wire   [31:0] tmp_23_i_fu_1254_p0;
wire   [31:0] sh_assign_5_i_cast_fu_1246_p1;
wire   [27:0] sh_assign_5_i_cast1_fu_1242_p1;
wire   [27:0] tmp_25_i_fu_1260_p2;
wire   [31:0] tmp_23_i_fu_1254_p2;
wire   [31:0] tmp_25_i_cast_fu_1266_p1;
wire   [31:0] p_Val2_0_i_i129_in_i_fu_1270_p3;
wire   [26:0] tmp_26_i_fu_1286_p3;
wire   [28:0] p_Val2_43_fu_1301_p0;
wire   [28:0] tmp_27_i_fu_1298_p1;
wire   [28:0] p_Val2_43_fu_1301_p2;
wire   [9:0] sin_adr_V_fu_1341_p4;
wire   [0:0] tmp_22_fu_1333_p3;
wire   [9:0] cos_adr_V_3_fu_1351_p2;
wire   [9:0] cos_adr_V_fu_1357_p3;
wire   [9:0] sin_adr_V_1_fu_1365_p3;
wire   [15:0] sin_out_V_4_i_cast_fu_1387_p1;
wire   [15:0] cos_out_V_4_i_cast_fu_1383_p1;
wire   [0:0] tmp_31_i_fu_1391_p2;
wire   [0:0] tmp_32_i_fu_1396_p2;
wire   [0:0] sel_tmp3_demorgan_i_fu_1418_p2;
wire   [0:0] tmp_33_i_fu_1401_p2;
wire   [0:0] sel_tmp3_i_fu_1424_p2;
wire   [0:0] sel_tmp4_i_fu_1430_p2;
wire   [15:0] cos_out_V_fu_1412_p2;
wire   [0:0] sel_tmp6_i_fu_1444_p2;
wire   [0:0] sel_tmp7_i_fu_1450_p2;
wire   [15:0] cos_out_V_1_fu_1436_p3;
wire   [15:0] sin_out_V_fu_1406_p2;
wire   [0:0] or_cond_fu_1472_p2;
wire   [15:0] newSel_fu_1464_p3;
wire   [15:0] newSel1_fu_1478_p3;
wire   [15:0] cos_out_V_6_fu_1456_p3;
wire   [15:0] sin_out_V_5_fu_1486_p3;
reg   [3:0] ap_NS_fsm;


crec_cos_lut #(
    .DataWidth( 15 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
cos_lut_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( cos_lut_address0 ),
    .ce0( cos_lut_ce0 ),
    .q0( cos_lut_q0 ),
    .address1( cos_lut_address1 ),
    .ce1( cos_lut_ce1 ),
    .q1( cos_lut_q1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        brmerge39_i_i1_reg_1603 <= brmerge39_i_i1_fu_745_p2;
        brmerge_i_i1_reg_1598 <= brmerge_i_i1_fu_727_p2;
        isneg_2_reg_1586 <= p_Val2_23_fu_679_p2[ap_const_lv32_14];
        p_Val2_24_reg_1592 <= {{p_Val2_23_fu_679_p2[ap_const_lv32_12 : ap_const_lv32_5]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        i_reg_V <= p_Val2_52_fu_1155_p3;
        isneg_4_reg_1648 <= p_Val2_36_fu_1129_p2[ap_const_lv32_1C];
        newsignbit_4_reg_1661 <= p_Val2_36_fu_1129_p2[ap_const_lv32_1B];
        p_Val2_38_reg_1655 <= p_Val2_38_fu_1143_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        isNeg_1_reg_1637 <= sh_assign_1_fu_977_p2[ap_const_lv32_8];
        ph_est_V_reg_1632 <= ph_est_V_fu_965_p3;
        sh_assign_2_reg_1642 <= sh_assign_2_fu_997_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        isneg_1_reg_1552 <= p_Val2_5_fu_385_p2[ap_const_lv32_1A];
        isneg_reg_1528 <= p_Val2_2_fu_331_p2[ap_const_lv32_1A];
        newsignbit_1_reg_1564 <= p_Val2_5_fu_385_p2[ap_const_lv32_18];
        newsignbit_reg_1540 <= p_Val2_2_fu_331_p2[ap_const_lv32_18];
        p_Result_1_i_reg_1570 <= {{p_Val2_5_fu_385_p2[ap_const_lv32_1A : ap_const_lv32_19]}};
        p_Result_i_reg_1546 <= {{p_Val2_2_fu_331_p2[ap_const_lv32_1A : ap_const_lv32_19]}};
        p_Val2_7_reg_1534 <= {{p_Val2_2_fu_331_p2[ap_const_lv32_18 : ap_const_lv32_14]}};
        p_Val2_9_reg_1558 <= {{p_Val2_5_fu_385_p2[ap_const_lv32_18 : ap_const_lv32_14]}};
        sd_out_i_V_reg_1516 <= {{p_Val2_2_fu_331_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
        sd_out_q_V_reg_1522 <= {{p_Val2_5_fu_385_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        isneg_3_reg_1608 <= p_Val2_27_fu_849_p2[ap_const_lv32_14];
        newsignbit_3_reg_1620 <= p_Val2_27_fu_849_p2[ap_const_lv32_12];
        p_Val2_30_reg_1614 <= {{p_Val2_27_fu_849_p2[ap_const_lv32_12 : ap_const_lv32_5]}};
        tmp_reg_1626 <= {{p_Val2_27_fu_849_p2[ap_const_lv32_14 : ap_const_lv32_13]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        msb_V_reg_1673 <= {{p_Val2_43_fu_1301_p2[ap_const_lv32_1A : ap_const_lv32_19]}};
        phase_angle_V <= {{p_Val2_43_fu_1301_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        p_Val2_42_reg_1668 <= p_Val2_42_fu_1278_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        tmp_7_reg_1576 <= clip_i_V_fu_547_p3[ap_const_lv32_4];
        tmp_8_reg_1581 <= clip_q_V_fu_629_p3[ap_const_lv32_4];
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// cos_lut_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        cos_lut_ce0 = ap_const_logic_1;
    end else begin
        cos_lut_ce0 = ap_const_logic_0;
    end
end

/// cos_lut_ce1 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        cos_lut_ce1 = ap_const_logic_1;
    end else begin
        cos_lut_ce1 = ap_const_logic_0;
    end
end

/// dout_mix_i_V_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        dout_mix_i_V_ap_vld = ap_const_logic_1;
    end else begin
        dout_mix_i_V_ap_vld = ap_const_logic_0;
    end
end

/// dout_mix_q_V_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        dout_mix_q_V_ap_vld = ap_const_logic_1;
    end else begin
        dout_mix_q_V_ap_vld = ap_const_logic_0;
    end
end

/// loop_integ_V_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        loop_integ_V_ap_vld = ap_const_logic_1;
    end else begin
        loop_integ_V_ap_vld = ap_const_logic_0;
    end
end

/// ph_out_i_V_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        ph_out_i_V_ap_vld = ap_const_logic_1;
    end else begin
        ph_out_i_V_ap_vld = ap_const_logic_0;
    end
end

/// ph_out_q_V_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        ph_out_q_V_ap_vld = ap_const_logic_1;
    end else begin
        ph_out_q_V_ap_vld = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign OP1_V_1_fu_291_p1 = $signed(din_q_V);
assign OP1_V_fu_277_p1 = $signed(din_i_V);
assign OP2_V_1_fu_295_p1 = $signed(ph_in_q_V);
assign OP2_V_fu_281_p1 = $signed(ph_in_i_V);
assign brmerge1_i_fu_945_p2 = (overflow_3_fu_906_p2 | underflow_4_not_i_fu_939_p2);
assign brmerge39_i1_i_fu_504_p2 = (p_not38_i1_i_fu_499_p2 | newsignbit_0_not_i1_i_fu_494_p2);
assign brmerge39_i_i1_fu_745_p2 = (p_not38_i_i1_fu_739_p2 | newsignbit_0_not_i_i1_fu_733_p2);
assign brmerge39_i_i_fu_586_p2 = (p_not38_i_i_fu_581_p2 | newsignbit_0_not_i_i_fu_576_p2);
assign brmerge39_i_i_i_fu_922_p2 = (p_not38_i_i_i_fu_917_p2 | newsignbit_0_not_i_i_i_fu_912_p2);
assign brmerge8_i_fu_527_p2 = (overflow_fu_488_p2 | underflow_not_i_fu_521_p2);
assign brmerge9_i_fu_609_p2 = (overflow_1_fu_570_p2 | underflow_1_not_i_fu_603_p2);
assign brmerge_i1_fu_1189_p2 = (newsignbit_4_reg_1661 | isneg_not_i_fu_1184_p2);
assign brmerge_i1_i_fu_478_p2 = (newsignbit_reg_1540 | p_not_i1_i_fu_473_p2);
assign brmerge_i_fu_796_p2 = (overflow_2_fu_775_p2 | underflow_not_i1_fu_790_p2);
assign brmerge_i_i1_fu_727_p2 = (newsignbit_2_fu_703_p3 | p_not_i_i1_fu_721_p2);
assign brmerge_i_i1_i_fu_515_p2 = (underflow_fu_510_p2 | overflow_fu_488_p2);
assign brmerge_i_i4_i_fu_896_p2 = (newsignbit_3_reg_1620 | p_not_i_i_i_fu_891_p2);
assign brmerge_i_i_fu_560_p2 = (newsignbit_1_reg_1564 | p_not_i_i_fu_555_p2);
assign brmerge_i_i_i1_fu_784_p2 = (underflow_2_fu_780_p2 | overflow_2_fu_775_p2);
assign brmerge_i_i_i2_fu_1180_p2 = (isneg_4_reg_1648 ^ newsignbit_4_reg_1661);
assign brmerge_i_i_i_fu_597_p2 = (underflow_1_fu_592_p2 | overflow_1_fu_570_p2);
assign brmerge_i_i_i_i_fu_933_p2 = (underflow_3_fu_928_p2 | overflow_3_fu_906_p2);
assign clip_i_V_fu_547_p3 = ((brmerge8_i_fu_527_p2)? p_Val2_8_mux_i_fu_533_p3: p_Val2_8_i_fu_540_p3);
assign clip_q_V_fu_629_p3 = ((brmerge9_i_fu_609_p2)? p_Val2_10_mux_i_fu_615_p3: p_Val2_i_fu_622_p3);
assign cos_adr_V_3_fu_1351_p2 = (sin_adr_V_fu_1341_p4 ^ ap_const_lv10_3FF);
assign cos_adr_V_fu_1357_p3 = ((tmp_22_fu_1333_p3)? cos_adr_V_3_fu_1351_p2: sin_adr_V_fu_1341_p4);
assign cos_lut_address0 = tmp_29_i_fu_1373_p1;
assign cos_lut_address1 = tmp_30_i_fu_1378_p1;
assign cos_out_V_1_fu_1436_p3 = ((sel_tmp4_i_fu_1430_p2)? cos_out_V_4_i_cast_fu_1383_p1: cos_out_V_fu_1412_p2);
assign cos_out_V_4_i_cast_fu_1383_p1 = $unsigned(cos_lut_q0);
assign cos_out_V_6_fu_1456_p3 = ((sel_tmp7_i_fu_1450_p2)? cos_out_V_4_i_cast_fu_1383_p1: cos_out_V_1_fu_1436_p3);
assign cos_out_V_fu_1412_p2 = (ap_const_lv16_0 - cos_out_V_4_i_cast_fu_1383_p1);
assign dout_mix_i_V = sd_out_i_V_reg_1516;
assign dout_mix_q_V = sd_out_q_V_reg_1522;
assign isNeg_1_fu_983_p3 = sh_assign_1_fu_977_p2[ap_const_lv32_8];
assign isNeg_2_fu_1220_p3 = control_lf_out_gain[ap_const_lv32_7];
assign isNeg_fu_1016_p3 = control_lf_p[ap_const_lv32_7];
assign isneg_not_i_fu_1184_p2 = (isneg_4_reg_1648 ^ ap_const_lv1_1);
assign loop_integ_V = ((p_Val2_52_fu_1155_p0)? control_reg_init_V: p_Val2_34_fu_1115_p2);
assign newSel1_fu_1478_p3 = ((tmp_31_i_fu_1391_p2)? sin_out_V_4_i_cast_fu_1387_p1: sin_out_V_fu_1406_p2);
assign newSel_fu_1464_p3 = ((sel_tmp7_i_fu_1450_p2)? sin_out_V_4_i_cast_fu_1387_p1: sin_out_V_fu_1406_p2);
assign newsignbit_0_not_i1_i_fu_494_p2 = (newsignbit_reg_1540 ^ ap_const_lv1_1);
assign newsignbit_0_not_i_i1_fu_733_p2 = (newsignbit_2_fu_703_p3 ^ ap_const_lv1_1);
assign newsignbit_0_not_i_i_fu_576_p2 = (newsignbit_1_reg_1564 ^ ap_const_lv1_1);
assign newsignbit_0_not_i_i_i_fu_912_p2 = (newsignbit_3_reg_1620 ^ ap_const_lv1_1);
assign newsignbit_2_fu_703_p3 = p_Val2_23_fu_679_p2[ap_const_lv32_12];
assign or_cond_fu_1472_p2 = (sel_tmp7_i_fu_1450_p2 | sel_tmp4_i_fu_1430_p2);
assign overflow_1_fu_570_p2 = (brmerge_i_i_fu_560_p2 & tmp_7_i_fu_565_p2);
assign overflow_2_fu_775_p2 = (brmerge_i_i1_reg_1598 & tmp_8_i1_fu_770_p2);
assign overflow_3_fu_906_p2 = (brmerge_i_i4_i_fu_896_p2 & tmp_4_i1_fu_901_p2);
assign overflow_fu_488_p2 = (brmerge_i1_i_fu_478_p2 & tmp_5_i2_fu_483_p2);
assign p_Result_2_fu_758_p5 = {{tmp_1_i5_fu_751_p3}, {ap_const_lv5_0[32'd2 : 32'd0]}};
assign p_Result_i1_fu_711_p4 = {{p_Val2_23_fu_679_p2[ap_const_lv32_14 : ap_const_lv32_13]}};
assign p_Result_s_fu_660_p5 = {{tmp_i4_fu_653_p3}, {ap_const_lv5_0[32'd2 : 32'd0]}};
assign p_Val2_0_i_i121_in_i_fu_1066_p3 = ((isNeg_fu_1016_p3)? tmp_7_i1_fu_1050_p2: tmp_9_i32_cast_fu_1062_p1);
assign p_Val2_0_i_i129_in_i_fu_1270_p3 = ((isNeg_2_fu_1220_p3)? tmp_23_i_fu_1254_p2: tmp_25_i_cast_fu_1266_p1);
assign p_Val2_10_mux_i_fu_615_p3 = ((brmerge_i_i_i_fu_597_p2)? ap_const_lv5_F: p_Val2_9_reg_1558);
assign p_Val2_1_fu_299_p0 = OP1_V_1_fu_291_p1;
assign p_Val2_1_fu_299_p1 = OP2_V_1_fu_295_p1;
assign p_Val2_1_fu_299_p2 = ($signed(p_Val2_1_fu_299_p0) * $signed(p_Val2_1_fu_299_p1));
assign p_Val2_1_i_fu_958_p3 = ((underflow_3_fu_928_p2)? ap_const_lv14_2000: p_Val2_30_reg_1614);
assign p_Val2_21_mux_i_fu_802_p3 = ((brmerge_i_i_i1_fu_784_p2)? ap_const_lv14_1FFF: p_Val2_24_reg_1592);
assign p_Val2_23_fu_679_p0 = sd_out_q_V_reg_1522;
assign p_Val2_23_fu_679_p1 = p_Result_s_fu_660_p5;
assign p_Val2_23_fu_679_p2 = ($signed(p_Val2_23_fu_679_p0) * $signed(p_Val2_23_fu_679_p1));
assign p_Val2_25_fu_816_p3 = ((brmerge_i_fu_796_p2)? p_Val2_21_mux_i_fu_802_p3: p_Val2_i1_fu_809_p3);
assign p_Val2_27_fu_849_p0 = $signed(tmp_1_i1_fu_837_p3);
assign p_Val2_27_fu_849_p2 = (p_Val2_27_fu_849_p0 - p_Val2_6_fu_831_p2);
assign p_Val2_28_mux_i_fu_1194_p3 = ((brmerge_i_i_i2_fu_1180_p2)? ap_const_lv28_7FFFFFF: p_Val2_38_reg_1655);
assign p_Val2_2_fu_331_p0 = $signed(tmp_6_i_fu_315_p3);
assign p_Val2_2_fu_331_p2 = (p_Val2_2_fu_331_p0 - tmp_i_fu_327_p1);
assign p_Val2_32_fu_1107_p1 = p_in_i_fu_1100_p3[27:0];
assign p_Val2_34_fu_1115_p2 = (i_reg_V + p_Val2_32_fu_1107_p1);
assign p_Val2_35_fu_1074_p1 = p_Val2_0_i_i121_in_i_fu_1066_p3[27:0];
assign p_Val2_36_fu_1129_p0 = $signed(p_Val2_35_fu_1074_p1);
assign p_Val2_36_fu_1129_p1 = $signed(p_Val2_34_fu_1115_p2);
assign p_Val2_36_fu_1129_p2 = (p_Val2_36_fu_1129_p0 + p_Val2_36_fu_1129_p1);
assign p_Val2_38_fu_1143_p1 = p_Val2_36_fu_1129_p2[27:0];
assign p_Val2_3_fu_347_p0 = OP1_V_fu_277_p1;
assign p_Val2_3_fu_347_p1 = OP2_V_1_fu_295_p1;
assign p_Val2_3_fu_347_p2 = ($signed(p_Val2_3_fu_347_p0) * $signed(p_Val2_3_fu_347_p1));
assign p_Val2_42_fu_1278_p1 = p_Val2_0_i_i129_in_i_fu_1270_p3[27:0];
assign p_Val2_43_fu_1301_p0 = $signed(tmp_26_i_fu_1286_p3);
assign p_Val2_43_fu_1301_p2 = (p_Val2_43_fu_1301_p0 - tmp_27_i_fu_1298_p1);
assign p_Val2_4_fu_353_p0 = OP1_V_1_fu_291_p1;
assign p_Val2_4_fu_353_p1 = OP2_V_fu_281_p1;
assign p_Val2_4_fu_353_p2 = ($signed(p_Val2_4_fu_353_p0) * $signed(p_Val2_4_fu_353_p1));
assign p_Val2_52_fu_1155_p0 = control_reg_clr;
assign p_Val2_52_fu_1155_p3 = ((p_Val2_52_fu_1155_p0)? control_reg_init_V: p_Val2_34_fu_1115_p2);
assign p_Val2_5_fu_385_p0 = $signed(tmp_3_i_fu_369_p3);
assign p_Val2_5_fu_385_p2 = (p_Val2_5_fu_385_p0 + tmp_4_i_fu_381_p1);
assign p_Val2_6_fu_831_p0 = sd_out_i_V_reg_1516;
assign p_Val2_6_fu_831_p1 = p_Result_2_fu_758_p5;
assign p_Val2_6_fu_831_p2 = ($signed(p_Val2_6_fu_831_p0) * $signed(p_Val2_6_fu_831_p1));
assign p_Val2_8_i_fu_540_p3 = ((underflow_fu_510_p2)? ap_const_lv5_10: p_Val2_7_reg_1534);
assign p_Val2_8_mux_i_fu_533_p3 = ((brmerge_i_i1_i_fu_515_p2)? ap_const_lv5_F: p_Val2_7_reg_1534);
assign p_Val2_i1_fu_809_p3 = ((underflow_2_fu_780_p2)? ap_const_lv14_2000: p_Val2_24_reg_1592);
assign p_Val2_i2_fu_1201_p3 = ((underflow_4_fu_1175_p2)? ap_const_lv28_8000000: p_Val2_38_reg_1655);
assign p_Val2_i_fu_622_p3 = ((underflow_1_fu_592_p2)? ap_const_lv5_10: p_Val2_9_reg_1558);
assign p_Val2_s_fu_285_p0 = OP1_V_fu_277_p1;
assign p_Val2_s_fu_285_p1 = OP2_V_fu_281_p1;
assign p_Val2_s_fu_285_p2 = ($signed(p_Val2_s_fu_285_p0) * $signed(p_Val2_s_fu_285_p1));
assign p_in_i_fu_1100_p3 = ((isNeg_1_reg_1637)? tmp_13_i_fu_1084_p2: tmp_15_i_cast_fu_1096_p1);
assign p_not38_i1_i_fu_499_p2 = (p_Result_i_reg_1546 != ap_const_lv2_3? 1'b1: 1'b0);
assign p_not38_i_i1_fu_739_p2 = (p_Result_i1_fu_711_p4 != ap_const_lv2_3? 1'b1: 1'b0);
assign p_not38_i_i_fu_581_p2 = (p_Result_1_i_reg_1570 != ap_const_lv2_3? 1'b1: 1'b0);
assign p_not38_i_i_i_fu_917_p2 = (tmp_reg_1626 != ap_const_lv2_3? 1'b1: 1'b0);
assign p_not_i1_i_fu_473_p2 = (p_Result_i_reg_1546 != ap_const_lv2_0? 1'b1: 1'b0);
assign p_not_i_i1_fu_721_p2 = (p_Result_i1_fu_711_p4 != ap_const_lv2_0? 1'b1: 1'b0);
assign p_not_i_i_fu_555_p2 = (p_Result_1_i_reg_1570 != ap_const_lv2_0? 1'b1: 1'b0);
assign p_not_i_i_i_fu_891_p2 = (tmp_reg_1626 != ap_const_lv2_0? 1'b1: 1'b0);
assign ph_est_V_fu_965_p3 = ((brmerge1_i_fu_945_p2)? ssdm_int_14_1024_0_true_V_write_assign_fu_951_p3: p_Val2_1_i_fu_958_p3);
assign ph_out_i_V = {{cos_out_V_6_fu_1456_p3[ap_const_lv32_F : ap_const_lv32_4]}};
assign ph_out_q_V = {{sin_out_V_5_fu_1486_p3[ap_const_lv32_F : ap_const_lv32_4]}};
assign sel_tmp3_demorgan_i_fu_1418_p2 = (tmp_31_i_fu_1391_p2 | tmp_32_i_fu_1396_p2);
assign sel_tmp3_i_fu_1424_p2 = (sel_tmp3_demorgan_i_fu_1418_p2 ^ ap_const_lv1_1);
assign sel_tmp4_i_fu_1430_p2 = (tmp_33_i_fu_1401_p2 & sel_tmp3_i_fu_1424_p2);
assign sel_tmp6_i_fu_1444_p2 = (tmp_31_i_fu_1391_p2 ^ ap_const_lv1_1);
assign sel_tmp7_i_fu_1450_p2 = (tmp_32_i_fu_1396_p2 & sel_tmp6_i_fu_1444_p2);
assign sh_1_i_cast_fu_1216_p1 = $signed(control_lf_out_gain);
assign sh_assign_1_fu_977_p0 = tmp_10_i_cast_fu_973_p1;
assign sh_assign_1_fu_977_p2 = (sh_assign_1_fu_977_p0 + ap_const_lv9_9);
assign sh_assign_1_i_cast1_fu_1038_p1 = $unsigned(sh_assign_fu_1030_p3);
assign sh_assign_1_i_cast_fu_1042_p1 = $unsigned(sh_assign_fu_1030_p3);
assign sh_assign_2_fu_997_p3 = ((isNeg_1_fu_983_p3)? tmp_11_i_fu_991_p2: sh_assign_1_fu_977_p2);
assign sh_assign_3_fu_1234_p2 = sh_1_i_cast_fu_1216_p1;
assign sh_assign_3_fu_1234_p3 = ((isNeg_2_fu_1220_p3)? tmp_21_i_fu_1228_p2: sh_assign_3_fu_1234_p2);
assign sh_assign_5_i_cast1_fu_1242_p1 = $unsigned(sh_assign_3_fu_1234_p3);
assign sh_assign_5_i_cast_fu_1246_p1 = $unsigned(sh_assign_3_fu_1234_p3);
assign sh_assign_fu_1030_p2 = sh_i_cast_fu_1012_p1;
assign sh_assign_fu_1030_p3 = ((isNeg_fu_1016_p3)? tmp_5_i_fu_1024_p2: sh_assign_fu_1030_p2);
assign sh_i_cast_fu_1012_p1 = $signed(control_lf_p);
assign sin_adr_V_1_fu_1365_p3 = ((tmp_22_fu_1333_p3)? sin_adr_V_fu_1341_p4: cos_adr_V_3_fu_1351_p2);
assign sin_adr_V_fu_1341_p4 = {{p_Val2_43_fu_1301_p2[ap_const_lv32_18 : ap_const_lv32_F]}};
assign sin_out_V_4_i_cast_fu_1387_p1 = $unsigned(cos_lut_q1);
assign sin_out_V_5_fu_1486_p3 = ((or_cond_fu_1472_p2)? newSel_fu_1464_p3: newSel1_fu_1478_p3);
assign sin_out_V_fu_1406_p2 = (ap_const_lv16_0 - sin_out_V_4_i_cast_fu_1387_p1);
assign ssdm_int_14_1024_0_true_V_write_assign_fu_951_p3 = ((brmerge_i_i_i_i_fu_933_p2)? ap_const_lv14_1FFF: p_Val2_30_reg_1614);
assign tmp_10_i_cast_fu_973_p1 = $signed(control_lf_i);
assign tmp_11_i_fu_991_p1 = tmp_10_i_cast_fu_973_p1;
assign tmp_11_i_fu_991_p2 = (ap_const_lv9_1F7 - tmp_11_i_fu_991_p1);
assign tmp_13_i_fu_1084_p0 = tmp_6_i2_fu_1046_p1;
assign tmp_13_i_fu_1084_p1 = $signed(sh_assign_2_reg_1642);
assign tmp_13_i_fu_1084_p2 = tmp_13_i_fu_1084_p0 << tmp_13_i_fu_1084_p1;
assign tmp_15_i_cast_fu_1096_p1 = $unsigned(tmp_15_i_fu_1090_p2);
assign tmp_15_i_fu_1090_p1 = $signed(sh_assign_2_reg_1642);
assign tmp_15_i_fu_1090_p2 = $signed(tmp_i2_fu_1005_p3) >>> tmp_15_i_fu_1090_p1;
assign tmp_19_i_fu_1170_p2 = (newsignbit_4_reg_1661 ^ ap_const_lv1_1);
assign tmp_1_fu_305_p4 = {{p_Val2_s_fu_285_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
assign tmp_1_i1_fu_837_p3 = {{p_Val2_25_fu_816_p3}, {ap_const_lv5_0}};
assign tmp_1_i5_fu_751_p3 = {{tmp_8_reg_1581}, {ap_const_lv1_1}};
assign tmp_20_i_fu_1208_p3 = ((brmerge_i1_fu_1189_p2)? p_Val2_28_mux_i_fu_1194_p3: p_Val2_i2_fu_1201_p3);
assign tmp_21_i_fu_1228_p1 = sh_1_i_cast_fu_1216_p1;
assign tmp_21_i_fu_1228_p2 = (ap_const_lv9_0 - tmp_21_i_fu_1228_p1);
assign tmp_22_fu_1333_p3 = p_Val2_43_fu_1301_p2[ap_const_lv32_19];
assign tmp_23_i_fu_1254_p0 = $signed(tmp_20_i_fu_1208_p3);
assign tmp_23_i_fu_1254_p2 = tmp_23_i_fu_1254_p0 << sh_assign_5_i_cast_fu_1246_p1;
assign tmp_25_i_cast_fu_1266_p1 = $unsigned(tmp_25_i_fu_1260_p2);
assign tmp_25_i_fu_1260_p2 = $signed(tmp_20_i_fu_1208_p3) >>> sh_assign_5_i_cast1_fu_1242_p1;
assign tmp_26_i_fu_1286_p3 = {{phase_angle_V}, {ap_const_lv11_0}};
assign tmp_27_i_fu_1298_p1 = $unsigned(p_Val2_42_reg_1668);
assign tmp_29_i_fu_1373_p1 = $unsigned(cos_adr_V_fu_1357_p3);
assign tmp_2_fu_359_p4 = {{p_Val2_3_fu_347_p2[ap_const_lv32_1A : ap_const_lv32_B]}};
assign tmp_30_i_fu_1378_p1 = $unsigned(sin_adr_V_1_fu_1365_p3);
assign tmp_31_i_fu_1391_p2 = (msb_V_reg_1673 == ap_const_lv2_1? 1'b1: 1'b0);
assign tmp_32_i_fu_1396_p2 = (msb_V_reg_1673 == ap_const_lv2_0? 1'b1: 1'b0);
assign tmp_33_i_fu_1401_p2 = (msb_V_reg_1673 == ap_const_lv2_3? 1'b1: 1'b0);
assign tmp_3_i_fu_369_p3 = {{tmp_2_fu_359_p4}, {ap_const_lv11_0}};
assign tmp_4_i1_fu_901_p2 = (isneg_3_reg_1608 ^ ap_const_lv1_1);
assign tmp_4_i_fu_381_p1 = $unsigned(p_Val2_4_fu_353_p2);
assign tmp_5_i2_fu_483_p2 = (isneg_reg_1528 ^ ap_const_lv1_1);
assign tmp_5_i_fu_1024_p1 = sh_i_cast_fu_1012_p1;
assign tmp_5_i_fu_1024_p2 = (ap_const_lv9_0 - tmp_5_i_fu_1024_p1);
assign tmp_6_i2_fu_1046_p1 = $signed(tmp_i2_fu_1005_p3);
assign tmp_6_i_fu_315_p3 = {{tmp_1_fu_305_p4}, {ap_const_lv11_0}};
assign tmp_7_i1_fu_1050_p0 = tmp_6_i2_fu_1046_p1;
assign tmp_7_i1_fu_1050_p2 = tmp_7_i1_fu_1050_p0 << sh_assign_1_i_cast_fu_1042_p1;
assign tmp_7_i_fu_565_p2 = (isneg_1_reg_1552 ^ ap_const_lv1_1);
assign tmp_8_i1_fu_770_p2 = (isneg_2_reg_1586 ^ ap_const_lv1_1);
assign tmp_9_i1_fu_1056_p2 = $signed(tmp_i2_fu_1005_p3) >>> sh_assign_1_i_cast1_fu_1038_p1;
assign tmp_9_i32_cast_fu_1062_p1 = $unsigned(tmp_9_i1_fu_1056_p2);
assign tmp_i2_fu_1005_p3 = {{ph_est_V_reg_1632}, {ap_const_lv14_0}};
assign tmp_i4_fu_653_p3 = {{tmp_7_reg_1576}, {ap_const_lv1_1}};
assign tmp_i_fu_327_p1 = $unsigned(p_Val2_1_fu_299_p2);
assign underflow_1_fu_592_p2 = (brmerge39_i_i_fu_586_p2 & isneg_1_reg_1552);
assign underflow_1_not_i_fu_603_p2 = (underflow_1_fu_592_p2 ^ ap_const_lv1_1);
assign underflow_2_fu_780_p2 = (brmerge39_i_i1_reg_1603 & isneg_2_reg_1586);
assign underflow_3_fu_928_p2 = (brmerge39_i_i_i_fu_922_p2 & isneg_3_reg_1608);
assign underflow_4_fu_1175_p2 = (isneg_4_reg_1648 & tmp_19_i_fu_1170_p2);
assign underflow_4_not_i_fu_939_p2 = (underflow_3_fu_928_p2 ^ ap_const_lv1_1);
assign underflow_fu_510_p2 = (brmerge39_i1_i_fu_504_p2 & isneg_reg_1528);
assign underflow_not_i1_fu_790_p2 = (underflow_2_fu_780_p2 ^ ap_const_lv1_1);
assign underflow_not_i_fu_521_p2 = (underflow_fu_510_p2 ^ ap_const_lv1_1);


endmodule //crec

